// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module ifu(	// core/src/ifu.scala:5:7
  input         clock,	// core/src/ifu.scala:5:7
                reset,	// core/src/ifu.scala:5:7
  input  [31:0] io_base_in_bits_data_out,	// core/src/ifu.scala:6:16
  input         io_base_out_ready,	// core/src/ifu.scala:6:16
  output        io_base_out_valid,	// core/src/ifu.scala:6:16
  output [31:0] io_base_out_bits_addr,	// core/src/ifu.scala:6:16
  output        io_next_valid,	// core/src/ifu.scala:6:16
  output [31:0] io_next_bits_pc,	// core/src/ifu.scala:6:16
                io_next_bits_inst,	// core/src/ifu.scala:6:16
  input         io_flush,	// core/src/ifu.scala:6:16
                io_stall,	// core/src/ifu.scala:6:16
  input  [31:0] io_nextPC	// core/src/ifu.scala:6:16
);

  reg [31:0] pc;	// core/src/ifu.scala:19:21
  always @(posedge clock) begin	// core/src/ifu.scala:5:7
    if (reset)	// core/src/ifu.scala:5:7
      pc <= 32'h80000000;	// core/src/ifu.scala:19:21
    else if (io_flush)	// core/src/ifu.scala:6:16
      pc <= io_nextPC;	// core/src/ifu.scala:19:21
    else if (io_stall | ~io_base_out_ready) begin	// core/src/ifu.scala:23:33, :24:12, :26:34
    end
    else	// core/src/ifu.scala:23:33, :24:12, :26:34
      pc <= pc + 32'h4;	// core/src/ifu.scala:19:21, :27:18
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/ifu.scala:5:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/ifu.scala:5:7
      `FIRRTL_BEFORE_INITIAL	// core/src/ifu.scala:5:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/ifu.scala:5:7
      automatic logic [31:0] _RANDOM[0:0];	// core/src/ifu.scala:5:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/ifu.scala:5:7
        `INIT_RANDOM_PROLOG_	// core/src/ifu.scala:5:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/ifu.scala:5:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// core/src/ifu.scala:5:7
        pc = _RANDOM[/*Zero width*/ 1'b0];	// core/src/ifu.scala:5:7, :19:21
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/ifu.scala:5:7
      `FIRRTL_AFTER_INITIAL	// core/src/ifu.scala:5:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_base_out_valid = io_base_out_ready;	// core/src/ifu.scala:5:7
  assign io_base_out_bits_addr = pc;	// core/src/ifu.scala:5:7, :19:21
  assign io_next_valid = io_base_out_ready;	// core/src/ifu.scala:5:7
  assign io_next_bits_pc = pc;	// core/src/ifu.scala:5:7, :19:21
  assign io_next_bits_inst = io_base_in_bits_data_out;	// core/src/ifu.scala:5:7
endmodule

module buffer(	// core/src/core.scala:100:7
  input         clock,	// core/src/core.scala:100:7
                reset,	// core/src/core.scala:100:7
                io_prev_valid,	// core/src/core.scala:101:16
  input  [31:0] io_prev_bits_pc,	// core/src/core.scala:101:16
                io_prev_bits_inst,	// core/src/core.scala:101:16
  output        io_next_valid,	// core/src/core.scala:101:16
  output [31:0] io_next_bits_pc,	// core/src/core.scala:101:16
                io_next_bits_inst,	// core/src/core.scala:101:16
  input         io_stall,	// core/src/core.scala:101:16
                io_flush	// core/src/core.scala:101:16
);

  reg        state;	// core/src/core.scala:107:24
  reg [31:0] regs_pc;	// core/src/core.scala:108:19
  reg [31:0] regs_inst;	// core/src/core.scala:108:19
  always @(posedge clock) begin	// core/src/core.scala:100:7
    if (reset)	// core/src/core.scala:100:7
      state <= 1'h0;	// core/src/core.scala:107:24
    else	// core/src/core.scala:100:7
      state <= ~io_flush & (io_stall ? state : io_prev_valid);	// core/src/core.scala:107:24, :111:28, :112:15, :115:33, :116:15, :119:30
    if (io_flush) begin	// core/src/core.scala:100:7
      regs_pc <= 32'h0;	// core/src/core.scala:108:19, :113:29
      regs_inst <= 32'h0;	// core/src/core.scala:108:19, :113:29
    end
    else if (io_stall) begin	// core/src/core.scala:101:16
    end
    else begin	// core/src/core.scala:101:16
      regs_pc <= io_prev_valid ? io_prev_bits_pc : 32'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
      regs_inst <= io_prev_valid ? io_prev_bits_inst : 32'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/core.scala:100:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/core.scala:100:7
      `FIRRTL_BEFORE_INITIAL	// core/src/core.scala:100:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/core.scala:100:7
      automatic logic [31:0] _RANDOM[0:2];	// core/src/core.scala:100:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/core.scala:100:7
        `INIT_RANDOM_PROLOG_	// core/src/core.scala:100:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/core.scala:100:7
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// core/src/core.scala:100:7
        end	// core/src/core.scala:100:7
        state = _RANDOM[2'h0][0];	// core/src/core.scala:100:7, :107:24
        regs_pc = {_RANDOM[2'h0][31:1], _RANDOM[2'h1][0]};	// core/src/core.scala:100:7, :107:24, :108:19
        regs_inst = {_RANDOM[2'h1][31:1], _RANDOM[2'h2][0]};	// core/src/core.scala:100:7, :108:19
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/core.scala:100:7
      `FIRRTL_AFTER_INITIAL	// core/src/core.scala:100:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_next_valid = state;	// core/src/core.scala:100:7, :107:24
  assign io_next_bits_pc = regs_pc;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_inst = regs_inst;	// core/src/core.scala:100:7, :108:19
endmodule

module ImmGen(	// core/src/idu.scala:341:7
  input  [25:0] io_inst26,	// core/src/idu.scala:342:16
  input  [3:0]  io_immType,	// core/src/idu.scala:342:16
  output [31:0] io_Imm	// core/src/idu.scala:342:16
);

  assign io_Imm =
    io_immType == 4'h8
      ? {{4{io_inst26[9]}}, io_inst26[9:0], io_inst26[25:10], 2'h0}
      : io_immType == 4'h7
          ? {{9{io_inst26[4]}}, io_inst26[4:0], io_inst26[25:10], 2'h0}
          : io_immType == 4'h6
              ? {io_inst26[24:5], 12'h0}
              : io_immType == 4'h5
                  ? {{14{io_inst26[25]}}, io_inst26[25:10], 2'h0}
                  : io_immType == 4'h4
                      ? {{16{io_inst26[23]}}, io_inst26[23:10], 2'h0}
                      : io_immType == 4'h3
                          ? {20'h0, io_inst26[21:10]}
                          : io_immType == 4'h2
                              ? {{20{io_inst26[21]}}, io_inst26[21:10]}
                              : io_immType == 4'h1
                                  ? {{24{io_inst26[17]}}, io_inst26[17:10]}
                                  : io_immType == 4'h0
                                      ? {27'h0, io_inst26[14:10]}
                                      : 32'h0;	// core/src/idu.scala:341:7, :348:42, :350:{37,42,62}, :351:{36,41,55,71}, :352:{37,42,56,72}, :353:38, :354:{37,42,56,72,86}, :355:{37,42,56,72}, :356:{37,47,60}, :357:{37,42,55,70}, :358:{35,40,53,68}
endmodule

module RegFile(	// core/src/idu.scala:319:7
  input         clock,	// core/src/idu.scala:319:7
                reset,	// core/src/idu.scala:319:7
  input  [4:0]  io_rd,	// core/src/idu.scala:320:16
                io_rj,	// core/src/idu.scala:320:16
                io_rk,	// core/src/idu.scala:320:16
  output [31:0] io_rd_data,	// core/src/idu.scala:320:16
                io_rj_data,	// core/src/idu.scala:320:16
                io_rk_data,	// core/src/idu.scala:320:16
  input         io_wen,	// core/src/idu.scala:320:16
  input  [4:0]  io_waddr,	// core/src/idu.scala:320:16
  input  [31:0] io_wdata	// core/src/idu.scala:320:16
);

  reg  [31:0]       reg_0;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_1;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_2;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_3;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_4;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_5;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_6;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_7;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_8;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_9;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_10;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_11;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_12;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_13;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_14;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_15;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_16;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_17;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_18;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_19;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_20;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_21;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_22;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_23;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_24;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_25;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_26;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_27;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_28;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_29;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_30;	// core/src/idu.scala:332:22
  reg  [31:0]       reg_31;	// core/src/idu.scala:332:22
  wire [31:0][31:0] _GEN =
    {{reg_31},
     {reg_30},
     {reg_29},
     {reg_28},
     {reg_27},
     {reg_26},
     {reg_25},
     {reg_24},
     {reg_23},
     {reg_22},
     {reg_21},
     {reg_20},
     {reg_19},
     {reg_18},
     {reg_17},
     {reg_16},
     {reg_15},
     {reg_14},
     {reg_13},
     {reg_12},
     {reg_11},
     {reg_10},
     {reg_9},
     {reg_8},
     {reg_7},
     {reg_6},
     {reg_5},
     {reg_4},
     {reg_3},
     {reg_2},
     {reg_1},
     {reg_0}};	// core/src/idu.scala:332:22, :334:22
  always @(posedge clock) begin	// core/src/idu.scala:319:7
    if (reset) begin	// core/src/idu.scala:319:7
      reg_0 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_1 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_2 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_3 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_4 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_5 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_6 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_7 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_8 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_9 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_10 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_11 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_12 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_13 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_14 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_15 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_16 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_17 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_18 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_19 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_20 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_21 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_22 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_23 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_24 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_25 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_26 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_27 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_28 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_29 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_30 <= 32'h0;	// core/src/idu.scala:332:{22,30}
      reg_31 <= 32'h0;	// core/src/idu.scala:332:{22,30}
    end
    else begin	// core/src/idu.scala:319:7
      if (io_waddr == 5'h0) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_0 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_0 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h1) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_1 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_1 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h2) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_2 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_2 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h3) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_3 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_3 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h4) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_4 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_4 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h5) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_5 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_5 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h6) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_6 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_6 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h7) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_7 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_7 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h8) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_8 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_8 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h9) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_9 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_9 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'hA) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_10 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_10 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'hB) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_11 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_11 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'hC) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_12 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_12 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'hD) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_13 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_13 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'hE) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_14 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_14 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'hF) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_15 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_15 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h10) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_16 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_16 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h11) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_17 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_17 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h12) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_18 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_18 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h13) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_19 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_19 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h14) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_20 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_20 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h15) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_21 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_21 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h16) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_22 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_22 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h17) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_23 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_23 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h18) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_24 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_24 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h19) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_25 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_25 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h1A) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_26 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_26 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h1B) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_27 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_27 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h1C) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_28 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_28 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h1D) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_29 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_29 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (io_waddr == 5'h1E) begin	// core/src/idu.scala:319:7, :338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_30 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_30 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
      if (&io_waddr) begin	// core/src/idu.scala:338:19
        if (io_wen)	// core/src/idu.scala:320:16
          reg_31 <= io_wdata;	// core/src/idu.scala:332:22
        else	// core/src/idu.scala:320:16
          reg_31 <= _GEN[io_waddr];	// core/src/idu.scala:332:22, :334:22, :338:25
      end
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/idu.scala:319:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/idu.scala:319:7
      `FIRRTL_BEFORE_INITIAL	// core/src/idu.scala:319:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/idu.scala:319:7
      automatic logic [31:0] _RANDOM[0:31];	// core/src/idu.scala:319:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/idu.scala:319:7
        `INIT_RANDOM_PROLOG_	// core/src/idu.scala:319:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/idu.scala:319:7
        for (logic [5:0] i = 6'h0; i < 6'h20; i += 6'h1) begin
          _RANDOM[i[4:0]] = `RANDOM;	// core/src/idu.scala:319:7
        end	// core/src/idu.scala:319:7
        reg_0 = _RANDOM[5'h0];	// core/src/idu.scala:319:7, :332:22
        reg_1 = _RANDOM[5'h1];	// core/src/idu.scala:319:7, :332:22
        reg_2 = _RANDOM[5'h2];	// core/src/idu.scala:319:7, :332:22
        reg_3 = _RANDOM[5'h3];	// core/src/idu.scala:319:7, :332:22
        reg_4 = _RANDOM[5'h4];	// core/src/idu.scala:319:7, :332:22
        reg_5 = _RANDOM[5'h5];	// core/src/idu.scala:319:7, :332:22
        reg_6 = _RANDOM[5'h6];	// core/src/idu.scala:319:7, :332:22
        reg_7 = _RANDOM[5'h7];	// core/src/idu.scala:319:7, :332:22
        reg_8 = _RANDOM[5'h8];	// core/src/idu.scala:319:7, :332:22
        reg_9 = _RANDOM[5'h9];	// core/src/idu.scala:319:7, :332:22
        reg_10 = _RANDOM[5'hA];	// core/src/idu.scala:319:7, :332:22
        reg_11 = _RANDOM[5'hB];	// core/src/idu.scala:319:7, :332:22
        reg_12 = _RANDOM[5'hC];	// core/src/idu.scala:319:7, :332:22
        reg_13 = _RANDOM[5'hD];	// core/src/idu.scala:319:7, :332:22
        reg_14 = _RANDOM[5'hE];	// core/src/idu.scala:319:7, :332:22
        reg_15 = _RANDOM[5'hF];	// core/src/idu.scala:319:7, :332:22
        reg_16 = _RANDOM[5'h10];	// core/src/idu.scala:319:7, :332:22
        reg_17 = _RANDOM[5'h11];	// core/src/idu.scala:319:7, :332:22
        reg_18 = _RANDOM[5'h12];	// core/src/idu.scala:319:7, :332:22
        reg_19 = _RANDOM[5'h13];	// core/src/idu.scala:319:7, :332:22
        reg_20 = _RANDOM[5'h14];	// core/src/idu.scala:319:7, :332:22
        reg_21 = _RANDOM[5'h15];	// core/src/idu.scala:319:7, :332:22
        reg_22 = _RANDOM[5'h16];	// core/src/idu.scala:319:7, :332:22
        reg_23 = _RANDOM[5'h17];	// core/src/idu.scala:319:7, :332:22
        reg_24 = _RANDOM[5'h18];	// core/src/idu.scala:319:7, :332:22
        reg_25 = _RANDOM[5'h19];	// core/src/idu.scala:319:7, :332:22
        reg_26 = _RANDOM[5'h1A];	// core/src/idu.scala:319:7, :332:22
        reg_27 = _RANDOM[5'h1B];	// core/src/idu.scala:319:7, :332:22
        reg_28 = _RANDOM[5'h1C];	// core/src/idu.scala:319:7, :332:22
        reg_29 = _RANDOM[5'h1D];	// core/src/idu.scala:319:7, :332:22
        reg_30 = _RANDOM[5'h1E];	// core/src/idu.scala:319:7, :332:22
        reg_31 = _RANDOM[5'h1F];	// core/src/idu.scala:319:7, :332:22
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/idu.scala:319:7
      `FIRRTL_AFTER_INITIAL	// core/src/idu.scala:319:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_rd_data = io_rd == 5'h0 ? 32'h0 : _GEN[io_rd];	// core/src/idu.scala:319:7, :332:30, :334:{22,29}
  assign io_rj_data = io_rj == 5'h0 ? 32'h0 : _GEN[io_rj];	// core/src/idu.scala:319:7, :332:30, :334:22, :335:{22,29}
  assign io_rk_data = io_rk == 5'h0 ? 32'h0 : _GEN[io_rk];	// core/src/idu.scala:319:7, :332:30, :334:22, :336:{22,29}
endmodule

module idu(	// core/src/idu.scala:135:7
  input         clock,	// core/src/idu.scala:135:7
                reset,	// core/src/idu.scala:135:7
                io_prev_valid,	// core/src/idu.scala:136:16
  input  [31:0] io_prev_bits_pc,	// core/src/idu.scala:136:16
                io_prev_bits_inst,	// core/src/idu.scala:136:16
  output        io_next_valid,	// core/src/idu.scala:136:16
  output [3:0]  io_next_bits_aluOp,	// core/src/idu.scala:136:16
  output [1:0]  io_next_bits_aluAsrc,	// core/src/idu.scala:136:16
  output [2:0]  io_next_bits_aluBsrc,	// core/src/idu.scala:136:16
  output [3:0]  io_next_bits_branchOp,	// core/src/idu.scala:136:16
                io_next_bits_memOp,	// core/src/idu.scala:136:16
  output [1:0]  io_next_bits_wbSel,	// core/src/idu.scala:136:16
                io_next_bits_wbDst,	// core/src/idu.scala:136:16
  output [31:0] io_next_bits_Imm,	// core/src/idu.scala:136:16
  output [4:0]  io_next_bits_rd,	// core/src/idu.scala:136:16
  output [31:0] io_next_bits_rd_data,	// core/src/idu.scala:136:16
                io_next_bits_rj_data,	// core/src/idu.scala:136:16
                io_next_bits_rk_data,	// core/src/idu.scala:136:16
  output [2:0]  io_next_bits_FwEX_RD,	// core/src/idu.scala:136:16
                io_next_bits_FwEX_RJ,	// core/src/idu.scala:136:16
                io_next_bits_FwEX_RK,	// core/src/idu.scala:136:16
  output [31:0] io_next_bits_pc,	// core/src/idu.scala:136:16
  input         io_stall,	// core/src/idu.scala:136:16
                io_flush,	// core/src/idu.scala:136:16
                io_wen,	// core/src/idu.scala:136:16
  input  [4:0]  io_waddr,	// core/src/idu.scala:136:16
  input  [31:0] io_wdata,	// core/src/idu.scala:136:16
  output [4:0]  io_RJ,	// core/src/idu.scala:136:16
                io_RK,	// core/src/idu.scala:136:16
                io_RD,	// core/src/idu.scala:136:16
                io_RDst,	// core/src/idu.scala:136:16
  output [1:0]  io_RSel,	// core/src/idu.scala:136:16
  input  [2:0]  io_FwID_RJ,	// core/src/idu.scala:136:16
                io_FwID_RK,	// core/src/idu.scala:136:16
                io_FwID_RD,	// core/src/idu.scala:136:16
                io_FwEX_RJ,	// core/src/idu.scala:136:16
                io_FwEX_RK,	// core/src/idu.scala:136:16
                io_FwEX_RD,	// core/src/idu.scala:136:16
  input  [31:0] io_ELALU,	// core/src/idu.scala:136:16
                io_LWALU,	// core/src/idu.scala:136:16
                io_LWMEM,	// core/src/idu.scala:136:16
                io_MULP	// core/src/idu.scala:136:16
);

  wire [31:0] _regFile_io_rd_data;	// core/src/idu.scala:266:25
  wire [31:0] _regFile_io_rj_data;	// core/src/idu.scala:266:25
  wire [31:0] _regFile_io_rk_data;	// core/src/idu.scala:266:25
  wire        _Decode_T_1 = io_prev_bits_inst[31:15] == 17'h20;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_3 = io_prev_bits_inst[31:15] == 17'h22;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_5 = io_prev_bits_inst[31:15] == 17'h24;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_7 = io_prev_bits_inst[31:15] == 17'h25;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_9 = io_prev_bits_inst[31:15] == 17'h28;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_11 = io_prev_bits_inst[31:15] == 17'h29;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_13 = io_prev_bits_inst[31:15] == 17'h2A;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_15 = io_prev_bits_inst[31:15] == 17'h2B;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_17 = io_prev_bits_inst[31:15] == 17'h2E;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_19 = io_prev_bits_inst[31:15] == 17'h2F;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_21 = io_prev_bits_inst[31:15] == 17'h30;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_23 = io_prev_bits_inst[31:15] == 17'h38;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_25 = io_prev_bits_inst[31:15] == 17'h81;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_27 = io_prev_bits_inst[31:15] == 17'h89;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_29 = io_prev_bits_inst[31:15] == 17'h91;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_31 = io_prev_bits_inst[31:22] == 10'h8;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_33 = io_prev_bits_inst[31:22] == 10'h9;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_35 = io_prev_bits_inst[31:22] == 10'hA;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_37 = io_prev_bits_inst[31:22] == 10'hD;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_39 = io_prev_bits_inst[31:22] == 10'hE;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_41 = io_prev_bits_inst[31:22] == 10'hF;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_43 = io_prev_bits_inst[31:25] == 7'hA;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_45 = io_prev_bits_inst[31:25] == 7'hE;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_47 = io_prev_bits_inst[31:22] == 10'hA0;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_49 = io_prev_bits_inst[31:22] == 10'hA1;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_51 = io_prev_bits_inst[31:22] == 10'hA2;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_53 = io_prev_bits_inst[31:22] == 10'hA4;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_55 = io_prev_bits_inst[31:22] == 10'hA5;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_57 = io_prev_bits_inst[31:22] == 10'hA6;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_59 = io_prev_bits_inst[31:22] == 10'hA8;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_61 = io_prev_bits_inst[31:22] == 10'hA9;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_63 = io_prev_bits_inst[31:26] == 6'h13;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_65 = io_prev_bits_inst[31:26] == 6'h14;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_67 = io_prev_bits_inst[31:26] == 6'h15;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_69 = io_prev_bits_inst[31:26] == 6'h16;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_71 = io_prev_bits_inst[31:26] == 6'h17;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_73 = io_prev_bits_inst[31:26] == 6'h18;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_75 = io_prev_bits_inst[31:26] == 6'h19;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_77 = io_prev_bits_inst[31:26] == 6'h1A;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_79 = io_prev_bits_inst[31:26] == 6'h1B;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN =
    _Decode_T_69 | _Decode_T_71 | _Decode_T_73 | _Decode_T_75 | _Decode_T_77
    | _Decode_T_79;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_0 = _Decode_T_59 | _Decode_T_61 | _Decode_T_63;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_1 = _Decode_T_59 | _Decode_T_61;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_2 =
    _Decode_T_47 | _Decode_T_49 | _Decode_T_51 | _Decode_T_53 | _Decode_T_55
    | _Decode_T_57 | _GEN_1;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_3 = _Decode_T_37 | _Decode_T_39 | _Decode_T_41;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_4 =
    _Decode_T_25 | _Decode_T_27 | _Decode_T_29 | _Decode_T_31 | _Decode_T_33
    | _Decode_T_35 | _Decode_T_37 | _Decode_T_39 | _Decode_T_41 | _Decode_T_43
    | _Decode_T_45 | _GEN_2;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_5 =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
    | _Decode_T_23;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_6 = _Decode_T_43 | _Decode_T_45;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_7 =
    _Decode_T_25 | _Decode_T_27 | _Decode_T_29 | _Decode_T_31 | _Decode_T_33
    | _Decode_T_35 | _Decode_T_37 | _Decode_T_39 | _Decode_T_41 | _GEN_6;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_8 = _Decode_T_65 | ~_Decode_T_67;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_9 = _Decode_T_53 | _Decode_T_55 | _Decode_T_57;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_10 = _Decode_T_47 | _Decode_T_49 | _Decode_T_51;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire [1:0]  io_RSel_0 =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
      ? 2'h0
      : _Decode_T_23
          ? 2'h2
          : _GEN_7
              ? 2'h0
              : _GEN_10
                  ? 2'h1
                  : _GEN_9 ? 2'h3 : _GEN_1 ? 2'h1 : _Decode_T_63 ? 2'h0 : {2{_GEN_8}};	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire [1:0]  Decode_7 =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
    | _Decode_T_23 | _Decode_T_25 | _Decode_T_27 | _Decode_T_29 | _Decode_T_31
    | _Decode_T_33 | _Decode_T_35 | _Decode_T_37 | _Decode_T_39 | _Decode_T_41
    | _Decode_T_43 | _Decode_T_45 | _GEN_10
      ? 2'h0
      : _GEN_9 ? 2'h2 : _GEN_0 ? 2'h0 : _GEN_8 ? 2'h2 : 2'h1;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  ImmGen immGen (	// core/src/idu.scala:262:24
    .io_inst26  (io_prev_bits_inst[25:0]),	// core/src/idu.scala:263:42
    .io_immType
      (_GEN_5
         ? 4'h9
         : _Decode_T_25 | _Decode_T_27 | _Decode_T_29
             ? 4'h0
             : _Decode_T_31 | _Decode_T_33 | _Decode_T_35
                 ? 4'h2
                 : _GEN_3
                     ? 4'h3
                     : _GEN_6
                         ? 4'h6
                         : _GEN_2
                             ? 4'h2
                             : _Decode_T_63
                                 ? 4'h5
                                 : _Decode_T_65 | _Decode_T_67
                                     ? 4'h8
                                     : _GEN ? 4'h5 : 4'h9),	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
    .io_Imm     (io_next_bits_Imm)
  );
  RegFile regFile (	// core/src/idu.scala:266:25
    .clock      (clock),
    .reset      (reset),
    .io_rd      (io_prev_bits_inst[4:0]),	// core/src/idu.scala:267:39
    .io_rj      (io_prev_bits_inst[9:5]),	// core/src/idu.scala:268:39
    .io_rk      (io_prev_bits_inst[14:10]),	// core/src/idu.scala:269:39
    .io_rd_data (_regFile_io_rd_data),
    .io_rj_data (_regFile_io_rj_data),
    .io_rk_data (_regFile_io_rk_data),
    .io_wen     (io_wen),
    .io_waddr   (io_waddr),
    .io_wdata   (io_wdata)
  );
  assign io_next_valid = io_prev_valid & ~io_stall & ~io_flush;	// core/src/idu.scala:135:7, :315:{48,56,68}
  assign io_next_bits_aluOp =
    _Decode_T_1
      ? 4'h0
      : _Decode_T_3
          ? 4'h1
          : _Decode_T_5
              ? 4'h2
              : _Decode_T_7
                  ? 4'h3
                  : _Decode_T_9
                      ? 4'h7
                      : _Decode_T_11
                          ? 4'h4
                          : _Decode_T_13
                              ? 4'h5
                              : _Decode_T_15
                                  ? 4'h6
                                  : _Decode_T_17
                                      ? 4'h8
                                      : _Decode_T_19
                                          ? 4'h9
                                          : _Decode_T_21
                                              ? 4'hA
                                              : _Decode_T_23
                                                  ? 4'hB
                                                  : _Decode_T_25
                                                      ? 4'h8
                                                      : _Decode_T_27
                                                          ? 4'h9
                                                          : _Decode_T_29
                                                              ? 4'hA
                                                              : _Decode_T_31
                                                                  ? 4'h2
                                                                  : _Decode_T_33
                                                                      ? 4'h3
                                                                      : _Decode_T_35
                                                                          ? 4'h0
                                                                          : _Decode_T_37
                                                                              ? 4'h4
                                                                              : _Decode_T_39
                                                                                  ? 4'h5
                                                                                  : _Decode_T_41
                                                                                      ? 4'h6
                                                                                      : _Decode_T_43
                                                                                        | _Decode_T_45
                                                                                        | _Decode_T_47
                                                                                        | _Decode_T_49
                                                                                        | _Decode_T_51
                                                                                        | _Decode_T_53
                                                                                        | _Decode_T_55
                                                                                        | _Decode_T_57
                                                                                        | _GEN_0
                                                                                          ? 4'h0
                                                                                          : _Decode_T_65
                                                                                              ? 4'hC
                                                                                              : _Decode_T_67
                                                                                                  ? 4'h0
                                                                                                  : _GEN
                                                                                                      ? 4'h1
                                                                                                      : 4'hC;	// core/src/idu.scala:135:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_aluAsrc =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
    | _Decode_T_23 | _Decode_T_25 | _Decode_T_27 | _Decode_T_29 | _Decode_T_31
    | _Decode_T_33 | _Decode_T_35 | _GEN_3
      ? 2'h0
      : _Decode_T_43
          ? 2'h2
          : _Decode_T_45
              ? 2'h1
              : _GEN_2
                  ? 2'h0
                  : _Decode_T_63
                      ? 2'h1
                      : _Decode_T_65 ? 2'h2 : _Decode_T_67 ? 2'h1 : {~_GEN, 1'h0};	// core/src/idu.scala:135:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_aluBsrc =
    _GEN_5
      ? 3'h0
      : _GEN_4
          ? 3'h2
          : _Decode_T_63
              ? 3'h3
              : _Decode_T_65 ? 3'h4 : _Decode_T_67 ? 3'h3 : _GEN ? 3'h1 : 3'h4;	// core/src/idu.scala:135:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_branchOp =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
    | _Decode_T_23 | _GEN_4
      ? 4'h9
      : _Decode_T_63
          ? 4'h8
          : _Decode_T_65
              ? 4'h6
              : _Decode_T_67
                  ? 4'h7
                  : _Decode_T_69
                      ? 4'h0
                      : _Decode_T_71
                          ? 4'h1
                          : _Decode_T_73
                              ? 4'h2
                              : _Decode_T_75
                                  ? 4'h3
                                  : _Decode_T_77 ? 4'h4 : _Decode_T_79 ? 4'h5 : 4'h9;	// core/src/idu.scala:135:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_memOp =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
    | _Decode_T_23 | _GEN_7
      ? 4'h8
      : _Decode_T_47
          ? 4'h0
          : _Decode_T_49
              ? 4'h2
              : _Decode_T_51
                  ? 4'h4
                  : _Decode_T_53
                      ? 4'h5
                      : _Decode_T_55
                          ? 4'h6
                          : _Decode_T_57
                              ? 4'h7
                              : _Decode_T_59 ? 4'h1 : _Decode_T_61 ? 4'h3 : 4'h8;	// core/src/idu.scala:135:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_wbSel = io_RSel_0;	// core/src/idu.scala:135:7, src/main/scala/chisel3/util/Lookup.scala:34:39
  assign io_next_bits_wbDst = Decode_7;	// core/src/idu.scala:135:7, src/main/scala/chisel3/util/Lookup.scala:34:39
  assign io_next_bits_rd = io_prev_bits_inst[4:0];	// core/src/idu.scala:135:7, :267:39
  assign io_next_bits_rd_data =
    io_FwID_RD == 3'h3
      ? io_MULP
      : io_FwID_RD == 3'h2
          ? io_LWMEM
          : io_FwID_RD == 3'h1
              ? io_LWALU
              : io_FwID_RD == 3'h0 ? io_ELALU : _regFile_io_rd_data;	// core/src/idu.scala:135:7, :266:25, :289:63, src/main/scala/chisel3/util/Lookup.scala:34:39
  assign io_next_bits_rj_data =
    io_FwID_RJ == 3'h3
      ? io_MULP
      : io_FwID_RJ == 3'h2
          ? io_LWMEM
          : io_FwID_RJ == 3'h1
              ? io_LWALU
              : io_FwID_RJ == 3'h0 ? io_ELALU : _regFile_io_rj_data;	// core/src/idu.scala:135:7, :266:25, :290:63, src/main/scala/chisel3/util/Lookup.scala:34:39
  assign io_next_bits_rk_data =
    io_FwID_RK == 3'h3
      ? io_MULP
      : io_FwID_RK == 3'h2
          ? io_LWMEM
          : io_FwID_RK == 3'h1
              ? io_LWALU
              : io_FwID_RK == 3'h0 ? io_ELALU : _regFile_io_rk_data;	// core/src/idu.scala:135:7, :266:25, :291:63, src/main/scala/chisel3/util/Lookup.scala:34:39
  assign io_next_bits_FwEX_RD = io_FwEX_RD;	// core/src/idu.scala:135:7
  assign io_next_bits_FwEX_RJ = io_FwEX_RJ;	// core/src/idu.scala:135:7
  assign io_next_bits_FwEX_RK = io_FwEX_RK;	// core/src/idu.scala:135:7
  assign io_next_bits_pc = io_prev_bits_pc;	// core/src/idu.scala:135:7
  assign io_RJ = io_prev_bits_inst[9:5];	// core/src/idu.scala:135:7, :268:39
  assign io_RK = io_prev_bits_inst[14:10];	// core/src/idu.scala:135:7, :269:39
  assign io_RD = io_prev_bits_inst[4:0];	// core/src/idu.scala:135:7, :267:39
  assign io_RDst =
    Decode_7 == 2'h1 ? 5'h1 : Decode_7 == 2'h0 ? io_prev_bits_inst[4:0] : 5'h0;	// core/src/idu.scala:135:7, :267:39, :278:42, src/main/scala/chisel3/util/Lookup.scala:34:39
  assign io_RSel = io_RSel_0;	// core/src/idu.scala:135:7, src/main/scala/chisel3/util/Lookup.scala:34:39
endmodule

module buffer_1(	// core/src/core.scala:100:7
  input         clock,	// core/src/core.scala:100:7
                reset,	// core/src/core.scala:100:7
                io_prev_valid,	// core/src/core.scala:101:16
  input  [3:0]  io_prev_bits_aluOp,	// core/src/core.scala:101:16
  input  [1:0]  io_prev_bits_aluAsrc,	// core/src/core.scala:101:16
  input  [2:0]  io_prev_bits_aluBsrc,	// core/src/core.scala:101:16
  input  [3:0]  io_prev_bits_branchOp,	// core/src/core.scala:101:16
                io_prev_bits_memOp,	// core/src/core.scala:101:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/core.scala:101:16
                io_prev_bits_wbDst,	// core/src/core.scala:101:16
  input  [31:0] io_prev_bits_Imm,	// core/src/core.scala:101:16
  input  [4:0]  io_prev_bits_rd,	// core/src/core.scala:101:16
  input  [31:0] io_prev_bits_rd_data,	// core/src/core.scala:101:16
                io_prev_bits_rj_data,	// core/src/core.scala:101:16
                io_prev_bits_rk_data,	// core/src/core.scala:101:16
  input  [2:0]  io_prev_bits_FwEX_RD,	// core/src/core.scala:101:16
                io_prev_bits_FwEX_RJ,	// core/src/core.scala:101:16
                io_prev_bits_FwEX_RK,	// core/src/core.scala:101:16
  input  [31:0] io_prev_bits_pc,	// core/src/core.scala:101:16
  output        io_next_valid,	// core/src/core.scala:101:16
  output [3:0]  io_next_bits_aluOp,	// core/src/core.scala:101:16
  output [1:0]  io_next_bits_aluAsrc,	// core/src/core.scala:101:16
  output [2:0]  io_next_bits_aluBsrc,	// core/src/core.scala:101:16
  output [3:0]  io_next_bits_branchOp,	// core/src/core.scala:101:16
                io_next_bits_memOp,	// core/src/core.scala:101:16
  output [1:0]  io_next_bits_wbSel,	// core/src/core.scala:101:16
                io_next_bits_wbDst,	// core/src/core.scala:101:16
  output [31:0] io_next_bits_Imm,	// core/src/core.scala:101:16
  output [4:0]  io_next_bits_rd,	// core/src/core.scala:101:16
  output [31:0] io_next_bits_rd_data,	// core/src/core.scala:101:16
                io_next_bits_rj_data,	// core/src/core.scala:101:16
                io_next_bits_rk_data,	// core/src/core.scala:101:16
  output [2:0]  io_next_bits_FwEX_RD,	// core/src/core.scala:101:16
                io_next_bits_FwEX_RJ,	// core/src/core.scala:101:16
                io_next_bits_FwEX_RK,	// core/src/core.scala:101:16
  output [31:0] io_next_bits_pc,	// core/src/core.scala:101:16
  input         io_flush	// core/src/core.scala:101:16
);

  reg        state;	// core/src/core.scala:107:24
  reg [3:0]  regs_aluOp;	// core/src/core.scala:108:19
  reg [1:0]  regs_aluAsrc;	// core/src/core.scala:108:19
  reg [2:0]  regs_aluBsrc;	// core/src/core.scala:108:19
  reg [3:0]  regs_branchOp;	// core/src/core.scala:108:19
  reg [3:0]  regs_memOp;	// core/src/core.scala:108:19
  reg [1:0]  regs_wbSel;	// core/src/core.scala:108:19
  reg [1:0]  regs_wbDst;	// core/src/core.scala:108:19
  reg [31:0] regs_Imm;	// core/src/core.scala:108:19
  reg [4:0]  regs_rd;	// core/src/core.scala:108:19
  reg [31:0] regs_rd_data;	// core/src/core.scala:108:19
  reg [31:0] regs_rj_data;	// core/src/core.scala:108:19
  reg [31:0] regs_rk_data;	// core/src/core.scala:108:19
  reg [2:0]  regs_FwEX_RD;	// core/src/core.scala:108:19
  reg [2:0]  regs_FwEX_RJ;	// core/src/core.scala:108:19
  reg [2:0]  regs_FwEX_RK;	// core/src/core.scala:108:19
  reg [31:0] regs_pc;	// core/src/core.scala:108:19
  always @(posedge clock) begin	// core/src/core.scala:100:7
    if (reset)	// core/src/core.scala:100:7
      state <= 1'h0;	// core/src/core.scala:101:16, :107:24
    else	// core/src/core.scala:100:7
      state <= ~io_flush & io_prev_valid;	// core/src/core.scala:107:24, :111:28, :112:15, :115:33
    if (io_flush) begin	// core/src/core.scala:100:7
      regs_aluOp <= 4'h0;	// core/src/core.scala:108:19, :113:29
      regs_aluAsrc <= 2'h0;	// core/src/core.scala:108:19, :113:29
      regs_aluBsrc <= 3'h0;	// core/src/core.scala:100:7, :108:19
      regs_branchOp <= 4'h0;	// core/src/core.scala:108:19, :113:29
      regs_memOp <= 4'h0;	// core/src/core.scala:108:19, :113:29
      regs_wbSel <= 2'h0;	// core/src/core.scala:108:19, :113:29
      regs_wbDst <= 2'h0;	// core/src/core.scala:108:19, :113:29
      regs_Imm <= 32'h0;	// core/src/core.scala:108:19, :113:29
      regs_rd <= 5'h0;	// core/src/core.scala:108:19, :113:29
      regs_rd_data <= 32'h0;	// core/src/core.scala:108:19, :113:29
      regs_rj_data <= 32'h0;	// core/src/core.scala:108:19, :113:29
      regs_rk_data <= 32'h0;	// core/src/core.scala:108:19, :113:29
      regs_FwEX_RD <= 3'h0;	// core/src/core.scala:100:7, :108:19
      regs_FwEX_RJ <= 3'h0;	// core/src/core.scala:100:7, :108:19
      regs_FwEX_RK <= 3'h0;	// core/src/core.scala:100:7, :108:19
      regs_pc <= 32'h0;	// core/src/core.scala:108:19, :113:29
    end
    else begin	// core/src/core.scala:100:7
      regs_aluOp <= io_prev_valid ? io_prev_bits_aluOp : 4'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
      regs_aluAsrc <= io_prev_valid ? io_prev_bits_aluAsrc : 2'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
      regs_aluBsrc <= io_prev_valid ? io_prev_bits_aluBsrc : 3'h0;	// core/src/core.scala:100:7, :108:19, :119:30, :121:14, :125:14
      regs_branchOp <= io_prev_valid ? io_prev_bits_branchOp : 4'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
      regs_memOp <= io_prev_valid ? io_prev_bits_memOp : 4'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
      regs_wbSel <= io_prev_valid ? io_prev_bits_wbSel : 2'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
      regs_wbDst <= io_prev_valid ? io_prev_bits_wbDst : 2'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
      regs_Imm <= io_prev_valid ? io_prev_bits_Imm : 32'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
      regs_rd <= io_prev_valid ? io_prev_bits_rd : 5'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
      regs_rd_data <= io_prev_valid ? io_prev_bits_rd_data : 32'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
      regs_rj_data <= io_prev_valid ? io_prev_bits_rj_data : 32'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
      regs_rk_data <= io_prev_valid ? io_prev_bits_rk_data : 32'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
      regs_FwEX_RD <= io_prev_valid ? io_prev_bits_FwEX_RD : 3'h0;	// core/src/core.scala:100:7, :108:19, :119:30, :121:14, :125:14
      regs_FwEX_RJ <= io_prev_valid ? io_prev_bits_FwEX_RJ : 3'h0;	// core/src/core.scala:100:7, :108:19, :119:30, :121:14, :125:14
      regs_FwEX_RK <= io_prev_valid ? io_prev_bits_FwEX_RK : 3'h0;	// core/src/core.scala:100:7, :108:19, :119:30, :121:14, :125:14
      regs_pc <= io_prev_valid ? io_prev_bits_pc : 32'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/core.scala:100:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/core.scala:100:7
      `FIRRTL_BEFORE_INITIAL	// core/src/core.scala:100:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/core.scala:100:7
      automatic logic [31:0] _RANDOM[0:6];	// core/src/core.scala:100:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/core.scala:100:7
        `INIT_RANDOM_PROLOG_	// core/src/core.scala:100:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/core.scala:100:7
        for (logic [2:0] i = 3'h0; i < 3'h7; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;	// core/src/core.scala:100:7
        end	// core/src/core.scala:100:7
        state = _RANDOM[3'h0][0];	// core/src/core.scala:100:7, :107:24
        regs_aluOp = _RANDOM[3'h0][4:1];	// core/src/core.scala:100:7, :107:24, :108:19
        regs_aluAsrc = _RANDOM[3'h0][6:5];	// core/src/core.scala:100:7, :107:24, :108:19
        regs_aluBsrc = _RANDOM[3'h0][9:7];	// core/src/core.scala:100:7, :107:24, :108:19
        regs_branchOp = _RANDOM[3'h0][13:10];	// core/src/core.scala:100:7, :107:24, :108:19
        regs_memOp = _RANDOM[3'h0][17:14];	// core/src/core.scala:100:7, :107:24, :108:19
        regs_wbSel = _RANDOM[3'h0][19:18];	// core/src/core.scala:100:7, :107:24, :108:19
        regs_wbDst = _RANDOM[3'h0][21:20];	// core/src/core.scala:100:7, :107:24, :108:19
        regs_Imm = {_RANDOM[3'h0][31:22], _RANDOM[3'h1][21:0]};	// core/src/core.scala:100:7, :107:24, :108:19
        regs_rd = _RANDOM[3'h1][26:22];	// core/src/core.scala:100:7, :108:19
        regs_rd_data = {_RANDOM[3'h2][31:5], _RANDOM[3'h3][4:0]};	// core/src/core.scala:100:7, :108:19
        regs_rj_data = {_RANDOM[3'h3][31:5], _RANDOM[3'h4][4:0]};	// core/src/core.scala:100:7, :108:19
        regs_rk_data = {_RANDOM[3'h4][31:5], _RANDOM[3'h5][4:0]};	// core/src/core.scala:100:7, :108:19
        regs_FwEX_RD = _RANDOM[3'h5][7:5];	// core/src/core.scala:100:7, :108:19
        regs_FwEX_RJ = _RANDOM[3'h5][10:8];	// core/src/core.scala:100:7, :108:19
        regs_FwEX_RK = _RANDOM[3'h5][13:11];	// core/src/core.scala:100:7, :108:19
        regs_pc = {_RANDOM[3'h5][31:14], _RANDOM[3'h6][13:0]};	// core/src/core.scala:100:7, :108:19
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/core.scala:100:7
      `FIRRTL_AFTER_INITIAL	// core/src/core.scala:100:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_next_valid = state;	// core/src/core.scala:100:7, :107:24
  assign io_next_bits_aluOp = regs_aluOp;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_aluAsrc = regs_aluAsrc;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_aluBsrc = regs_aluBsrc;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_branchOp = regs_branchOp;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_memOp = regs_memOp;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_wbSel = regs_wbSel;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_wbDst = regs_wbDst;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_Imm = regs_Imm;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_rd = regs_rd;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_rd_data = regs_rd_data;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_rj_data = regs_rj_data;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_rk_data = regs_rk_data;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_FwEX_RD = regs_FwEX_RD;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_FwEX_RJ = regs_FwEX_RJ;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_FwEX_RK = regs_FwEX_RK;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_pc = regs_pc;	// core/src/core.scala:100:7, :108:19
endmodule

// external module mult_gen_0

module bshifter(	// core/src/exu.scala:121:7
  input  [31:0] io_A,	// core/src/exu.scala:122:16
  input  [4:0]  io_B,	// core/src/exu.scala:122:16
  input  [3:0]  io_Op,	// core/src/exu.scala:122:16
  output [31:0] io_Out	// core/src/exu.scala:122:16
);

  wire _GEN = io_Op != 4'h8;	// core/src/exu.scala:135:53
  wire Shifter_1_0 =
    io_B[0] ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[1] : _GEN & io_A[0]) : io_A[0];	// core/src/exu.scala:130:24, :134:{37,43}, :135:53
  wire Shifter_1_1 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[2] : io_Op == 4'h8 ? io_A[0] : io_A[1])
      : io_A[1];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_2 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[3] : io_Op == 4'h8 ? io_A[1] : io_A[2])
      : io_A[2];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_3 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[4] : io_Op == 4'h8 ? io_A[2] : io_A[3])
      : io_A[3];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_4 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[5] : io_Op == 4'h8 ? io_A[3] : io_A[4])
      : io_A[4];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_5 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[6] : io_Op == 4'h8 ? io_A[4] : io_A[5])
      : io_A[5];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_6 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[7] : io_Op == 4'h8 ? io_A[5] : io_A[6])
      : io_A[6];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_7 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[8] : io_Op == 4'h8 ? io_A[6] : io_A[7])
      : io_A[7];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_8 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[9] : io_Op == 4'h8 ? io_A[7] : io_A[8])
      : io_A[8];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_9 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[10] : io_Op == 4'h8 ? io_A[8] : io_A[9])
      : io_A[9];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_10 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[11] : io_Op == 4'h8 ? io_A[9] : io_A[10])
      : io_A[10];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_11 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[12] : io_Op == 4'h8 ? io_A[10] : io_A[11])
      : io_A[11];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_12 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[13] : io_Op == 4'h8 ? io_A[11] : io_A[12])
      : io_A[12];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_13 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[14] : io_Op == 4'h8 ? io_A[12] : io_A[13])
      : io_A[13];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_14 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[15] : io_Op == 4'h8 ? io_A[13] : io_A[14])
      : io_A[14];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_15 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[16] : io_Op == 4'h8 ? io_A[14] : io_A[15])
      : io_A[15];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_16 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[17] : io_Op == 4'h8 ? io_A[15] : io_A[16])
      : io_A[16];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_17 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[18] : io_Op == 4'h8 ? io_A[16] : io_A[17])
      : io_A[17];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_18 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[19] : io_Op == 4'h8 ? io_A[17] : io_A[18])
      : io_A[18];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_19 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[20] : io_Op == 4'h8 ? io_A[18] : io_A[19])
      : io_A[19];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_20 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[21] : io_Op == 4'h8 ? io_A[19] : io_A[20])
      : io_A[20];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_21 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[22] : io_Op == 4'h8 ? io_A[20] : io_A[21])
      : io_A[21];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_22 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[23] : io_Op == 4'h8 ? io_A[21] : io_A[22])
      : io_A[22];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_23 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[24] : io_Op == 4'h8 ? io_A[22] : io_A[23])
      : io_A[23];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_24 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[25] : io_Op == 4'h8 ? io_A[23] : io_A[24])
      : io_A[24];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_25 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[26] : io_Op == 4'h8 ? io_A[24] : io_A[25])
      : io_A[25];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_26 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[27] : io_Op == 4'h8 ? io_A[25] : io_A[26])
      : io_A[26];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_27 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[28] : io_Op == 4'h8 ? io_A[26] : io_A[27])
      : io_A[27];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_28 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[29] : io_Op == 4'h8 ? io_A[27] : io_A[28])
      : io_A[28];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_29 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[30] : io_Op == 4'h8 ? io_A[28] : io_A[29])
      : io_A[29];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire Shifter_1_30 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[31] : io_Op == 4'h8 ? io_A[29] : io_A[30])
      : io_A[30];	// core/src/exu.scala:130:24, :134:43, :135:53, :150:37, :151:53
  wire _GEN_0 = io_Op != 4'h9;	// core/src/exu.scala:135:53, :143:53
  wire Shifter_1_31 =
    ~(io_B[0]) | io_Op == 4'hA
      ? io_A[31]
      : _GEN_0 & (io_Op == 4'h8 ? io_A[30] : io_A[31]);	// core/src/exu.scala:130:24, :134:43, :135:53, :142:37, :143:53
  wire Shifter_2_0 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_1_2 : _GEN & Shifter_1_0)
      : Shifter_1_0;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37
  wire Shifter_2_1 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_1_3 : _GEN & Shifter_1_1)
      : Shifter_1_1;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37
  wire Shifter_2_2 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_4
           : io_Op == 4'h8 ? Shifter_1_0 : Shifter_1_2)
      : Shifter_1_2;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37, :151:53
  wire Shifter_2_3 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_5
           : io_Op == 4'h8 ? Shifter_1_1 : Shifter_1_3)
      : Shifter_1_3;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_4 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_6
           : io_Op == 4'h8 ? Shifter_1_2 : Shifter_1_4)
      : Shifter_1_4;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_5 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_7
           : io_Op == 4'h8 ? Shifter_1_3 : Shifter_1_5)
      : Shifter_1_5;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_6 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_8
           : io_Op == 4'h8 ? Shifter_1_4 : Shifter_1_6)
      : Shifter_1_6;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_7 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_9
           : io_Op == 4'h8 ? Shifter_1_5 : Shifter_1_7)
      : Shifter_1_7;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_8 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_10
           : io_Op == 4'h8 ? Shifter_1_6 : Shifter_1_8)
      : Shifter_1_8;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_9 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_11
           : io_Op == 4'h8 ? Shifter_1_7 : Shifter_1_9)
      : Shifter_1_9;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_10 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_12
           : io_Op == 4'h8 ? Shifter_1_8 : Shifter_1_10)
      : Shifter_1_10;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_11 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_13
           : io_Op == 4'h8 ? Shifter_1_9 : Shifter_1_11)
      : Shifter_1_11;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_12 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_14
           : io_Op == 4'h8 ? Shifter_1_10 : Shifter_1_12)
      : Shifter_1_12;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_13 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_15
           : io_Op == 4'h8 ? Shifter_1_11 : Shifter_1_13)
      : Shifter_1_13;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_14 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_16
           : io_Op == 4'h8 ? Shifter_1_12 : Shifter_1_14)
      : Shifter_1_14;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_15 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_17
           : io_Op == 4'h8 ? Shifter_1_13 : Shifter_1_15)
      : Shifter_1_15;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_16 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_18
           : io_Op == 4'h8 ? Shifter_1_14 : Shifter_1_16)
      : Shifter_1_16;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_17 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_19
           : io_Op == 4'h8 ? Shifter_1_15 : Shifter_1_17)
      : Shifter_1_17;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_18 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_20
           : io_Op == 4'h8 ? Shifter_1_16 : Shifter_1_18)
      : Shifter_1_18;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_19 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_21
           : io_Op == 4'h8 ? Shifter_1_17 : Shifter_1_19)
      : Shifter_1_19;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_20 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_22
           : io_Op == 4'h8 ? Shifter_1_18 : Shifter_1_20)
      : Shifter_1_20;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_21 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_23
           : io_Op == 4'h8 ? Shifter_1_19 : Shifter_1_21)
      : Shifter_1_21;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_22 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_24
           : io_Op == 4'h8 ? Shifter_1_20 : Shifter_1_22)
      : Shifter_1_22;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_23 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_25
           : io_Op == 4'h8 ? Shifter_1_21 : Shifter_1_23)
      : Shifter_1_23;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_24 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_26
           : io_Op == 4'h8 ? Shifter_1_22 : Shifter_1_24)
      : Shifter_1_24;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_25 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_27
           : io_Op == 4'h8 ? Shifter_1_23 : Shifter_1_25)
      : Shifter_1_25;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_26 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_28
           : io_Op == 4'h8 ? Shifter_1_24 : Shifter_1_26)
      : Shifter_1_26;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_27 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_29
           : io_Op == 4'h8 ? Shifter_1_25 : Shifter_1_27)
      : Shifter_1_27;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_28 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_30
           : io_Op == 4'h8 ? Shifter_1_26 : Shifter_1_28)
      : Shifter_1_28;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_2_29 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_31
           : io_Op == 4'h8 ? Shifter_1_27 : Shifter_1_29)
      : Shifter_1_29;	// core/src/exu.scala:134:43, :135:53, :142:37, :150:37, :151:53
  wire Shifter_2_30 =
    io_B[1]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_1_28 : Shifter_1_30))
      : Shifter_1_30;	// core/src/exu.scala:130:24, :134:43, :135:53, :142:37, :143:53, :150:37
  wire Shifter_2_31 =
    io_B[1]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_1_29 : Shifter_1_31))
      : Shifter_1_31;	// core/src/exu.scala:130:24, :134:43, :135:53, :142:37, :143:53, :150:37
  wire Shifter_3_0 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_2_4 : _GEN & Shifter_2_0)
      : Shifter_2_0;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37
  wire Shifter_3_1 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_2_5 : _GEN & Shifter_2_1)
      : Shifter_2_1;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37
  wire Shifter_3_2 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_2_6 : _GEN & Shifter_2_2)
      : Shifter_2_2;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37
  wire Shifter_3_3 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_2_7 : _GEN & Shifter_2_3)
      : Shifter_2_3;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37
  wire Shifter_3_4 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_8
           : io_Op == 4'h8 ? Shifter_2_0 : Shifter_2_4)
      : Shifter_2_4;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37, :151:53
  wire Shifter_3_5 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_9
           : io_Op == 4'h8 ? Shifter_2_1 : Shifter_2_5)
      : Shifter_2_5;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37, :151:53
  wire Shifter_3_6 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_10
           : io_Op == 4'h8 ? Shifter_2_2 : Shifter_2_6)
      : Shifter_2_6;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_7 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_11
           : io_Op == 4'h8 ? Shifter_2_3 : Shifter_2_7)
      : Shifter_2_7;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_8 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_12
           : io_Op == 4'h8 ? Shifter_2_4 : Shifter_2_8)
      : Shifter_2_8;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_9 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_13
           : io_Op == 4'h8 ? Shifter_2_5 : Shifter_2_9)
      : Shifter_2_9;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_10 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_14
           : io_Op == 4'h8 ? Shifter_2_6 : Shifter_2_10)
      : Shifter_2_10;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_11 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_15
           : io_Op == 4'h8 ? Shifter_2_7 : Shifter_2_11)
      : Shifter_2_11;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_12 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_16
           : io_Op == 4'h8 ? Shifter_2_8 : Shifter_2_12)
      : Shifter_2_12;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_13 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_17
           : io_Op == 4'h8 ? Shifter_2_9 : Shifter_2_13)
      : Shifter_2_13;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_14 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_18
           : io_Op == 4'h8 ? Shifter_2_10 : Shifter_2_14)
      : Shifter_2_14;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_15 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_19
           : io_Op == 4'h8 ? Shifter_2_11 : Shifter_2_15)
      : Shifter_2_15;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_16 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_20
           : io_Op == 4'h8 ? Shifter_2_12 : Shifter_2_16)
      : Shifter_2_16;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_17 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_21
           : io_Op == 4'h8 ? Shifter_2_13 : Shifter_2_17)
      : Shifter_2_17;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_18 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_22
           : io_Op == 4'h8 ? Shifter_2_14 : Shifter_2_18)
      : Shifter_2_18;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_19 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_23
           : io_Op == 4'h8 ? Shifter_2_15 : Shifter_2_19)
      : Shifter_2_19;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_20 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_24
           : io_Op == 4'h8 ? Shifter_2_16 : Shifter_2_20)
      : Shifter_2_20;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_21 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_25
           : io_Op == 4'h8 ? Shifter_2_17 : Shifter_2_21)
      : Shifter_2_21;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_22 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_26
           : io_Op == 4'h8 ? Shifter_2_18 : Shifter_2_22)
      : Shifter_2_22;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_23 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_27
           : io_Op == 4'h8 ? Shifter_2_19 : Shifter_2_23)
      : Shifter_2_23;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_24 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_28
           : io_Op == 4'h8 ? Shifter_2_20 : Shifter_2_24)
      : Shifter_2_24;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_25 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_29
           : io_Op == 4'h8 ? Shifter_2_21 : Shifter_2_25)
      : Shifter_2_25;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_3_26 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_30
           : io_Op == 4'h8 ? Shifter_2_22 : Shifter_2_26)
      : Shifter_2_26;	// core/src/exu.scala:134:43, :135:53, :142:37, :150:37, :151:53
  wire Shifter_3_27 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_31
           : io_Op == 4'h8 ? Shifter_2_23 : Shifter_2_27)
      : Shifter_2_27;	// core/src/exu.scala:134:43, :135:53, :142:37, :150:37, :151:53
  wire Shifter_3_28 =
    io_B[2]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_2_24 : Shifter_2_28))
      : Shifter_2_28;	// core/src/exu.scala:130:24, :134:43, :135:53, :142:37, :143:53, :150:37
  wire Shifter_3_29 =
    io_B[2]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_2_25 : Shifter_2_29))
      : Shifter_2_29;	// core/src/exu.scala:130:24, :134:43, :135:53, :142:37, :143:53, :150:37
  wire Shifter_3_30 =
    io_B[2]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_2_26 : Shifter_2_30))
      : Shifter_2_30;	// core/src/exu.scala:130:24, :134:43, :135:53, :142:37, :143:53, :150:37
  wire Shifter_3_31 =
    io_B[2]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_2_27 : Shifter_2_31))
      : Shifter_2_31;	// core/src/exu.scala:130:24, :134:43, :135:53, :142:37, :143:53, :150:37
  wire Shifter_4_0 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_8 : _GEN & Shifter_3_0)
      : Shifter_3_0;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37
  wire Shifter_4_1 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_9 : _GEN & Shifter_3_1)
      : Shifter_3_1;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37
  wire Shifter_4_2 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_10 : _GEN & Shifter_3_2)
      : Shifter_3_2;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37
  wire Shifter_4_3 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_11 : _GEN & Shifter_3_3)
      : Shifter_3_3;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37
  wire Shifter_4_4 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_12 : _GEN & Shifter_3_4)
      : Shifter_3_4;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37
  wire Shifter_4_5 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_13 : _GEN & Shifter_3_5)
      : Shifter_3_5;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37
  wire Shifter_4_6 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_14 : _GEN & Shifter_3_6)
      : Shifter_3_6;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37
  wire Shifter_4_7 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_15 : _GEN & Shifter_3_7)
      : Shifter_3_7;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37
  wire Shifter_4_8 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_16
           : io_Op == 4'h8 ? Shifter_3_0 : Shifter_3_8)
      : Shifter_3_8;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37, :151:53
  wire Shifter_4_9 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_17
           : io_Op == 4'h8 ? Shifter_3_1 : Shifter_3_9)
      : Shifter_3_9;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37, :151:53
  wire Shifter_4_10 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_18
           : io_Op == 4'h8 ? Shifter_3_2 : Shifter_3_10)
      : Shifter_3_10;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37, :151:53
  wire Shifter_4_11 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_19
           : io_Op == 4'h8 ? Shifter_3_3 : Shifter_3_11)
      : Shifter_3_11;	// core/src/exu.scala:134:{37,43}, :135:53, :150:37, :151:53
  wire Shifter_4_12 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_20
           : io_Op == 4'h8 ? Shifter_3_4 : Shifter_3_12)
      : Shifter_3_12;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_4_13 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_21
           : io_Op == 4'h8 ? Shifter_3_5 : Shifter_3_13)
      : Shifter_3_13;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_4_14 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_22
           : io_Op == 4'h8 ? Shifter_3_6 : Shifter_3_14)
      : Shifter_3_14;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_4_15 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_23
           : io_Op == 4'h8 ? Shifter_3_7 : Shifter_3_15)
      : Shifter_3_15;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_4_16 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_24
           : io_Op == 4'h8 ? Shifter_3_8 : Shifter_3_16)
      : Shifter_3_16;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_4_17 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_25
           : io_Op == 4'h8 ? Shifter_3_9 : Shifter_3_17)
      : Shifter_3_17;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_4_18 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_26
           : io_Op == 4'h8 ? Shifter_3_10 : Shifter_3_18)
      : Shifter_3_18;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_4_19 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_27
           : io_Op == 4'h8 ? Shifter_3_11 : Shifter_3_19)
      : Shifter_3_19;	// core/src/exu.scala:134:43, :135:53, :150:37, :151:53
  wire Shifter_4_20 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_28
           : io_Op == 4'h8 ? Shifter_3_12 : Shifter_3_20)
      : Shifter_3_20;	// core/src/exu.scala:134:43, :135:53, :142:37, :150:37, :151:53
  wire Shifter_4_21 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_29
           : io_Op == 4'h8 ? Shifter_3_13 : Shifter_3_21)
      : Shifter_3_21;	// core/src/exu.scala:134:43, :135:53, :142:37, :150:37, :151:53
  wire Shifter_4_22 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_30
           : io_Op == 4'h8 ? Shifter_3_14 : Shifter_3_22)
      : Shifter_3_22;	// core/src/exu.scala:134:43, :135:53, :142:37, :150:37, :151:53
  wire Shifter_4_23 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_31
           : io_Op == 4'h8 ? Shifter_3_15 : Shifter_3_23)
      : Shifter_3_23;	// core/src/exu.scala:134:43, :135:53, :142:37, :150:37, :151:53
  wire Shifter_4_24 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_16 : Shifter_3_24))
      : Shifter_3_24;	// core/src/exu.scala:130:24, :134:43, :135:53, :142:37, :143:53, :150:37
  wire Shifter_4_25 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_17 : Shifter_3_25))
      : Shifter_3_25;	// core/src/exu.scala:130:24, :134:43, :135:53, :142:37, :143:53, :150:37
  wire Shifter_4_26 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_18 : Shifter_3_26))
      : Shifter_3_26;	// core/src/exu.scala:130:24, :134:43, :135:53, :142:37, :143:53, :150:37
  wire Shifter_4_27 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_19 : Shifter_3_27))
      : Shifter_3_27;	// core/src/exu.scala:130:24, :134:43, :135:53, :142:37, :143:53, :150:37
  wire Shifter_4_28 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_20 : Shifter_3_28))
      : Shifter_3_28;	// core/src/exu.scala:130:24, :134:43, :135:53, :142:37, :143:53, :150:37
  wire Shifter_4_29 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_21 : Shifter_3_29))
      : Shifter_3_29;	// core/src/exu.scala:130:24, :134:43, :135:53, :142:37, :143:53, :150:37
  wire Shifter_4_30 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_22 : Shifter_3_30))
      : Shifter_3_30;	// core/src/exu.scala:130:24, :134:43, :135:53, :142:37, :143:53, :150:37
  wire Shifter_4_31 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_23 : Shifter_3_31))
      : Shifter_3_31;	// core/src/exu.scala:130:24, :134:43, :135:53, :142:37, :143:53, :150:37
  assign io_Out =
    {io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_15 : Shifter_4_31))
       : Shifter_4_31,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_14 : Shifter_4_30))
       : Shifter_4_30,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_13 : Shifter_4_29))
       : Shifter_4_29,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_12 : Shifter_4_28))
       : Shifter_4_28,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_11 : Shifter_4_27))
       : Shifter_4_27,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_10 : Shifter_4_26))
       : Shifter_4_26,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_9 : Shifter_4_25))
       : Shifter_4_25,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_8 : Shifter_4_24))
       : Shifter_4_24,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_7 : Shifter_4_23))
       : Shifter_4_23,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_6 : Shifter_4_22))
       : Shifter_4_22,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_5 : Shifter_4_21))
       : Shifter_4_21,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_4 : Shifter_4_20))
       : Shifter_4_20,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_3 : Shifter_4_19))
       : Shifter_4_19,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_2 : Shifter_4_18))
       : Shifter_4_18,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_1 : Shifter_4_17))
       : Shifter_4_17,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_0 : Shifter_4_16))
       : Shifter_4_16,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_31 : _GEN & Shifter_4_15)
       : Shifter_4_15,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_30 : _GEN & Shifter_4_14)
       : Shifter_4_14,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_29 : _GEN & Shifter_4_13)
       : Shifter_4_13,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_28 : _GEN & Shifter_4_12)
       : Shifter_4_12,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_27 : _GEN & Shifter_4_11)
       : Shifter_4_11,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_26 : _GEN & Shifter_4_10)
       : Shifter_4_10,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_25 : _GEN & Shifter_4_9)
       : Shifter_4_9,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_24 : _GEN & Shifter_4_8)
       : Shifter_4_8,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_23 : _GEN & Shifter_4_7)
       : Shifter_4_7,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_22 : _GEN & Shifter_4_6)
       : Shifter_4_6,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_21 : _GEN & Shifter_4_5)
       : Shifter_4_5,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_20 : _GEN & Shifter_4_4)
       : Shifter_4_4,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_19 : _GEN & Shifter_4_3)
       : Shifter_4_3,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_18 : _GEN & Shifter_4_2)
       : Shifter_4_2,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_17 : _GEN & Shifter_4_1)
       : Shifter_4_1,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_16 : _GEN & Shifter_4_0)
       : Shifter_4_0};	// core/src/exu.scala:121:7, :130:24, :134:{37,43}, :135:53, :142:37, :143:53, :150:37, :159:26
endmodule

module alu(	// core/src/exu.scala:72:7
  input  [31:0] io_A,	// core/src/exu.scala:73:16
                io_B,	// core/src/exu.scala:73:16
  input  [3:0]  io_Op,	// core/src/exu.scala:73:16
  output [31:0] io_Out,	// core/src/exu.scala:73:16
  output        io_ULess,	// core/src/exu.scala:73:16
                io_SLess,	// core/src/exu.scala:73:16
                io_Zero	// core/src/exu.scala:73:16
);

  wire [31:0]       _Shifter_io_Out;	// core/src/exu.scala:98:25
  wire              Sub = io_Op == 4'h3 | io_Op == 4'h2 | io_Op == 4'h1;	// core/src/exu.scala:83:37
  wire [31:0]       FixB = io_B ^ {32{Sub}};	// core/src/exu.scala:83:37, :91:{21,27}
  wire [33:0]       FixSum = {1'h0, {1'h0, io_A} + {1'h0, FixB}} + {33'h0, Sub};	// core/src/exu.scala:83:37, :91:21, :92:{23,31}
  wire              SLess = FixSum[31] ^ io_A[31] == FixB[31] & FixSum[31] != io_A[31];	// core/src/exu.scala:91:21, :92:31, :93:{19,24,32,38,48,53}, :95:29
  wire [31:0]       _io_Out_T_5 = io_A | io_B;	// core/src/exu.scala:109:27
  wire [33:0]       _GEN = {2'h0, _Shifter_io_Out};	// core/src/exu.scala:83:37, :98:25, :103:37
  wire [15:0][33:0] _GEN_0 =
    {{34'h0},
     {34'h0},
     {34'h0},
     {34'h0},
     {34'h0},
     {_GEN},
     {_GEN},
     {_GEN},
     {{2'h0, ~_io_Out_T_5}},
     {{2'h0, io_A ^ io_B}},
     {{2'h0, _io_Out_T_5}},
     {{2'h0, io_A & io_B}},
     {{33'h0, ~(FixSum[32])}},
     {{33'h0, SLess}},
     {FixSum},
     {FixSum}};	// core/src/exu.scala:83:37, :92:31, :95:29, :96:{17,24}, :103:37, :108:28, :109:27, :110:28, :111:22
  bshifter Shifter (	// core/src/exu.scala:98:25
    .io_A   (io_A),
    .io_B   (io_B[4:0]),	// core/src/exu.scala:100:25
    .io_Op  (io_Op),
    .io_Out (_Shifter_io_Out)
  );
  assign io_Out = _GEN_0[io_Op][31:0];	// core/src/exu.scala:72:7, :103:{12,37}
  assign io_ULess = ~(FixSum[32]);	// core/src/exu.scala:72:7, :92:31, :96:{17,24}
  assign io_SLess = SLess;	// core/src/exu.scala:72:7, :95:29
  assign io_Zero = FixSum[31:0] == 32'h0;	// core/src/exu.scala:72:7, :91:27, :92:31, :94:{21,29}
endmodule

module exu(	// core/src/exu.scala:5:7
  input         clock,	// core/src/exu.scala:5:7
                io_prev_valid,	// core/src/exu.scala:6:16
  input  [3:0]  io_prev_bits_aluOp,	// core/src/exu.scala:6:16
  input  [1:0]  io_prev_bits_aluAsrc,	// core/src/exu.scala:6:16
  input  [2:0]  io_prev_bits_aluBsrc,	// core/src/exu.scala:6:16
  input  [3:0]  io_prev_bits_branchOp,	// core/src/exu.scala:6:16
                io_prev_bits_memOp,	// core/src/exu.scala:6:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/exu.scala:6:16
                io_prev_bits_wbDst,	// core/src/exu.scala:6:16
  input  [31:0] io_prev_bits_Imm,	// core/src/exu.scala:6:16
  input  [4:0]  io_prev_bits_rd,	// core/src/exu.scala:6:16
  input  [31:0] io_prev_bits_rd_data,	// core/src/exu.scala:6:16
                io_prev_bits_rj_data,	// core/src/exu.scala:6:16
                io_prev_bits_rk_data,	// core/src/exu.scala:6:16
  input  [2:0]  io_prev_bits_FwEX_RD,	// core/src/exu.scala:6:16
                io_prev_bits_FwEX_RJ,	// core/src/exu.scala:6:16
                io_prev_bits_FwEX_RK,	// core/src/exu.scala:6:16
  input  [31:0] io_prev_bits_pc,	// core/src/exu.scala:6:16
  output        io_next_valid,	// core/src/exu.scala:6:16
  output [31:0] io_next_bits_ALUOut,	// core/src/exu.scala:6:16
  output        io_next_bits_SLess,	// core/src/exu.scala:6:16
                io_next_bits_ULess,	// core/src/exu.scala:6:16
                io_next_bits_Zero,	// core/src/exu.scala:6:16
  output [3:0]  io_next_bits_branchOp,	// core/src/exu.scala:6:16
                io_next_bits_memOp,	// core/src/exu.scala:6:16
  output [1:0]  io_next_bits_wbSel,	// core/src/exu.scala:6:16
                io_next_bits_wbDst,	// core/src/exu.scala:6:16
  output [31:0] io_next_bits_Imm,	// core/src/exu.scala:6:16
  output [4:0]  io_next_bits_rd,	// core/src/exu.scala:6:16
  output [31:0] io_next_bits_rd_data,	// core/src/exu.scala:6:16
                io_next_bits_rj_data,	// core/src/exu.scala:6:16
                io_next_bits_pc,	// core/src/exu.scala:6:16
  input         io_flush,	// core/src/exu.scala:6:16
  output [31:0] io_P,	// core/src/exu.scala:6:16
  input  [31:0] io_ELALU,	// core/src/exu.scala:6:16
                io_LWALU,	// core/src/exu.scala:6:16
                io_LWMEM	// core/src/exu.scala:6:16
);

  wire [31:0] _mult_P;	// core/src/exu.scala:20:22
  wire [31:0] ForwardRD =
    io_prev_bits_FwEX_RD == 3'h3
      ? _mult_P
      : io_prev_bits_FwEX_RD == 3'h2
          ? io_LWMEM
          : io_prev_bits_FwEX_RD == 3'h1
              ? io_LWALU
              : io_prev_bits_FwEX_RD == 3'h0 ? io_ELALU : io_prev_bits_rd_data;	// core/src/exu.scala:20:22, :30:75
  wire [31:0] ForwardRJ =
    io_prev_bits_FwEX_RJ == 3'h3
      ? _mult_P
      : io_prev_bits_FwEX_RJ == 3'h2
          ? io_LWMEM
          : io_prev_bits_FwEX_RJ == 3'h1
              ? io_LWALU
              : io_prev_bits_FwEX_RJ == 3'h0 ? io_ELALU : io_prev_bits_rj_data;	// core/src/exu.scala:20:22, :30:75, :31:75
  wire [31:0] ALUA =
    io_prev_bits_aluAsrc == 2'h1
      ? io_prev_bits_pc
      : io_prev_bits_aluAsrc == 2'h0 ? ForwardRJ : 32'h0;	// core/src/exu.scala:30:75, :31:75, :34:53
  wire [31:0] ALUB =
    io_prev_bits_aluBsrc == 3'h3
      ? 32'h4
      : io_prev_bits_aluBsrc == 3'h2
          ? io_prev_bits_Imm
          : io_prev_bits_aluBsrc == 3'h1
              ? ForwardRD
              : io_prev_bits_aluBsrc == 3'h0
                  ? (io_prev_bits_FwEX_RK == 3'h3
                       ? _mult_P
                       : io_prev_bits_FwEX_RK == 3'h2
                           ? io_LWMEM
                           : io_prev_bits_FwEX_RK == 3'h1
                               ? io_LWALU
                               : io_prev_bits_FwEX_RK == 3'h0
                                   ? io_ELALU
                                   : io_prev_bits_rk_data)
                  : 32'h0;	// core/src/exu.scala:20:22, :30:75, :32:75, :34:53, :38:53
  mult_gen_0 mult (	// core/src/exu.scala:20:22
    .CLK (clock),
    .A   (ALUA),	// core/src/exu.scala:34:53
    .B   (ALUB),	// core/src/exu.scala:38:53
    .P   (_mult_P)
  );
  alu ALU (	// core/src/exu.scala:21:21
    .io_A     (ALUA),	// core/src/exu.scala:34:53
    .io_B     (ALUB),	// core/src/exu.scala:38:53
    .io_Op    (io_prev_bits_aluOp),
    .io_Out   (io_next_bits_ALUOut),
    .io_ULess (io_next_bits_ULess),
    .io_SLess (io_next_bits_SLess),
    .io_Zero  (io_next_bits_Zero)
  );
  assign io_next_valid = io_prev_valid & ~io_flush;	// core/src/exu.scala:5:7, :68:{56,68}
  assign io_next_bits_branchOp = io_prev_bits_branchOp;	// core/src/exu.scala:5:7
  assign io_next_bits_memOp = io_prev_bits_memOp;	// core/src/exu.scala:5:7
  assign io_next_bits_wbSel = io_prev_bits_wbSel;	// core/src/exu.scala:5:7
  assign io_next_bits_wbDst = io_prev_bits_wbDst;	// core/src/exu.scala:5:7
  assign io_next_bits_Imm = io_prev_bits_Imm;	// core/src/exu.scala:5:7
  assign io_next_bits_rd = io_prev_bits_rd;	// core/src/exu.scala:5:7
  assign io_next_bits_rd_data = ForwardRD;	// core/src/exu.scala:5:7, :30:75
  assign io_next_bits_rj_data = ForwardRJ;	// core/src/exu.scala:5:7, :31:75
  assign io_next_bits_pc = io_prev_bits_pc;	// core/src/exu.scala:5:7
  assign io_P = _mult_P;	// core/src/exu.scala:5:7, :20:22
endmodule

module buffer_2(	// core/src/core.scala:100:7
  input         clock,	// core/src/core.scala:100:7
                reset,	// core/src/core.scala:100:7
                io_prev_valid,	// core/src/core.scala:101:16
  input  [31:0] io_prev_bits_ALUOut,	// core/src/core.scala:101:16
  input         io_prev_bits_SLess,	// core/src/core.scala:101:16
                io_prev_bits_ULess,	// core/src/core.scala:101:16
                io_prev_bits_Zero,	// core/src/core.scala:101:16
  input  [3:0]  io_prev_bits_branchOp,	// core/src/core.scala:101:16
                io_prev_bits_memOp,	// core/src/core.scala:101:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/core.scala:101:16
                io_prev_bits_wbDst,	// core/src/core.scala:101:16
  input  [31:0] io_prev_bits_Imm,	// core/src/core.scala:101:16
  input  [4:0]  io_prev_bits_rd,	// core/src/core.scala:101:16
  input  [31:0] io_prev_bits_rd_data,	// core/src/core.scala:101:16
                io_prev_bits_rj_data,	// core/src/core.scala:101:16
                io_prev_bits_pc,	// core/src/core.scala:101:16
  output        io_next_valid,	// core/src/core.scala:101:16
  output [31:0] io_next_bits_ALUOut,	// core/src/core.scala:101:16
  output        io_next_bits_SLess,	// core/src/core.scala:101:16
                io_next_bits_ULess,	// core/src/core.scala:101:16
                io_next_bits_Zero,	// core/src/core.scala:101:16
  output [3:0]  io_next_bits_branchOp,	// core/src/core.scala:101:16
                io_next_bits_memOp,	// core/src/core.scala:101:16
  output [1:0]  io_next_bits_wbSel,	// core/src/core.scala:101:16
                io_next_bits_wbDst,	// core/src/core.scala:101:16
  output [31:0] io_next_bits_Imm,	// core/src/core.scala:101:16
  output [4:0]  io_next_bits_rd,	// core/src/core.scala:101:16
  output [31:0] io_next_bits_rd_data,	// core/src/core.scala:101:16
                io_next_bits_rj_data,	// core/src/core.scala:101:16
                io_next_bits_pc	// core/src/core.scala:101:16
);

  reg        state;	// core/src/core.scala:107:24
  reg [31:0] regs_ALUOut;	// core/src/core.scala:108:19
  reg        regs_SLess;	// core/src/core.scala:108:19
  reg        regs_ULess;	// core/src/core.scala:108:19
  reg        regs_Zero;	// core/src/core.scala:108:19
  reg [3:0]  regs_branchOp;	// core/src/core.scala:108:19
  reg [3:0]  regs_memOp;	// core/src/core.scala:108:19
  reg [1:0]  regs_wbSel;	// core/src/core.scala:108:19
  reg [1:0]  regs_wbDst;	// core/src/core.scala:108:19
  reg [31:0] regs_Imm;	// core/src/core.scala:108:19
  reg [4:0]  regs_rd;	// core/src/core.scala:108:19
  reg [31:0] regs_rd_data;	// core/src/core.scala:108:19
  reg [31:0] regs_rj_data;	// core/src/core.scala:108:19
  reg [31:0] regs_pc;	// core/src/core.scala:108:19
  always @(posedge clock) begin	// core/src/core.scala:100:7
    if (reset)	// core/src/core.scala:100:7
      state <= 1'h0;	// core/src/core.scala:101:16, :107:24
    else	// core/src/core.scala:100:7
      state <= io_prev_valid;	// core/src/core.scala:107:24
    regs_ALUOut <= io_prev_valid ? io_prev_bits_ALUOut : 32'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
    regs_SLess <= io_prev_valid & io_prev_bits_SLess;	// core/src/core.scala:108:19, :119:30, :121:14, :125:14
    regs_ULess <= io_prev_valid & io_prev_bits_ULess;	// core/src/core.scala:108:19, :119:30, :121:14, :125:14
    regs_Zero <= io_prev_valid & io_prev_bits_Zero;	// core/src/core.scala:108:19, :119:30, :121:14, :125:14
    regs_branchOp <= io_prev_valid ? io_prev_bits_branchOp : 4'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
    regs_memOp <= io_prev_valid ? io_prev_bits_memOp : 4'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
    regs_wbSel <= io_prev_valid ? io_prev_bits_wbSel : 2'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
    regs_wbDst <= io_prev_valid ? io_prev_bits_wbDst : 2'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
    regs_Imm <= io_prev_valid ? io_prev_bits_Imm : 32'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
    regs_rd <= io_prev_valid ? io_prev_bits_rd : 5'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
    regs_rd_data <= io_prev_valid ? io_prev_bits_rd_data : 32'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
    regs_rj_data <= io_prev_valid ? io_prev_bits_rj_data : 32'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
    regs_pc <= io_prev_valid ? io_prev_bits_pc : 32'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/core.scala:100:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/core.scala:100:7
      `FIRRTL_BEFORE_INITIAL	// core/src/core.scala:100:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/core.scala:100:7
      automatic logic [31:0] _RANDOM[0:5];	// core/src/core.scala:100:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/core.scala:100:7
        `INIT_RANDOM_PROLOG_	// core/src/core.scala:100:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/core.scala:100:7
        for (logic [2:0] i = 3'h0; i < 3'h6; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;	// core/src/core.scala:100:7
        end	// core/src/core.scala:100:7
        state = _RANDOM[3'h0][0];	// core/src/core.scala:100:7, :107:24
        regs_ALUOut = {_RANDOM[3'h0][31:1], _RANDOM[3'h1][0]};	// core/src/core.scala:100:7, :107:24, :108:19
        regs_SLess = _RANDOM[3'h1][1];	// core/src/core.scala:100:7, :108:19
        regs_ULess = _RANDOM[3'h1][2];	// core/src/core.scala:100:7, :108:19
        regs_Zero = _RANDOM[3'h1][3];	// core/src/core.scala:100:7, :108:19
        regs_branchOp = _RANDOM[3'h1][7:4];	// core/src/core.scala:100:7, :108:19
        regs_memOp = _RANDOM[3'h1][11:8];	// core/src/core.scala:100:7, :108:19
        regs_wbSel = _RANDOM[3'h1][13:12];	// core/src/core.scala:100:7, :108:19
        regs_wbDst = _RANDOM[3'h1][15:14];	// core/src/core.scala:100:7, :108:19
        regs_Imm = {_RANDOM[3'h1][31:16], _RANDOM[3'h2][15:0]};	// core/src/core.scala:100:7, :108:19
        regs_rd = _RANDOM[3'h2][20:16];	// core/src/core.scala:100:7, :108:19
        regs_rd_data = {_RANDOM[3'h2][31:21], _RANDOM[3'h3][20:0]};	// core/src/core.scala:100:7, :108:19
        regs_rj_data = {_RANDOM[3'h3][31:21], _RANDOM[3'h4][20:0]};	// core/src/core.scala:100:7, :108:19
        regs_pc = {_RANDOM[3'h4][31:21], _RANDOM[3'h5][20:0]};	// core/src/core.scala:100:7, :108:19
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/core.scala:100:7
      `FIRRTL_AFTER_INITIAL	// core/src/core.scala:100:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_next_valid = state;	// core/src/core.scala:100:7, :107:24
  assign io_next_bits_ALUOut = regs_ALUOut;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_SLess = regs_SLess;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_ULess = regs_ULess;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_Zero = regs_Zero;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_branchOp = regs_branchOp;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_memOp = regs_memOp;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_wbSel = regs_wbSel;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_wbDst = regs_wbDst;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_Imm = regs_Imm;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_rd = regs_rd;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_rd_data = regs_rd_data;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_rj_data = regs_rj_data;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_pc = regs_pc;	// core/src/core.scala:100:7, :108:19
endmodule

module branchContr(	// core/src/lsu.scala:140:7
  input  [31:0] io_pc,	// core/src/lsu.scala:141:16
                io_rj_data,	// core/src/lsu.scala:141:16
                io_offset,	// core/src/lsu.scala:141:16
  input  [3:0]  io_branchOp,	// core/src/lsu.scala:141:16
  input         io_SLess,	// core/src/lsu.scala:141:16
                io_ULess,	// core/src/lsu.scala:141:16
                io_Zero,	// core/src/lsu.scala:141:16
  output [31:0] io_nextPC	// core/src/lsu.scala:141:16
);

  assign io_nextPC =
    (io_branchOp == 4'h8 ? io_rj_data : io_pc)
    + (io_branchOp == 4'h8 | io_branchOp == 4'h7 | io_branchOp == 4'h6
         ? io_offset
         : io_branchOp == 4'h5
             ? (io_ULess ? 32'h4 : io_offset)
             : io_branchOp == 4'h4
                 ? (io_ULess ? io_offset : 32'h4)
                 : io_branchOp == 4'h3
                     ? (io_SLess ? 32'h4 : io_offset)
                     : io_branchOp == 4'h2
                         ? (io_SLess ? io_offset : 32'h4)
                         : io_branchOp == 4'h1
                             ? (io_Zero ? 32'h4 : io_offset)
                             : io_branchOp == 4'h0 & io_Zero ? io_offset : 32'h4);	// core/src/lsu.scala:140:7, :152:48, :156:46, :157:26, :158:26, :159:26, :160:26, :161:27, :162:27, :168:25
endmodule

module lsu(	// core/src/lsu.scala:5:7
  input  [31:0] io_ext_in_bits_data_out,	// core/src/lsu.scala:6:16
  output        io_ext_out_valid,	// core/src/lsu.scala:6:16
                io_ext_out_bits_data_wen,	// core/src/lsu.scala:6:16
  output [31:0] io_ext_out_bits_data_in,	// core/src/lsu.scala:6:16
                io_ext_out_bits_addr,	// core/src/lsu.scala:6:16
  output [3:0]  io_ext_out_bits_be_n,	// core/src/lsu.scala:6:16
  output        io_ext_out_bits_ce_n,	// core/src/lsu.scala:6:16
                io_ext_out_bits_oe_n,	// core/src/lsu.scala:6:16
                io_ext_out_bits_we_n,	// core/src/lsu.scala:6:16
  input         io_prev_valid,	// core/src/lsu.scala:6:16
  input  [31:0] io_prev_bits_ALUOut,	// core/src/lsu.scala:6:16
  input         io_prev_bits_SLess,	// core/src/lsu.scala:6:16
                io_prev_bits_ULess,	// core/src/lsu.scala:6:16
                io_prev_bits_Zero,	// core/src/lsu.scala:6:16
  input  [3:0]  io_prev_bits_branchOp,	// core/src/lsu.scala:6:16
                io_prev_bits_memOp,	// core/src/lsu.scala:6:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/lsu.scala:6:16
                io_prev_bits_wbDst,	// core/src/lsu.scala:6:16
  input  [31:0] io_prev_bits_Imm,	// core/src/lsu.scala:6:16
  input  [4:0]  io_prev_bits_rd,	// core/src/lsu.scala:6:16
  input  [31:0] io_prev_bits_rd_data,	// core/src/lsu.scala:6:16
                io_prev_bits_rj_data,	// core/src/lsu.scala:6:16
                io_prev_bits_pc,	// core/src/lsu.scala:6:16
  output        io_next_valid,	// core/src/lsu.scala:6:16
  output [31:0] io_next_bits_MemOut,	// core/src/lsu.scala:6:16
                io_next_bits_ALUOut,	// core/src/lsu.scala:6:16
  output [1:0]  io_next_bits_wbSel,	// core/src/lsu.scala:6:16
                io_next_bits_wbDst,	// core/src/lsu.scala:6:16
  output [4:0]  io_next_bits_rd,	// core/src/lsu.scala:6:16
  output [31:0] io_nextPC	// core/src/lsu.scala:6:16
);

  wire [3:0][3:0]  _GEN = '{4'h7, 4'hB, 4'hD, 4'hE};	// core/src/lsu.scala:43:50
  wire [3:0][7:0]  _GEN_0 =
    {{io_ext_in_bits_data_out[31:24]},
     {io_ext_in_bits_data_out[23:16]},
     {io_ext_in_bits_data_out[15:8]},
     {io_ext_in_bits_data_out[7:0]}};	// core/src/lsu.scala:24:51, :25:24, :26:24, :27:24, :28:24
  wire [7:0]       FetchByte = _GEN_0[io_prev_bits_ALUOut[1:0]];	// core/src/lsu.scala:24:{38,51}
  wire [15:0]      FetchHalf =
    io_prev_bits_ALUOut[1]
      ? io_ext_in_bits_data_out[31:16]
      : io_ext_in_bits_data_out[15:0];	// core/src/lsu.scala:30:{38,48}, :31:24, :32:24
  wire [3:0][31:0] _GEN_1 =
    {{{io_prev_bits_rd_data[7:0], 24'h0}},
     {{8'h0, io_prev_bits_rd_data[7:0], 16'h0}},
     {{16'h0, io_prev_bits_rd_data[7:0], 8'h0}},
     {{24'h0, io_prev_bits_rd_data[7:0]}}};	// core/src/lsu.scala:36:31, :38:31, :60:50, :61:{19,44}, :62:{19,56}, :63:19, :64:19
  branchContr branch (	// core/src/lsu.scala:116:24
    .io_pc       (io_prev_bits_pc),
    .io_rj_data  (io_prev_bits_rj_data),
    .io_offset   (io_prev_bits_Imm),
    .io_branchOp (io_prev_bits_branchOp),
    .io_SLess    (io_prev_bits_SLess),
    .io_ULess    (io_prev_bits_ULess),
    .io_Zero     (io_prev_bits_Zero),
    .io_nextPC   (io_nextPC)
  );
  assign io_ext_out_valid = io_prev_bits_memOp != 4'h8 & io_prev_valid;	// core/src/lsu.scala:5:7, :127:{44,60}
  assign io_ext_out_bits_data_wen =
    io_prev_bits_memOp == 4'h7 | io_prev_bits_memOp == 4'h6 | io_prev_bits_memOp == 4'h5;	// core/src/lsu.scala:5:7, :43:50, :54:38, :100:52
  assign io_ext_out_bits_data_in =
    io_prev_bits_memOp == 4'h7 | io_prev_bits_memOp == 4'h6 | io_prev_bits_memOp == 4'h5
      ? (io_prev_bits_memOp == 4'h7
           ? io_prev_bits_rd_data
           : io_prev_bits_memOp == 4'h6
               ? (io_prev_bits_ALUOut[1]
                    ? {io_prev_bits_rd_data[15:0], 16'h0}
                    : {16'h0, io_prev_bits_rd_data[15:0]})
               : io_prev_bits_memOp == 4'h5 ? _GEN_1[io_prev_bits_ALUOut[1:0]] : 32'h0)
      : 32'h0;	// core/src/lsu.scala:5:7, :24:38, :30:38, :35:38, :38:31, :43:50, :54:38, :60:50, :66:47, :67:{19,44}, :68:19, :71:38, :105:51
  assign io_ext_out_bits_addr = io_prev_bits_ALUOut;	// core/src/lsu.scala:5:7
  assign io_ext_out_bits_be_n =
    ~(io_prev_bits_memOp == 4'h7 | io_prev_bits_memOp == 4'h6
      | io_prev_bits_memOp == 4'h5) | io_prev_bits_memOp == 4'h7
      ? 4'h0
      : io_prev_bits_memOp == 4'h6
          ? (io_prev_bits_ALUOut[1] ? 4'h3 : 4'hC)
          : io_prev_bits_memOp == 4'h5 ? _GEN[io_prev_bits_ALUOut[1:0]] : 4'h0;	// core/src/lsu.scala:5:7, :24:38, :30:38, :43:50, :49:47, :54:38, :110:48
  assign io_ext_out_bits_ce_n =
    ~(io_prev_bits_memOp == 4'h7 | io_prev_bits_memOp == 4'h6 | io_prev_bits_memOp == 4'h5
      | io_prev_bits_memOp == 4'h4 | io_prev_bits_memOp == 4'h3
      | io_prev_bits_memOp == 4'h2 | io_prev_bits_memOp == 4'h1) & (|io_prev_bits_memOp);	// core/src/lsu.scala:5:7, :35:38, :43:50, :49:47, :54:38, :78:48
  assign io_ext_out_bits_oe_n =
    ~(io_prev_bits_memOp == 4'h4 | io_prev_bits_memOp == 4'h3 | io_prev_bits_memOp == 4'h2
      | io_prev_bits_memOp == 4'h1) & (|io_prev_bits_memOp);	// core/src/lsu.scala:5:7, :35:38, :49:47, :88:48
  assign io_ext_out_bits_we_n =
    ~(io_prev_bits_memOp == 4'h7 | io_prev_bits_memOp == 4'h6)
    & io_prev_bits_memOp != 4'h5;	// core/src/lsu.scala:5:7, :43:50, :54:38, :95:48
  assign io_next_valid = io_prev_valid;	// core/src/lsu.scala:5:7
  assign io_next_bits_MemOut =
    io_prev_bits_memOp == 4'h4
      ? io_ext_in_bits_data_out
      : io_prev_bits_memOp == 4'h3
          ? {16'h0, FetchHalf}
          : io_prev_bits_memOp == 4'h2
              ? {{16{FetchHalf[15]}}, FetchHalf}
              : io_prev_bits_memOp == 4'h1
                  ? {24'h0, FetchByte}
                  : io_prev_bits_memOp == 4'h0 ? {{24{FetchByte[7]}}, FetchByte} : 32'h0;	// core/src/lsu.scala:5:7, :24:51, :30:48, :35:38, :36:{26,31,45}, :37:26, :38:{26,31,45}, :39:26, :49:47, :54:38
  assign io_next_bits_ALUOut = io_prev_bits_ALUOut;	// core/src/lsu.scala:5:7
  assign io_next_bits_wbSel = io_prev_bits_wbSel;	// core/src/lsu.scala:5:7
  assign io_next_bits_wbDst = io_prev_bits_wbDst;	// core/src/lsu.scala:5:7
  assign io_next_bits_rd = io_prev_bits_rd;	// core/src/lsu.scala:5:7
endmodule

module buffer_3(	// core/src/core.scala:100:7
  input         clock,	// core/src/core.scala:100:7
                reset,	// core/src/core.scala:100:7
                io_prev_valid,	// core/src/core.scala:101:16
  input  [31:0] io_prev_bits_MemOut,	// core/src/core.scala:101:16
                io_prev_bits_ALUOut,	// core/src/core.scala:101:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/core.scala:101:16
                io_prev_bits_wbDst,	// core/src/core.scala:101:16
  input  [4:0]  io_prev_bits_rd,	// core/src/core.scala:101:16
  output        io_next_valid,	// core/src/core.scala:101:16
  output [31:0] io_next_bits_MemOut,	// core/src/core.scala:101:16
                io_next_bits_ALUOut,	// core/src/core.scala:101:16
  output [1:0]  io_next_bits_wbSel,	// core/src/core.scala:101:16
                io_next_bits_wbDst,	// core/src/core.scala:101:16
  output [4:0]  io_next_bits_rd	// core/src/core.scala:101:16
);

  reg        state;	// core/src/core.scala:107:24
  reg [31:0] regs_MemOut;	// core/src/core.scala:108:19
  reg [31:0] regs_ALUOut;	// core/src/core.scala:108:19
  reg [1:0]  regs_wbSel;	// core/src/core.scala:108:19
  reg [1:0]  regs_wbDst;	// core/src/core.scala:108:19
  reg [4:0]  regs_rd;	// core/src/core.scala:108:19
  always @(posedge clock) begin	// core/src/core.scala:100:7
    if (reset)	// core/src/core.scala:100:7
      state <= 1'h0;	// core/src/core.scala:101:16, :107:24
    else	// core/src/core.scala:100:7
      state <= io_prev_valid;	// core/src/core.scala:107:24
    regs_MemOut <= io_prev_valid ? io_prev_bits_MemOut : 32'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
    regs_ALUOut <= io_prev_valid ? io_prev_bits_ALUOut : 32'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
    regs_wbSel <= io_prev_valid ? io_prev_bits_wbSel : 2'h0;	// core/src/core.scala:100:7, :108:19, :119:30, :121:14, :125:14
    regs_wbDst <= io_prev_valid ? io_prev_bits_wbDst : 2'h0;	// core/src/core.scala:100:7, :108:19, :119:30, :121:14, :125:14
    regs_rd <= io_prev_valid ? io_prev_bits_rd : 5'h0;	// core/src/core.scala:108:19, :113:29, :119:30, :121:14, :125:14
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/core.scala:100:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/core.scala:100:7
      `FIRRTL_BEFORE_INITIAL	// core/src/core.scala:100:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/core.scala:100:7
      automatic logic [31:0] _RANDOM[0:2];	// core/src/core.scala:100:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/core.scala:100:7
        `INIT_RANDOM_PROLOG_	// core/src/core.scala:100:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/core.scala:100:7
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// core/src/core.scala:100:7
        end	// core/src/core.scala:100:7
        state = _RANDOM[2'h0][0];	// core/src/core.scala:100:7, :107:24
        regs_MemOut = {_RANDOM[2'h0][31:1], _RANDOM[2'h1][0]};	// core/src/core.scala:100:7, :107:24, :108:19
        regs_ALUOut = {_RANDOM[2'h1][31:1], _RANDOM[2'h2][0]};	// core/src/core.scala:100:7, :108:19
        regs_wbSel = _RANDOM[2'h2][2:1];	// core/src/core.scala:100:7, :108:19
        regs_wbDst = _RANDOM[2'h2][4:3];	// core/src/core.scala:100:7, :108:19
        regs_rd = _RANDOM[2'h2][9:5];	// core/src/core.scala:100:7, :108:19
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/core.scala:100:7
      `FIRRTL_AFTER_INITIAL	// core/src/core.scala:100:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_next_valid = state;	// core/src/core.scala:100:7, :107:24
  assign io_next_bits_MemOut = regs_MemOut;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_ALUOut = regs_ALUOut;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_wbSel = regs_wbSel;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_wbDst = regs_wbDst;	// core/src/core.scala:100:7, :108:19
  assign io_next_bits_rd = regs_rd;	// core/src/core.scala:100:7, :108:19
endmodule

module wbu(	// core/src/wbu.scala:5:7
  input         io_prev_valid,	// core/src/wbu.scala:6:16
  input  [31:0] io_prev_bits_MemOut,	// core/src/wbu.scala:6:16
                io_prev_bits_ALUOut,	// core/src/wbu.scala:6:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/wbu.scala:6:16
                io_prev_bits_wbDst,	// core/src/wbu.scala:6:16
  input  [4:0]  io_prev_bits_rd,	// core/src/wbu.scala:6:16
  output        io_wen,	// core/src/wbu.scala:6:16
  output [4:0]  io_waddr,	// core/src/wbu.scala:6:16
  output [31:0] io_wdata,	// core/src/wbu.scala:6:16
  input  [31:0] io_P	// core/src/wbu.scala:6:16
);

  wire [3:0][31:0] _GEN = {{32'h0}, {io_P}, {io_prev_bits_MemOut}, {io_prev_bits_ALUOut}};	// core/src/wbu.scala:21:52
  assign io_wen = io_prev_bits_wbSel != 2'h3 & io_prev_valid;	// core/src/wbu.scala:5:7, :16:{34,50}
  assign io_waddr =
    io_prev_bits_wbDst == 2'h1
      ? 5'h1
      : io_prev_bits_wbDst == 2'h0 ? io_prev_bits_rd : 5'h0;	// core/src/wbu.scala:5:7, :17:52
  assign io_wdata = _GEN[io_prev_bits_wbSel];	// core/src/wbu.scala:5:7, :21:52
endmodule

module forwarding(	// core/src/idu.scala:5:7
  input        clock,	// core/src/idu.scala:5:7
  input  [4:0] io_RJ,	// core/src/idu.scala:6:16
               io_RK,	// core/src/idu.scala:6:16
               io_RD,	// core/src/idu.scala:6:16
               io_RDst,	// core/src/idu.scala:6:16
  input  [1:0] io_RSel,	// core/src/idu.scala:6:16
  input        io_flush,	// core/src/idu.scala:6:16
  output       io_stall,	// core/src/idu.scala:6:16
  output [2:0] io_FwID_RJ,	// core/src/idu.scala:6:16
               io_FwID_RK,	// core/src/idu.scala:6:16
               io_FwID_RD,	// core/src/idu.scala:6:16
               io_FwEX_RJ,	// core/src/idu.scala:6:16
               io_FwEX_RK,	// core/src/idu.scala:6:16
               io_FwEX_RD	// core/src/idu.scala:6:16
);

  wire [3:0][2:0] _GEN = '{3'h6, 3'h3, 3'h2, 3'h1};	// core/src/idu.scala:41:33, :42:33, :43:33, src/main/scala/chisel3/util/Mux.scala:126:16
  wire [3:0][2:0] _GEN_0 = '{3'h6, 3'h5, 3'h5, 3'h0};	// core/src/idu.scala:36:33, src/main/scala/chisel3/util/Mux.scala:126:16
  reg  [4:0]      RDstReg_0;	// core/src/idu.scala:24:22
  reg  [4:0]      RDstReg_1;	// core/src/idu.scala:24:22
  reg  [4:0]      RDstReg_2;	// core/src/idu.scala:24:22
  reg  [1:0]      RSelReg_0;	// core/src/idu.scala:25:22
  reg  [1:0]      RSelReg_1;	// core/src/idu.scala:25:22
  reg  [1:0]      RSelReg_2;	// core/src/idu.scala:25:22
  wire            _EX_RJ_T = io_RJ == 5'h0;	// core/src/idu.scala:28:17, :114:26
  wire            _EX_RJ_T_1 = io_RJ == RDstReg_0;	// core/src/idu.scala:24:22, :30:22
  wire            _GEN_1 = RSelReg_0 == 2'h0 | RSelReg_0 == 2'h1 | RSelReg_0 == 2'h2;	// core/src/idu.scala:25:22, :31:33, :32:33, :33:33, src/main/scala/chisel3/util/Mux.scala:126:16
  wire            _EX_RJ_T_8 = io_RJ == RDstReg_1;	// core/src/idu.scala:24:22, :35:22
  wire            _EX_RJ_T_15 = io_RJ == RDstReg_2;	// core/src/idu.scala:24:22, :40:22
  wire [2:0]      _ID_RJ_T_24 =
    _EX_RJ_T_1
      ? (_GEN_1 ? 3'h5 : 3'h6)
      : _EX_RJ_T_8 ? _GEN_0[RSelReg_1] : _EX_RJ_T_15 ? _GEN[RSelReg_2] : 3'h6;	// core/src/idu.scala:25:22, :30:22, :35:22, :36:33, :40:22, :41:33, :42:33, :43:33, src/main/scala/chisel3/util/Mux.scala:126:16
  wire            _EX_RK_T = io_RK == 5'h0;	// core/src/idu.scala:28:17, :114:26
  wire            _EX_RK_T_1 = io_RK == RDstReg_0;	// core/src/idu.scala:24:22, :30:22
  wire            _EX_RK_T_8 = io_RK == RDstReg_1;	// core/src/idu.scala:24:22, :35:22
  wire            _EX_RK_T_15 = io_RK == RDstReg_2;	// core/src/idu.scala:24:22, :40:22
  wire [2:0]      _ID_RK_T_24 =
    _EX_RK_T_1
      ? (_GEN_1 ? 3'h5 : 3'h6)
      : _EX_RK_T_8 ? _GEN_0[RSelReg_1] : _EX_RK_T_15 ? _GEN[RSelReg_2] : 3'h6;	// core/src/idu.scala:25:22, :30:22, :35:22, :36:33, :40:22, :41:33, :42:33, :43:33, src/main/scala/chisel3/util/Mux.scala:126:16
  wire            _EX_RD_T = io_RD == 5'h0;	// core/src/idu.scala:28:17, :114:26
  wire            _EX_RD_T_1 = io_RD == RDstReg_0;	// core/src/idu.scala:24:22, :30:22
  wire            _EX_RD_T_8 = io_RD == RDstReg_1;	// core/src/idu.scala:24:22, :35:22
  wire            _EX_RD_T_15 = io_RD == RDstReg_2;	// core/src/idu.scala:24:22, :40:22
  wire [2:0]      _ID_RD_T_24 =
    _EX_RD_T_1
      ? (_GEN_1 ? 3'h5 : 3'h6)
      : _EX_RD_T_8 ? _GEN_0[RSelReg_1] : _EX_RD_T_15 ? _GEN[RSelReg_2] : 3'h6;	// core/src/idu.scala:25:22, :30:22, :35:22, :36:33, :40:22, :41:33, :42:33, :43:33, src/main/scala/chisel3/util/Mux.scala:126:16
  wire            _GEN_2 = RSelReg_2 == 2'h0 | RSelReg_2 == 2'h1 | RSelReg_2 == 2'h2;	// core/src/idu.scala:25:22, :31:33, :32:33, :33:33, :41:33, :42:33, :43:33, src/main/scala/chisel3/util/Mux.scala:126:16
  wire [2:0]      _EX_RJ_T_24 =
    _EX_RJ_T_1
      ? _GEN_0[RSelReg_0]
      : _EX_RJ_T_8 ? _GEN[RSelReg_1] : _EX_RJ_T_15 & _GEN_2 ? 3'h5 : 3'h6;	// core/src/idu.scala:25:22, :30:22, :35:22, :36:33, :40:22, :41:33, :42:33, :43:33, src/main/scala/chisel3/util/Mux.scala:126:16
  wire [2:0]      _EX_RK_T_24 =
    _EX_RK_T_1
      ? _GEN_0[RSelReg_0]
      : _EX_RK_T_8 ? _GEN[RSelReg_1] : _EX_RK_T_15 & _GEN_2 ? 3'h5 : 3'h6;	// core/src/idu.scala:25:22, :30:22, :35:22, :36:33, :40:22, :41:33, :42:33, :43:33, src/main/scala/chisel3/util/Mux.scala:126:16
  wire [2:0]      _EX_RD_T_24 =
    _EX_RD_T_1
      ? _GEN_0[RSelReg_0]
      : _EX_RD_T_8 ? _GEN[RSelReg_1] : _EX_RD_T_15 & _GEN_2 ? 3'h5 : 3'h6;	// core/src/idu.scala:25:22, :30:22, :35:22, :36:33, :40:22, :41:33, :42:33, :43:33, src/main/scala/chisel3/util/Mux.scala:126:16
  wire            _RetEX_RJ_T_3 = (_EX_RJ_T ? 3'h6 : _ID_RJ_T_24) == 3'h5;	// core/src/idu.scala:28:{12,17}, :71:20, src/main/scala/chisel3/util/Mux.scala:126:16
  wire            _RetEX_RJ_T_1 = (_EX_RJ_T ? 3'h6 : _EX_RJ_T_24) == 3'h5;	// core/src/idu.scala:28:17, :49:12, :71:50, src/main/scala/chisel3/util/Mux.scala:126:16
  wire [2:0]      RetID_RJ =
    _RetEX_RJ_T_3 & _RetEX_RJ_T_1 ? 3'h5 : _RetEX_RJ_T_3 | _EX_RJ_T ? 3'h6 : _ID_RJ_T_24;	// core/src/idu.scala:28:{12,17}, :71:{20,41,50,72}, :72:17, :74:47, :75:17, :78:17, src/main/scala/chisel3/util/Mux.scala:126:16
  wire            _RetEX_RK_T_3 = (_EX_RK_T ? 3'h6 : _ID_RK_T_24) == 3'h5;	// core/src/idu.scala:28:{12,17}, :71:20, src/main/scala/chisel3/util/Mux.scala:126:16
  wire            _RetEX_RK_T_1 = (_EX_RK_T ? 3'h6 : _EX_RK_T_24) == 3'h5;	// core/src/idu.scala:28:17, :49:12, :71:50, src/main/scala/chisel3/util/Mux.scala:126:16
  wire [2:0]      RetID_RK =
    _RetEX_RK_T_3 & _RetEX_RK_T_1 ? 3'h5 : _RetEX_RK_T_3 | _EX_RK_T ? 3'h6 : _ID_RK_T_24;	// core/src/idu.scala:28:{12,17}, :71:{20,41,50,72}, :72:17, :74:47, :75:17, :78:17, src/main/scala/chisel3/util/Mux.scala:126:16
  wire            _RetEX_RD_T_3 = (_EX_RD_T ? 3'h6 : _ID_RD_T_24) == 3'h5;	// core/src/idu.scala:28:{12,17}, :71:20, src/main/scala/chisel3/util/Mux.scala:126:16
  wire            _RetEX_RD_T_1 = (_EX_RD_T ? 3'h6 : _EX_RD_T_24) == 3'h5;	// core/src/idu.scala:28:17, :49:12, :71:50, src/main/scala/chisel3/util/Mux.scala:126:16
  wire [2:0]      RetID_RD =
    _RetEX_RD_T_3 & _RetEX_RD_T_1 ? 3'h5 : _RetEX_RD_T_3 | _EX_RD_T ? 3'h6 : _ID_RD_T_24;	// core/src/idu.scala:28:{12,17}, :71:{20,41,50,72}, :72:17, :74:47, :75:17, :78:17, src/main/scala/chisel3/util/Mux.scala:126:16
  wire [2:0]      RetEX_RJ =
    _RetEX_RJ_T_3 & _RetEX_RJ_T_1 ? 3'h5 : ~_RetEX_RJ_T_3 | _EX_RJ_T ? 3'h6 : _EX_RJ_T_24;	// core/src/idu.scala:28:17, :71:{20,50}, :84:{41,72}, :85:17, :87:47, :88:17, :91:17, src/main/scala/chisel3/util/Mux.scala:126:16
  wire [2:0]      RetEX_RK =
    _RetEX_RK_T_3 & _RetEX_RK_T_1 ? 3'h5 : ~_RetEX_RK_T_3 | _EX_RK_T ? 3'h6 : _EX_RK_T_24;	// core/src/idu.scala:28:17, :71:{20,50}, :84:{41,72}, :85:17, :87:47, :88:17, :91:17, src/main/scala/chisel3/util/Mux.scala:126:16
  wire [2:0]      RetEX_RD =
    _RetEX_RD_T_3 & _RetEX_RD_T_1 ? 3'h5 : ~_RetEX_RD_T_3 | _EX_RD_T ? 3'h6 : _EX_RD_T_24;	// core/src/idu.scala:28:17, :71:{20,50}, :84:{41,72}, :85:17, :87:47, :88:17, :91:17, src/main/scala/chisel3/util/Mux.scala:126:16
  wire            Stall =
    RetID_RJ == 3'h5 | RetID_RK == 3'h5 | RetID_RD == 3'h5 | RetEX_RJ == 3'h5
    | RetEX_RK == 3'h5 | RetEX_RD == 3'h5;	// core/src/idu.scala:71:72, :72:17, :74:47, :84:72, :85:17, :87:47, :109:{28,61,94}, :110:{28,61,94}, :111:25, src/main/scala/chisel3/util/Mux.scala:126:16
  always @(posedge clock) begin	// core/src/idu.scala:5:7
    automatic logic _GEN_3 = io_flush | Stall;	// core/src/idu.scala:111:25, :113:28, :114:20, :122:17
    if (_GEN_3)	// core/src/idu.scala:113:28, :114:20, :122:17
      RDstReg_0 <= 5'h0;	// core/src/idu.scala:24:22, :114:26
    else	// core/src/idu.scala:113:28, :114:20, :122:17
      RDstReg_0 <= io_RDst;	// core/src/idu.scala:24:22
    RDstReg_1 <= io_flush ? 5'h0 : RDstReg_0;	// core/src/idu.scala:24:22, :113:28, :114:26, :117:28, :122:17
    RDstReg_2 <= io_flush ? 5'h0 : RDstReg_1;	// core/src/idu.scala:24:22, :113:28, :114:26, :117:28, :122:17
    if (_GEN_3)	// core/src/idu.scala:113:28, :114:20, :115:20, :122:17, :123:17
      RSelReg_0 <= 2'h3;	// core/src/idu.scala:25:22, src/main/scala/chisel3/util/Mux.scala:126:16
    else	// core/src/idu.scala:113:28, :115:20, :123:17
      RSelReg_0 <= io_RSel;	// core/src/idu.scala:25:22
    RSelReg_1 <= io_flush ? 2'h3 : RSelReg_0;	// core/src/idu.scala:25:22, :113:28, :118:28, :123:17, src/main/scala/chisel3/util/Mux.scala:126:16
    RSelReg_2 <= io_flush ? 2'h3 : RSelReg_1;	// core/src/idu.scala:25:22, :113:28, :118:28, :123:17, src/main/scala/chisel3/util/Mux.scala:126:16
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/idu.scala:5:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/idu.scala:5:7
      `FIRRTL_BEFORE_INITIAL	// core/src/idu.scala:5:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/idu.scala:5:7
      automatic logic [31:0] _RANDOM[0:0];	// core/src/idu.scala:5:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/idu.scala:5:7
        `INIT_RANDOM_PROLOG_	// core/src/idu.scala:5:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/idu.scala:5:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// core/src/idu.scala:5:7
        RDstReg_0 = _RANDOM[/*Zero width*/ 1'b0][4:0];	// core/src/idu.scala:5:7, :24:22
        RDstReg_1 = _RANDOM[/*Zero width*/ 1'b0][9:5];	// core/src/idu.scala:5:7, :24:22
        RDstReg_2 = _RANDOM[/*Zero width*/ 1'b0][14:10];	// core/src/idu.scala:5:7, :24:22
        RSelReg_0 = _RANDOM[/*Zero width*/ 1'b0][16:15];	// core/src/idu.scala:5:7, :24:22, :25:22
        RSelReg_1 = _RANDOM[/*Zero width*/ 1'b0][18:17];	// core/src/idu.scala:5:7, :24:22, :25:22
        RSelReg_2 = _RANDOM[/*Zero width*/ 1'b0][20:19];	// core/src/idu.scala:5:7, :24:22, :25:22
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/idu.scala:5:7
      `FIRRTL_AFTER_INITIAL	// core/src/idu.scala:5:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_stall = Stall;	// core/src/idu.scala:5:7, :111:25
  assign io_FwID_RJ = RetID_RJ;	// core/src/idu.scala:5:7, :71:72, :72:17, :74:47
  assign io_FwID_RK = RetID_RK;	// core/src/idu.scala:5:7, :71:72, :72:17, :74:47
  assign io_FwID_RD = RetID_RD;	// core/src/idu.scala:5:7, :71:72, :72:17, :74:47
  assign io_FwEX_RJ = RetEX_RJ;	// core/src/idu.scala:5:7, :84:72, :85:17, :87:47
  assign io_FwEX_RK = RetEX_RK;	// core/src/idu.scala:5:7, :84:72, :85:17, :87:47
  assign io_FwEX_RD = RetEX_RD;	// core/src/idu.scala:5:7, :84:72, :85:17, :87:47
endmodule

module core(	// core/src/core.scala:5:7
  input         clock,	// core/src/core.scala:5:7
                reset,	// core/src/core.scala:5:7
  input  [31:0] io_ifu_in_bits_data_out,	// core/src/core.scala:6:16
  input         io_ifu_out_ready,	// core/src/core.scala:6:16
  output        io_ifu_out_valid,	// core/src/core.scala:6:16
  output [31:0] io_ifu_out_bits_addr,	// core/src/core.scala:6:16
  input  [31:0] io_lsu_in_bits_data_out,	// core/src/core.scala:6:16
  output        io_lsu_out_valid,	// core/src/core.scala:6:16
                io_lsu_out_bits_data_wen,	// core/src/core.scala:6:16
  output [31:0] io_lsu_out_bits_data_in,	// core/src/core.scala:6:16
                io_lsu_out_bits_addr,	// core/src/core.scala:6:16
  output [3:0]  io_lsu_out_bits_be_n,	// core/src/core.scala:6:16
  output        io_lsu_out_bits_ce_n,	// core/src/core.scala:6:16
                io_lsu_out_bits_oe_n,	// core/src/core.scala:6:16
                io_lsu_out_bits_we_n	// core/src/core.scala:6:16
);

  wire        _fwctrl_io_stall;	// core/src/core.scala:46:24
  wire [2:0]  _fwctrl_io_FwID_RJ;	// core/src/core.scala:46:24
  wire [2:0]  _fwctrl_io_FwID_RK;	// core/src/core.scala:46:24
  wire [2:0]  _fwctrl_io_FwID_RD;	// core/src/core.scala:46:24
  wire [2:0]  _fwctrl_io_FwEX_RJ;	// core/src/core.scala:46:24
  wire [2:0]  _fwctrl_io_FwEX_RK;	// core/src/core.scala:46:24
  wire [2:0]  _fwctrl_io_FwEX_RD;	// core/src/core.scala:46:24
  wire        _wbu_io_wen;	// core/src/core.scala:20:21
  wire [4:0]  _wbu_io_waddr;	// core/src/core.scala:20:21
  wire [31:0] _wbu_io_wdata;	// core/src/core.scala:20:21
  wire        _lsu_wbu_io_next_valid;	// core/src/core.scala:19:25
  wire [31:0] _lsu_wbu_io_next_bits_MemOut;	// core/src/core.scala:19:25
  wire [31:0] _lsu_wbu_io_next_bits_ALUOut;	// core/src/core.scala:19:25
  wire [1:0]  _lsu_wbu_io_next_bits_wbSel;	// core/src/core.scala:19:25
  wire [1:0]  _lsu_wbu_io_next_bits_wbDst;	// core/src/core.scala:19:25
  wire [4:0]  _lsu_wbu_io_next_bits_rd;	// core/src/core.scala:19:25
  wire        _lsu_io_next_valid;	// core/src/core.scala:18:21
  wire [31:0] _lsu_io_next_bits_MemOut;	// core/src/core.scala:18:21
  wire [31:0] _lsu_io_next_bits_ALUOut;	// core/src/core.scala:18:21
  wire [1:0]  _lsu_io_next_bits_wbSel;	// core/src/core.scala:18:21
  wire [1:0]  _lsu_io_next_bits_wbDst;	// core/src/core.scala:18:21
  wire [4:0]  _lsu_io_next_bits_rd;	// core/src/core.scala:18:21
  wire [31:0] _lsu_io_nextPC;	// core/src/core.scala:18:21
  wire        _exu_lsu_io_next_valid;	// core/src/core.scala:17:25
  wire [31:0] _exu_lsu_io_next_bits_ALUOut;	// core/src/core.scala:17:25
  wire        _exu_lsu_io_next_bits_SLess;	// core/src/core.scala:17:25
  wire        _exu_lsu_io_next_bits_ULess;	// core/src/core.scala:17:25
  wire        _exu_lsu_io_next_bits_Zero;	// core/src/core.scala:17:25
  wire [3:0]  _exu_lsu_io_next_bits_branchOp;	// core/src/core.scala:17:25
  wire [3:0]  _exu_lsu_io_next_bits_memOp;	// core/src/core.scala:17:25
  wire [1:0]  _exu_lsu_io_next_bits_wbSel;	// core/src/core.scala:17:25
  wire [1:0]  _exu_lsu_io_next_bits_wbDst;	// core/src/core.scala:17:25
  wire [31:0] _exu_lsu_io_next_bits_Imm;	// core/src/core.scala:17:25
  wire [4:0]  _exu_lsu_io_next_bits_rd;	// core/src/core.scala:17:25
  wire [31:0] _exu_lsu_io_next_bits_rd_data;	// core/src/core.scala:17:25
  wire [31:0] _exu_lsu_io_next_bits_rj_data;	// core/src/core.scala:17:25
  wire [31:0] _exu_lsu_io_next_bits_pc;	// core/src/core.scala:17:25
  wire        _exu_io_next_valid;	// core/src/core.scala:16:21
  wire [31:0] _exu_io_next_bits_ALUOut;	// core/src/core.scala:16:21
  wire        _exu_io_next_bits_SLess;	// core/src/core.scala:16:21
  wire        _exu_io_next_bits_ULess;	// core/src/core.scala:16:21
  wire        _exu_io_next_bits_Zero;	// core/src/core.scala:16:21
  wire [3:0]  _exu_io_next_bits_branchOp;	// core/src/core.scala:16:21
  wire [3:0]  _exu_io_next_bits_memOp;	// core/src/core.scala:16:21
  wire [1:0]  _exu_io_next_bits_wbSel;	// core/src/core.scala:16:21
  wire [1:0]  _exu_io_next_bits_wbDst;	// core/src/core.scala:16:21
  wire [31:0] _exu_io_next_bits_Imm;	// core/src/core.scala:16:21
  wire [4:0]  _exu_io_next_bits_rd;	// core/src/core.scala:16:21
  wire [31:0] _exu_io_next_bits_rd_data;	// core/src/core.scala:16:21
  wire [31:0] _exu_io_next_bits_rj_data;	// core/src/core.scala:16:21
  wire [31:0] _exu_io_next_bits_pc;	// core/src/core.scala:16:21
  wire [31:0] _exu_io_P;	// core/src/core.scala:16:21
  wire        _idu_exu_io_next_valid;	// core/src/core.scala:15:25
  wire [3:0]  _idu_exu_io_next_bits_aluOp;	// core/src/core.scala:15:25
  wire [1:0]  _idu_exu_io_next_bits_aluAsrc;	// core/src/core.scala:15:25
  wire [2:0]  _idu_exu_io_next_bits_aluBsrc;	// core/src/core.scala:15:25
  wire [3:0]  _idu_exu_io_next_bits_branchOp;	// core/src/core.scala:15:25
  wire [3:0]  _idu_exu_io_next_bits_memOp;	// core/src/core.scala:15:25
  wire [1:0]  _idu_exu_io_next_bits_wbSel;	// core/src/core.scala:15:25
  wire [1:0]  _idu_exu_io_next_bits_wbDst;	// core/src/core.scala:15:25
  wire [31:0] _idu_exu_io_next_bits_Imm;	// core/src/core.scala:15:25
  wire [4:0]  _idu_exu_io_next_bits_rd;	// core/src/core.scala:15:25
  wire [31:0] _idu_exu_io_next_bits_rd_data;	// core/src/core.scala:15:25
  wire [31:0] _idu_exu_io_next_bits_rj_data;	// core/src/core.scala:15:25
  wire [31:0] _idu_exu_io_next_bits_rk_data;	// core/src/core.scala:15:25
  wire [2:0]  _idu_exu_io_next_bits_FwEX_RD;	// core/src/core.scala:15:25
  wire [2:0]  _idu_exu_io_next_bits_FwEX_RJ;	// core/src/core.scala:15:25
  wire [2:0]  _idu_exu_io_next_bits_FwEX_RK;	// core/src/core.scala:15:25
  wire [31:0] _idu_exu_io_next_bits_pc;	// core/src/core.scala:15:25
  wire        _idu_io_next_valid;	// core/src/core.scala:14:21
  wire [3:0]  _idu_io_next_bits_aluOp;	// core/src/core.scala:14:21
  wire [1:0]  _idu_io_next_bits_aluAsrc;	// core/src/core.scala:14:21
  wire [2:0]  _idu_io_next_bits_aluBsrc;	// core/src/core.scala:14:21
  wire [3:0]  _idu_io_next_bits_branchOp;	// core/src/core.scala:14:21
  wire [3:0]  _idu_io_next_bits_memOp;	// core/src/core.scala:14:21
  wire [1:0]  _idu_io_next_bits_wbSel;	// core/src/core.scala:14:21
  wire [1:0]  _idu_io_next_bits_wbDst;	// core/src/core.scala:14:21
  wire [31:0] _idu_io_next_bits_Imm;	// core/src/core.scala:14:21
  wire [4:0]  _idu_io_next_bits_rd;	// core/src/core.scala:14:21
  wire [31:0] _idu_io_next_bits_rd_data;	// core/src/core.scala:14:21
  wire [31:0] _idu_io_next_bits_rj_data;	// core/src/core.scala:14:21
  wire [31:0] _idu_io_next_bits_rk_data;	// core/src/core.scala:14:21
  wire [2:0]  _idu_io_next_bits_FwEX_RD;	// core/src/core.scala:14:21
  wire [2:0]  _idu_io_next_bits_FwEX_RJ;	// core/src/core.scala:14:21
  wire [2:0]  _idu_io_next_bits_FwEX_RK;	// core/src/core.scala:14:21
  wire [31:0] _idu_io_next_bits_pc;	// core/src/core.scala:14:21
  wire [4:0]  _idu_io_RJ;	// core/src/core.scala:14:21
  wire [4:0]  _idu_io_RK;	// core/src/core.scala:14:21
  wire [4:0]  _idu_io_RD;	// core/src/core.scala:14:21
  wire [4:0]  _idu_io_RDst;	// core/src/core.scala:14:21
  wire [1:0]  _idu_io_RSel;	// core/src/core.scala:14:21
  wire        _ifu_idu_io_next_valid;	// core/src/core.scala:13:25
  wire [31:0] _ifu_idu_io_next_bits_pc;	// core/src/core.scala:13:25
  wire [31:0] _ifu_idu_io_next_bits_inst;	// core/src/core.scala:13:25
  wire        _ifu_io_next_valid;	// core/src/core.scala:12:21
  wire [31:0] _ifu_io_next_bits_pc;	// core/src/core.scala:12:21
  wire [31:0] _ifu_io_next_bits_inst;	// core/src/core.scala:12:21
  wire        flush =
    (_idu_exu_io_next_valid
       ? _idu_exu_io_next_bits_pc != _lsu_io_nextPC
       : _ifu_idu_io_next_valid
           ? _ifu_idu_io_next_bits_pc != _lsu_io_nextPC
           : io_ifu_out_ready & _ifu_io_next_bits_pc != _lsu_io_nextPC)
    & _exu_lsu_io_next_valid;	// core/src/core.scala:12:21, :13:25, :15:25, :17:25, :18:21, :27:39, :28:39, :29:39, :31:29, :32:17, :34:34, :35:17, :37:38, :38:17, :41:17, :44:25
  ifu ifu (	// core/src/core.scala:12:21
    .clock                    (clock),
    .reset                    (reset),
    .io_base_in_bits_data_out (io_ifu_in_bits_data_out),
    .io_base_out_ready        (io_ifu_out_ready),
    .io_base_out_valid        (io_ifu_out_valid),
    .io_base_out_bits_addr    (io_ifu_out_bits_addr),
    .io_next_valid            (_ifu_io_next_valid),
    .io_next_bits_pc          (_ifu_io_next_bits_pc),
    .io_next_bits_inst        (_ifu_io_next_bits_inst),
    .io_flush                 (flush),	// core/src/core.scala:44:25
    .io_stall                 (_fwctrl_io_stall),	// core/src/core.scala:46:24
    .io_nextPC                (_lsu_io_nextPC)	// core/src/core.scala:18:21
  );
  buffer ifu_idu (	// core/src/core.scala:13:25
    .clock             (clock),
    .reset             (reset),
    .io_prev_valid     (_ifu_io_next_valid),	// core/src/core.scala:12:21
    .io_prev_bits_pc   (_ifu_io_next_bits_pc),	// core/src/core.scala:12:21
    .io_prev_bits_inst (_ifu_io_next_bits_inst),	// core/src/core.scala:12:21
    .io_next_valid     (_ifu_idu_io_next_valid),
    .io_next_bits_pc   (_ifu_idu_io_next_bits_pc),
    .io_next_bits_inst (_ifu_idu_io_next_bits_inst),
    .io_stall          (_fwctrl_io_stall),	// core/src/core.scala:46:24
    .io_flush          (flush)	// core/src/core.scala:44:25
  );
  idu idu (	// core/src/core.scala:14:21
    .clock                 (clock),
    .reset                 (reset),
    .io_prev_valid         (_ifu_idu_io_next_valid),	// core/src/core.scala:13:25
    .io_prev_bits_pc       (_ifu_idu_io_next_bits_pc),	// core/src/core.scala:13:25
    .io_prev_bits_inst     (_ifu_idu_io_next_bits_inst),	// core/src/core.scala:13:25
    .io_next_valid         (_idu_io_next_valid),
    .io_next_bits_aluOp    (_idu_io_next_bits_aluOp),
    .io_next_bits_aluAsrc  (_idu_io_next_bits_aluAsrc),
    .io_next_bits_aluBsrc  (_idu_io_next_bits_aluBsrc),
    .io_next_bits_branchOp (_idu_io_next_bits_branchOp),
    .io_next_bits_memOp    (_idu_io_next_bits_memOp),
    .io_next_bits_wbSel    (_idu_io_next_bits_wbSel),
    .io_next_bits_wbDst    (_idu_io_next_bits_wbDst),
    .io_next_bits_Imm      (_idu_io_next_bits_Imm),
    .io_next_bits_rd       (_idu_io_next_bits_rd),
    .io_next_bits_rd_data  (_idu_io_next_bits_rd_data),
    .io_next_bits_rj_data  (_idu_io_next_bits_rj_data),
    .io_next_bits_rk_data  (_idu_io_next_bits_rk_data),
    .io_next_bits_FwEX_RD  (_idu_io_next_bits_FwEX_RD),
    .io_next_bits_FwEX_RJ  (_idu_io_next_bits_FwEX_RJ),
    .io_next_bits_FwEX_RK  (_idu_io_next_bits_FwEX_RK),
    .io_next_bits_pc       (_idu_io_next_bits_pc),
    .io_stall              (_fwctrl_io_stall),	// core/src/core.scala:46:24
    .io_flush              (flush),	// core/src/core.scala:44:25
    .io_wen                (_wbu_io_wen),	// core/src/core.scala:20:21
    .io_waddr              (_wbu_io_waddr),	// core/src/core.scala:20:21
    .io_wdata              (_wbu_io_wdata),	// core/src/core.scala:20:21
    .io_RJ                 (_idu_io_RJ),
    .io_RK                 (_idu_io_RK),
    .io_RD                 (_idu_io_RD),
    .io_RDst               (_idu_io_RDst),
    .io_RSel               (_idu_io_RSel),
    .io_FwID_RJ            (_fwctrl_io_FwID_RJ),	// core/src/core.scala:46:24
    .io_FwID_RK            (_fwctrl_io_FwID_RK),	// core/src/core.scala:46:24
    .io_FwID_RD            (_fwctrl_io_FwID_RD),	// core/src/core.scala:46:24
    .io_FwEX_RJ            (_fwctrl_io_FwEX_RJ),	// core/src/core.scala:46:24
    .io_FwEX_RK            (_fwctrl_io_FwEX_RK),	// core/src/core.scala:46:24
    .io_FwEX_RD            (_fwctrl_io_FwEX_RD),	// core/src/core.scala:46:24
    .io_ELALU              (_exu_lsu_io_next_bits_ALUOut),	// core/src/core.scala:17:25
    .io_LWALU              (_lsu_wbu_io_next_bits_ALUOut),	// core/src/core.scala:19:25
    .io_LWMEM              (_lsu_wbu_io_next_bits_MemOut),	// core/src/core.scala:19:25
    .io_MULP               (_exu_io_P)	// core/src/core.scala:16:21
  );
  buffer_1 idu_exu (	// core/src/core.scala:15:25
    .clock                 (clock),
    .reset                 (reset),
    .io_prev_valid         (_idu_io_next_valid),	// core/src/core.scala:14:21
    .io_prev_bits_aluOp    (_idu_io_next_bits_aluOp),	// core/src/core.scala:14:21
    .io_prev_bits_aluAsrc  (_idu_io_next_bits_aluAsrc),	// core/src/core.scala:14:21
    .io_prev_bits_aluBsrc  (_idu_io_next_bits_aluBsrc),	// core/src/core.scala:14:21
    .io_prev_bits_branchOp (_idu_io_next_bits_branchOp),	// core/src/core.scala:14:21
    .io_prev_bits_memOp    (_idu_io_next_bits_memOp),	// core/src/core.scala:14:21
    .io_prev_bits_wbSel    (_idu_io_next_bits_wbSel),	// core/src/core.scala:14:21
    .io_prev_bits_wbDst    (_idu_io_next_bits_wbDst),	// core/src/core.scala:14:21
    .io_prev_bits_Imm      (_idu_io_next_bits_Imm),	// core/src/core.scala:14:21
    .io_prev_bits_rd       (_idu_io_next_bits_rd),	// core/src/core.scala:14:21
    .io_prev_bits_rd_data  (_idu_io_next_bits_rd_data),	// core/src/core.scala:14:21
    .io_prev_bits_rj_data  (_idu_io_next_bits_rj_data),	// core/src/core.scala:14:21
    .io_prev_bits_rk_data  (_idu_io_next_bits_rk_data),	// core/src/core.scala:14:21
    .io_prev_bits_FwEX_RD  (_idu_io_next_bits_FwEX_RD),	// core/src/core.scala:14:21
    .io_prev_bits_FwEX_RJ  (_idu_io_next_bits_FwEX_RJ),	// core/src/core.scala:14:21
    .io_prev_bits_FwEX_RK  (_idu_io_next_bits_FwEX_RK),	// core/src/core.scala:14:21
    .io_prev_bits_pc       (_idu_io_next_bits_pc),	// core/src/core.scala:14:21
    .io_next_valid         (_idu_exu_io_next_valid),
    .io_next_bits_aluOp    (_idu_exu_io_next_bits_aluOp),
    .io_next_bits_aluAsrc  (_idu_exu_io_next_bits_aluAsrc),
    .io_next_bits_aluBsrc  (_idu_exu_io_next_bits_aluBsrc),
    .io_next_bits_branchOp (_idu_exu_io_next_bits_branchOp),
    .io_next_bits_memOp    (_idu_exu_io_next_bits_memOp),
    .io_next_bits_wbSel    (_idu_exu_io_next_bits_wbSel),
    .io_next_bits_wbDst    (_idu_exu_io_next_bits_wbDst),
    .io_next_bits_Imm      (_idu_exu_io_next_bits_Imm),
    .io_next_bits_rd       (_idu_exu_io_next_bits_rd),
    .io_next_bits_rd_data  (_idu_exu_io_next_bits_rd_data),
    .io_next_bits_rj_data  (_idu_exu_io_next_bits_rj_data),
    .io_next_bits_rk_data  (_idu_exu_io_next_bits_rk_data),
    .io_next_bits_FwEX_RD  (_idu_exu_io_next_bits_FwEX_RD),
    .io_next_bits_FwEX_RJ  (_idu_exu_io_next_bits_FwEX_RJ),
    .io_next_bits_FwEX_RK  (_idu_exu_io_next_bits_FwEX_RK),
    .io_next_bits_pc       (_idu_exu_io_next_bits_pc),
    .io_flush              (flush)	// core/src/core.scala:44:25
  );
  exu exu (	// core/src/core.scala:16:21
    .clock                 (clock),
    .io_prev_valid         (_idu_exu_io_next_valid),	// core/src/core.scala:15:25
    .io_prev_bits_aluOp    (_idu_exu_io_next_bits_aluOp),	// core/src/core.scala:15:25
    .io_prev_bits_aluAsrc  (_idu_exu_io_next_bits_aluAsrc),	// core/src/core.scala:15:25
    .io_prev_bits_aluBsrc  (_idu_exu_io_next_bits_aluBsrc),	// core/src/core.scala:15:25
    .io_prev_bits_branchOp (_idu_exu_io_next_bits_branchOp),	// core/src/core.scala:15:25
    .io_prev_bits_memOp    (_idu_exu_io_next_bits_memOp),	// core/src/core.scala:15:25
    .io_prev_bits_wbSel    (_idu_exu_io_next_bits_wbSel),	// core/src/core.scala:15:25
    .io_prev_bits_wbDst    (_idu_exu_io_next_bits_wbDst),	// core/src/core.scala:15:25
    .io_prev_bits_Imm      (_idu_exu_io_next_bits_Imm),	// core/src/core.scala:15:25
    .io_prev_bits_rd       (_idu_exu_io_next_bits_rd),	// core/src/core.scala:15:25
    .io_prev_bits_rd_data  (_idu_exu_io_next_bits_rd_data),	// core/src/core.scala:15:25
    .io_prev_bits_rj_data  (_idu_exu_io_next_bits_rj_data),	// core/src/core.scala:15:25
    .io_prev_bits_rk_data  (_idu_exu_io_next_bits_rk_data),	// core/src/core.scala:15:25
    .io_prev_bits_FwEX_RD  (_idu_exu_io_next_bits_FwEX_RD),	// core/src/core.scala:15:25
    .io_prev_bits_FwEX_RJ  (_idu_exu_io_next_bits_FwEX_RJ),	// core/src/core.scala:15:25
    .io_prev_bits_FwEX_RK  (_idu_exu_io_next_bits_FwEX_RK),	// core/src/core.scala:15:25
    .io_prev_bits_pc       (_idu_exu_io_next_bits_pc),	// core/src/core.scala:15:25
    .io_next_valid         (_exu_io_next_valid),
    .io_next_bits_ALUOut   (_exu_io_next_bits_ALUOut),
    .io_next_bits_SLess    (_exu_io_next_bits_SLess),
    .io_next_bits_ULess    (_exu_io_next_bits_ULess),
    .io_next_bits_Zero     (_exu_io_next_bits_Zero),
    .io_next_bits_branchOp (_exu_io_next_bits_branchOp),
    .io_next_bits_memOp    (_exu_io_next_bits_memOp),
    .io_next_bits_wbSel    (_exu_io_next_bits_wbSel),
    .io_next_bits_wbDst    (_exu_io_next_bits_wbDst),
    .io_next_bits_Imm      (_exu_io_next_bits_Imm),
    .io_next_bits_rd       (_exu_io_next_bits_rd),
    .io_next_bits_rd_data  (_exu_io_next_bits_rd_data),
    .io_next_bits_rj_data  (_exu_io_next_bits_rj_data),
    .io_next_bits_pc       (_exu_io_next_bits_pc),
    .io_flush              (flush),	// core/src/core.scala:44:25
    .io_P                  (_exu_io_P),
    .io_ELALU              (_exu_lsu_io_next_bits_ALUOut),	// core/src/core.scala:17:25
    .io_LWALU              (_lsu_wbu_io_next_bits_ALUOut),	// core/src/core.scala:19:25
    .io_LWMEM              (_lsu_wbu_io_next_bits_MemOut)	// core/src/core.scala:19:25
  );
  buffer_2 exu_lsu (	// core/src/core.scala:17:25
    .clock                 (clock),
    .reset                 (reset),
    .io_prev_valid         (_exu_io_next_valid),	// core/src/core.scala:16:21
    .io_prev_bits_ALUOut   (_exu_io_next_bits_ALUOut),	// core/src/core.scala:16:21
    .io_prev_bits_SLess    (_exu_io_next_bits_SLess),	// core/src/core.scala:16:21
    .io_prev_bits_ULess    (_exu_io_next_bits_ULess),	// core/src/core.scala:16:21
    .io_prev_bits_Zero     (_exu_io_next_bits_Zero),	// core/src/core.scala:16:21
    .io_prev_bits_branchOp (_exu_io_next_bits_branchOp),	// core/src/core.scala:16:21
    .io_prev_bits_memOp    (_exu_io_next_bits_memOp),	// core/src/core.scala:16:21
    .io_prev_bits_wbSel    (_exu_io_next_bits_wbSel),	// core/src/core.scala:16:21
    .io_prev_bits_wbDst    (_exu_io_next_bits_wbDst),	// core/src/core.scala:16:21
    .io_prev_bits_Imm      (_exu_io_next_bits_Imm),	// core/src/core.scala:16:21
    .io_prev_bits_rd       (_exu_io_next_bits_rd),	// core/src/core.scala:16:21
    .io_prev_bits_rd_data  (_exu_io_next_bits_rd_data),	// core/src/core.scala:16:21
    .io_prev_bits_rj_data  (_exu_io_next_bits_rj_data),	// core/src/core.scala:16:21
    .io_prev_bits_pc       (_exu_io_next_bits_pc),	// core/src/core.scala:16:21
    .io_next_valid         (_exu_lsu_io_next_valid),
    .io_next_bits_ALUOut   (_exu_lsu_io_next_bits_ALUOut),
    .io_next_bits_SLess    (_exu_lsu_io_next_bits_SLess),
    .io_next_bits_ULess    (_exu_lsu_io_next_bits_ULess),
    .io_next_bits_Zero     (_exu_lsu_io_next_bits_Zero),
    .io_next_bits_branchOp (_exu_lsu_io_next_bits_branchOp),
    .io_next_bits_memOp    (_exu_lsu_io_next_bits_memOp),
    .io_next_bits_wbSel    (_exu_lsu_io_next_bits_wbSel),
    .io_next_bits_wbDst    (_exu_lsu_io_next_bits_wbDst),
    .io_next_bits_Imm      (_exu_lsu_io_next_bits_Imm),
    .io_next_bits_rd       (_exu_lsu_io_next_bits_rd),
    .io_next_bits_rd_data  (_exu_lsu_io_next_bits_rd_data),
    .io_next_bits_rj_data  (_exu_lsu_io_next_bits_rj_data),
    .io_next_bits_pc       (_exu_lsu_io_next_bits_pc)
  );
  lsu lsu (	// core/src/core.scala:18:21
    .io_ext_in_bits_data_out  (io_lsu_in_bits_data_out),
    .io_ext_out_valid         (io_lsu_out_valid),
    .io_ext_out_bits_data_wen (io_lsu_out_bits_data_wen),
    .io_ext_out_bits_data_in  (io_lsu_out_bits_data_in),
    .io_ext_out_bits_addr     (io_lsu_out_bits_addr),
    .io_ext_out_bits_be_n     (io_lsu_out_bits_be_n),
    .io_ext_out_bits_ce_n     (io_lsu_out_bits_ce_n),
    .io_ext_out_bits_oe_n     (io_lsu_out_bits_oe_n),
    .io_ext_out_bits_we_n     (io_lsu_out_bits_we_n),
    .io_prev_valid            (_exu_lsu_io_next_valid),	// core/src/core.scala:17:25
    .io_prev_bits_ALUOut      (_exu_lsu_io_next_bits_ALUOut),	// core/src/core.scala:17:25
    .io_prev_bits_SLess       (_exu_lsu_io_next_bits_SLess),	// core/src/core.scala:17:25
    .io_prev_bits_ULess       (_exu_lsu_io_next_bits_ULess),	// core/src/core.scala:17:25
    .io_prev_bits_Zero        (_exu_lsu_io_next_bits_Zero),	// core/src/core.scala:17:25
    .io_prev_bits_branchOp    (_exu_lsu_io_next_bits_branchOp),	// core/src/core.scala:17:25
    .io_prev_bits_memOp       (_exu_lsu_io_next_bits_memOp),	// core/src/core.scala:17:25
    .io_prev_bits_wbSel       (_exu_lsu_io_next_bits_wbSel),	// core/src/core.scala:17:25
    .io_prev_bits_wbDst       (_exu_lsu_io_next_bits_wbDst),	// core/src/core.scala:17:25
    .io_prev_bits_Imm         (_exu_lsu_io_next_bits_Imm),	// core/src/core.scala:17:25
    .io_prev_bits_rd          (_exu_lsu_io_next_bits_rd),	// core/src/core.scala:17:25
    .io_prev_bits_rd_data     (_exu_lsu_io_next_bits_rd_data),	// core/src/core.scala:17:25
    .io_prev_bits_rj_data     (_exu_lsu_io_next_bits_rj_data),	// core/src/core.scala:17:25
    .io_prev_bits_pc          (_exu_lsu_io_next_bits_pc),	// core/src/core.scala:17:25
    .io_next_valid            (_lsu_io_next_valid),
    .io_next_bits_MemOut      (_lsu_io_next_bits_MemOut),
    .io_next_bits_ALUOut      (_lsu_io_next_bits_ALUOut),
    .io_next_bits_wbSel       (_lsu_io_next_bits_wbSel),
    .io_next_bits_wbDst       (_lsu_io_next_bits_wbDst),
    .io_next_bits_rd          (_lsu_io_next_bits_rd),
    .io_nextPC                (_lsu_io_nextPC)
  );
  buffer_3 lsu_wbu (	// core/src/core.scala:19:25
    .clock               (clock),
    .reset               (reset),
    .io_prev_valid       (_lsu_io_next_valid),	// core/src/core.scala:18:21
    .io_prev_bits_MemOut (_lsu_io_next_bits_MemOut),	// core/src/core.scala:18:21
    .io_prev_bits_ALUOut (_lsu_io_next_bits_ALUOut),	// core/src/core.scala:18:21
    .io_prev_bits_wbSel  (_lsu_io_next_bits_wbSel),	// core/src/core.scala:18:21
    .io_prev_bits_wbDst  (_lsu_io_next_bits_wbDst),	// core/src/core.scala:18:21
    .io_prev_bits_rd     (_lsu_io_next_bits_rd),	// core/src/core.scala:18:21
    .io_next_valid       (_lsu_wbu_io_next_valid),
    .io_next_bits_MemOut (_lsu_wbu_io_next_bits_MemOut),
    .io_next_bits_ALUOut (_lsu_wbu_io_next_bits_ALUOut),
    .io_next_bits_wbSel  (_lsu_wbu_io_next_bits_wbSel),
    .io_next_bits_wbDst  (_lsu_wbu_io_next_bits_wbDst),
    .io_next_bits_rd     (_lsu_wbu_io_next_bits_rd)
  );
  wbu wbu (	// core/src/core.scala:20:21
    .io_prev_valid       (_lsu_wbu_io_next_valid),	// core/src/core.scala:19:25
    .io_prev_bits_MemOut (_lsu_wbu_io_next_bits_MemOut),	// core/src/core.scala:19:25
    .io_prev_bits_ALUOut (_lsu_wbu_io_next_bits_ALUOut),	// core/src/core.scala:19:25
    .io_prev_bits_wbSel  (_lsu_wbu_io_next_bits_wbSel),	// core/src/core.scala:19:25
    .io_prev_bits_wbDst  (_lsu_wbu_io_next_bits_wbDst),	// core/src/core.scala:19:25
    .io_prev_bits_rd     (_lsu_wbu_io_next_bits_rd),	// core/src/core.scala:19:25
    .io_wen              (_wbu_io_wen),
    .io_waddr            (_wbu_io_waddr),
    .io_wdata            (_wbu_io_wdata),
    .io_P                (_exu_io_P)	// core/src/core.scala:16:21
  );
  forwarding fwctrl (	// core/src/core.scala:46:24
    .clock      (clock),
    .io_RJ      (_idu_io_RJ),	// core/src/core.scala:14:21
    .io_RK      (_idu_io_RK),	// core/src/core.scala:14:21
    .io_RD      (_idu_io_RD),	// core/src/core.scala:14:21
    .io_RDst    (_idu_io_RDst),	// core/src/core.scala:14:21
    .io_RSel    (_idu_io_RSel),	// core/src/core.scala:14:21
    .io_flush   (flush),	// core/src/core.scala:44:25
    .io_stall   (_fwctrl_io_stall),
    .io_FwID_RJ (_fwctrl_io_FwID_RJ),
    .io_FwID_RK (_fwctrl_io_FwID_RK),
    .io_FwID_RD (_fwctrl_io_FwID_RD),
    .io_FwEX_RJ (_fwctrl_io_FwEX_RJ),
    .io_FwEX_RK (_fwctrl_io_FwEX_RK),
    .io_FwEX_RD (_fwctrl_io_FwEX_RD)
  );
endmodule

module sram_ctrl(	// core/src/sram_ctrl.scala:5:7
  input         io_in_valid,	// core/src/sram_ctrl.scala:6:16
                io_in_bits_data_wen,	// core/src/sram_ctrl.scala:6:16
  input  [31:0] io_in_bits_data_in,	// core/src/sram_ctrl.scala:6:16
                io_in_bits_addr,	// core/src/sram_ctrl.scala:6:16
  input  [3:0]  io_in_bits_be_n,	// core/src/sram_ctrl.scala:6:16
  input         io_in_bits_ce_n,	// core/src/sram_ctrl.scala:6:16
                io_in_bits_oe_n,	// core/src/sram_ctrl.scala:6:16
                io_in_bits_we_n,	// core/src/sram_ctrl.scala:6:16
  output [31:0] io_out_bits_data_out,	// core/src/sram_ctrl.scala:6:16
  output        io_sram_data_wen,	// core/src/sram_ctrl.scala:6:16
  output [31:0] io_sram_data_in,	// core/src/sram_ctrl.scala:6:16
  input  [31:0] io_sram_data_out,	// core/src/sram_ctrl.scala:6:16
  output [19:0] io_sram_addr,	// core/src/sram_ctrl.scala:6:16
  output [3:0]  io_sram_be_n,	// core/src/sram_ctrl.scala:6:16
  output        io_sram_ce_n,	// core/src/sram_ctrl.scala:6:16
                io_sram_oe_n,	// core/src/sram_ctrl.scala:6:16
                io_sram_we_n	// core/src/sram_ctrl.scala:6:16
);

  assign io_out_bits_data_out = io_in_valid ? io_sram_data_out : 32'h0;	// core/src/sram_ctrl.scala:5:7, :11:23, :19:30, :23:25, :29:30
  assign io_sram_data_wen = io_in_valid & io_in_bits_data_wen;	// core/src/sram_ctrl.scala:5:7, :11:23, :12:26, :22:26
  assign io_sram_data_in = io_in_valid ? io_in_bits_data_in : 32'h0;	// core/src/sram_ctrl.scala:5:7, :11:23, :13:25, :23:25
  assign io_sram_addr = io_in_valid ? io_in_bits_addr[21:2] : 20'h0;	// core/src/sram_ctrl.scala:5:7, :11:23, :14:{22,40}, :24:22
  assign io_sram_be_n = io_in_valid ? io_in_bits_be_n : 4'h0;	// core/src/sram_ctrl.scala:5:7, :11:23, :15:22, :25:22
  assign io_sram_ce_n = ~io_in_valid | io_in_bits_ce_n;	// core/src/sram_ctrl.scala:5:7, :11:23, :16:22, :26:22
  assign io_sram_oe_n = ~io_in_valid | io_in_bits_oe_n;	// core/src/sram_ctrl.scala:5:7, :11:23, :16:22, :17:22, :26:22, :27:22
  assign io_sram_we_n = ~io_in_valid | io_in_bits_we_n;	// core/src/sram_ctrl.scala:5:7, :11:23, :16:22, :18:22, :26:22, :28:22
endmodule

// external module async_transmitter

// external module async_receiver

// VCS coverage exclude_file
module ram_16x8(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [3:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [7:0] R0_data,
  input  [3:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [7:0] W0_data
);

  reg [7:0] Memory[0:15];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [4:0] i = 5'h0; i < 5'h10; i += 5'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[3:0]] = _RANDOM_MEM[7:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 8'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue16_UInt8(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// src/main/scala/chisel3/util/Decoupled.scala:243:7
               reset,	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0] io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0] io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  [3:0] enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [3:0] deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire       do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    if (reset) begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      enq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][7:4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][8];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_16x8 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module uart_ctrl(	// core/src/uart_ctrl.scala:31:7
  input         clock,	// core/src/uart_ctrl.scala:31:7
                reset,	// core/src/uart_ctrl.scala:31:7
                io_in_valid,	// core/src/uart_ctrl.scala:32:16
  input  [31:0] io_in_bits_data_in,	// core/src/uart_ctrl.scala:32:16
                io_in_bits_addr,	// core/src/uart_ctrl.scala:32:16
  input         io_in_bits_ce_n,	// core/src/uart_ctrl.scala:32:16
                io_in_bits_oe_n,	// core/src/uart_ctrl.scala:32:16
                io_in_bits_we_n,	// core/src/uart_ctrl.scala:32:16
  output [31:0] io_out_bits_data_out,	// core/src/uart_ctrl.scala:32:16
  input         io_uart_rx,	// core/src/uart_ctrl.scala:32:16
  output        io_uart_tx	// core/src/uart_ctrl.scala:32:16
);

  wire       _recv_fifo_io_enq_ready;	// core/src/uart_ctrl.scala:41:27
  wire       _recv_fifo_io_deq_valid;	// core/src/uart_ctrl.scala:41:27
  wire [7:0] _recv_fifo_io_deq_bits;	// core/src/uart_ctrl.scala:41:27
  wire       _tran_fifo_io_enq_ready;	// core/src/uart_ctrl.scala:40:27
  wire       _tran_fifo_io_deq_valid;	// core/src/uart_ctrl.scala:40:27
  wire [7:0] _tran_fifo_io_deq_bits;	// core/src/uart_ctrl.scala:40:27
  wire       _recv_RxD_data_ready;	// core/src/uart_ctrl.scala:38:22
  wire [7:0] _recv_RxD_data;	// core/src/uart_ctrl.scala:38:22
  wire       _tran_TxD_busy;	// core/src/uart_ctrl.scala:37:22
  wire       _tran_io_TxD_start_T_1 = ~_tran_TxD_busy & _tran_fifo_io_deq_valid;	// core/src/uart_ctrl.scala:37:22, :40:27, :44:{26,44}
  wire       _GEN = io_in_valid & ~(io_in_bits_addr[2]);	// core/src/uart_ctrl.scala:62:{22,39,43}
  async_transmitter #(
    .Baud(9600),
    .ClkFrequency(60000000)
  ) tran_0 (	// core/src/uart_ctrl.scala:37:22
    .clk       (clock),
    .TxD_start (_tran_io_TxD_start_T_1),	// core/src/uart_ctrl.scala:44:44
    .TxD_data  (_tran_fifo_io_deq_bits),	// core/src/uart_ctrl.scala:40:27
    .TxD       (io_uart_tx),
    .TxD_busy  (_tran_TxD_busy)
  );
  async_receiver #(
    .Baud(9600),
    .ClkFrequency(60000000)
  ) recv (	// core/src/uart_ctrl.scala:38:22
    .clk            (clock),
    .RxD            (io_uart_rx),
    .RxD_data_ready (_recv_RxD_data_ready),
    .RxD_clear      (_recv_RxD_data_ready & _recv_fifo_io_enq_ready),	// core/src/uart_ctrl.scala:38:22, :41:27, :51:49
    .RxD_data       (_recv_RxD_data)
  );
  Queue16_UInt8 tran_fifo (	// core/src/uart_ctrl.scala:40:27
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_tran_fifo_io_enq_ready),
    .io_enq_valid
      (_GEN & ~io_in_bits_ce_n & ~io_in_bits_we_n & io_in_bits_oe_n
       & _tran_fifo_io_enq_ready),	// core/src/uart_ctrl.scala:40:27, :57:{24,43}, :62:{22,52}, :63:32, :67:57
    .io_enq_bits  (io_in_bits_data_in[7:0]),	// core/src/uart_ctrl.scala:60:48
    .io_deq_ready (_tran_io_TxD_start_T_1),	// core/src/uart_ctrl.scala:44:44
    .io_deq_valid (_tran_fifo_io_deq_valid),
    .io_deq_bits  (_tran_fifo_io_deq_bits)
  );
  Queue16_UInt8 recv_fifo (	// core/src/uart_ctrl.scala:41:27
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_recv_fifo_io_enq_ready),
    .io_enq_valid (_recv_RxD_data_ready),	// core/src/uart_ctrl.scala:38:22
    .io_enq_bits  (_recv_RxD_data),	// core/src/uart_ctrl.scala:38:22
    .io_deq_ready
      (_GEN & ~io_in_bits_ce_n & io_in_bits_we_n & ~io_in_bits_oe_n
       & _recv_fifo_io_deq_valid),	// core/src/uart_ctrl.scala:41:27, :57:24, :58:60, :62:{22,52}, :64:32, :67:57
    .io_deq_valid (_recv_fifo_io_deq_valid),
    .io_deq_bits  (_recv_fifo_io_deq_bits)
  );
  assign io_out_bits_data_out =
    _GEN
      ? {24'h0, _recv_fifo_io_deq_bits}
      : {30'h0, _recv_fifo_io_deq_valid, _tran_fifo_io_enq_ready};	// core/src/uart_ctrl.scala:31:7, :40:27, :41:27, :62:{22,52}, :65:{30,36,41}, :67:57, :70:{36,41}
endmodule

module subtop(	// core/src/subtop.scala:5:7
  input         clock,	// core/src/subtop.scala:5:7
                reset,	// core/src/subtop.scala:5:7
  output        io_base_data_wen,	// core/src/subtop.scala:6:16
  output [31:0] io_base_data_in,	// core/src/subtop.scala:6:16
  input  [31:0] io_base_data_out,	// core/src/subtop.scala:6:16
  output [19:0] io_base_addr,	// core/src/subtop.scala:6:16
  output [3:0]  io_base_be_n,	// core/src/subtop.scala:6:16
  output        io_base_ce_n,	// core/src/subtop.scala:6:16
                io_base_oe_n,	// core/src/subtop.scala:6:16
                io_base_we_n,	// core/src/subtop.scala:6:16
                io_ext_data_wen,	// core/src/subtop.scala:6:16
  output [31:0] io_ext_data_in,	// core/src/subtop.scala:6:16
  input  [31:0] io_ext_data_out,	// core/src/subtop.scala:6:16
  output [19:0] io_ext_addr,	// core/src/subtop.scala:6:16
  output [3:0]  io_ext_be_n,	// core/src/subtop.scala:6:16
  output        io_ext_ce_n,	// core/src/subtop.scala:6:16
                io_ext_oe_n,	// core/src/subtop.scala:6:16
                io_ext_we_n,	// core/src/subtop.scala:6:16
  input         io_uart_rx,	// core/src/subtop.scala:6:16
  output        io_uart_tx	// core/src/subtop.scala:6:16
);

  wire [31:0] _uart_ctrl_io_out_bits_data_out;	// core/src/subtop.scala:19:27
  wire [31:0] _ext_ram_ctrl_io_out_bits_data_out;	// core/src/subtop.scala:18:30
  wire [31:0] _base_ram_ctrl_io_out_bits_data_out;	// core/src/subtop.scala:17:31
  wire        _core_io_ifu_out_valid;	// core/src/subtop.scala:11:22
  wire [31:0] _core_io_ifu_out_bits_addr;	// core/src/subtop.scala:11:22
  wire        _core_io_lsu_out_valid;	// core/src/subtop.scala:11:22
  wire        _core_io_lsu_out_bits_data_wen;	// core/src/subtop.scala:11:22
  wire [31:0] _core_io_lsu_out_bits_data_in;	// core/src/subtop.scala:11:22
  wire [31:0] _core_io_lsu_out_bits_addr;	// core/src/subtop.scala:11:22
  wire [3:0]  _core_io_lsu_out_bits_be_n;	// core/src/subtop.scala:11:22
  wire        _core_io_lsu_out_bits_ce_n;	// core/src/subtop.scala:11:22
  wire        _core_io_lsu_out_bits_oe_n;	// core/src/subtop.scala:11:22
  wire        _core_io_lsu_out_bits_we_n;	// core/src/subtop.scala:11:22
  wire        _GEN =
    _core_io_lsu_out_valid & _core_io_lsu_out_bits_addr[31]
    & _core_io_lsu_out_bits_addr < 32'h80400000;	// core/src/bundles.scala:8:{14,31}, core/src/subtop.scala:11:22, :22:32
  wire        _GEN_0 =
    _core_io_lsu_out_valid & _core_io_lsu_out_bits_addr > 32'h803FFFFF
    & _core_io_lsu_out_bits_addr < 32'h80800000;	// core/src/bundles.scala:8:{14,31}, core/src/subtop.scala:11:22, :43:32
  core core (	// core/src/subtop.scala:11:22
    .clock                    (clock),
    .reset                    (reset),
    .io_ifu_in_bits_data_out  (_base_ram_ctrl_io_out_bits_data_out),	// core/src/subtop.scala:17:31
    .io_ifu_out_ready         (~_GEN),	// core/src/subtop.scala:22:32, :23:56, :26:36, :29:30, :30:31, :39:31
    .io_ifu_out_valid         (_core_io_ifu_out_valid),
    .io_ifu_out_bits_addr     (_core_io_ifu_out_bits_addr),
    .io_lsu_in_bits_data_out
      (_GEN
         ? _base_ram_ctrl_io_out_bits_data_out
         : _GEN_0 ? _ext_ram_ctrl_io_out_bits_data_out : _uart_ctrl_io_out_bits_data_out),	// core/src/subtop.scala:17:31, :18:30, :19:27, :22:32, :43:32, :70:56, :71:29, :76:55, :77:29, :82:56
    .io_lsu_out_valid         (_core_io_lsu_out_valid),
    .io_lsu_out_bits_data_wen (_core_io_lsu_out_bits_data_wen),
    .io_lsu_out_bits_data_in  (_core_io_lsu_out_bits_data_in),
    .io_lsu_out_bits_addr     (_core_io_lsu_out_bits_addr),
    .io_lsu_out_bits_be_n     (_core_io_lsu_out_bits_be_n),
    .io_lsu_out_bits_ce_n     (_core_io_lsu_out_bits_ce_n),
    .io_lsu_out_bits_oe_n     (_core_io_lsu_out_bits_oe_n),
    .io_lsu_out_bits_we_n     (_core_io_lsu_out_bits_we_n)
  );
  sram_ctrl base_ram_ctrl (	// core/src/subtop.scala:17:31
    .io_in_valid          (_GEN ? _core_io_lsu_out_valid : _core_io_ifu_out_valid),	// core/src/subtop.scala:11:22, :22:32, :23:56, :25:35, :34:35
    .io_in_bits_data_wen  (_GEN & _core_io_lsu_out_bits_data_wen),	// core/src/subtop.scala:11:22, :22:32, :23:56, :24:34, :33:34
    .io_in_bits_data_in   (_GEN ? _core_io_lsu_out_bits_data_in : 32'h0),	// core/src/subtop.scala:11:22, :22:32, :23:56, :24:34, :33:34
    .io_in_bits_addr
      (_GEN ? _core_io_lsu_out_bits_addr : _core_io_ifu_out_bits_addr),	// core/src/subtop.scala:11:22, :22:32, :23:56, :24:34, :33:34
    .io_in_bits_be_n      (_GEN ? _core_io_lsu_out_bits_be_n : 4'h0),	// core/src/subtop.scala:11:22, :22:32, :23:56, :24:34, :33:34
    .io_in_bits_ce_n      (_GEN & _core_io_lsu_out_bits_ce_n),	// core/src/subtop.scala:11:22, :22:32, :23:56, :24:34, :33:34
    .io_in_bits_oe_n      (_GEN & _core_io_lsu_out_bits_oe_n),	// core/src/subtop.scala:11:22, :22:32, :23:56, :24:34, :33:34
    .io_in_bits_we_n      (~_GEN | _core_io_lsu_out_bits_we_n),	// core/src/subtop.scala:11:22, :22:32, :23:56, :24:34, :33:34
    .io_out_bits_data_out (_base_ram_ctrl_io_out_bits_data_out),
    .io_sram_data_wen     (io_base_data_wen),
    .io_sram_data_in      (io_base_data_in),
    .io_sram_data_out     (io_base_data_out),
    .io_sram_addr         (io_base_addr),
    .io_sram_be_n         (io_base_be_n),
    .io_sram_ce_n         (io_base_ce_n),
    .io_sram_oe_n         (io_base_oe_n),
    .io_sram_we_n         (io_base_we_n)
  );
  sram_ctrl ext_ram_ctrl (	// core/src/subtop.scala:18:30
    .io_in_valid          (_GEN_0 & _core_io_lsu_out_valid),	// core/src/subtop.scala:11:22, :43:32, :44:55, :46:34, :51:34
    .io_in_bits_data_wen  (_core_io_lsu_out_bits_data_wen),	// core/src/subtop.scala:11:22
    .io_in_bits_data_in   (_core_io_lsu_out_bits_data_in),	// core/src/subtop.scala:11:22
    .io_in_bits_addr      (_core_io_lsu_out_bits_addr),	// core/src/subtop.scala:11:22
    .io_in_bits_be_n      (_core_io_lsu_out_bits_be_n),	// core/src/subtop.scala:11:22
    .io_in_bits_ce_n      (_core_io_lsu_out_bits_ce_n),	// core/src/subtop.scala:11:22
    .io_in_bits_oe_n      (_core_io_lsu_out_bits_oe_n),	// core/src/subtop.scala:11:22
    .io_in_bits_we_n      (_core_io_lsu_out_bits_we_n),	// core/src/subtop.scala:11:22
    .io_out_bits_data_out (_ext_ram_ctrl_io_out_bits_data_out),
    .io_sram_data_wen     (io_ext_data_wen),
    .io_sram_data_in      (io_ext_data_in),
    .io_sram_data_out     (io_ext_data_out),
    .io_sram_addr         (io_ext_addr),
    .io_sram_be_n         (io_ext_be_n),
    .io_sram_ce_n         (io_ext_ce_n),
    .io_sram_oe_n         (io_ext_oe_n),
    .io_sram_we_n         (io_ext_we_n)
  );
  uart_ctrl uart_ctrl (	// core/src/subtop.scala:19:27
    .clock                (clock),
    .reset                (reset),
    .io_in_valid
      (_core_io_lsu_out_valid & _core_io_lsu_out_bits_addr > 32'hBFD003F7
       & _core_io_lsu_out_bits_addr < 32'hBFD003FD),	// core/src/bundles.scala:8:{14,31}, core/src/subtop.scala:11:22, :57:56, :59:31, :64:31
    .io_in_bits_data_in   (_core_io_lsu_out_bits_data_in),	// core/src/subtop.scala:11:22
    .io_in_bits_addr      (_core_io_lsu_out_bits_addr),	// core/src/subtop.scala:11:22
    .io_in_bits_ce_n      (_core_io_lsu_out_bits_ce_n),	// core/src/subtop.scala:11:22
    .io_in_bits_oe_n      (_core_io_lsu_out_bits_oe_n),	// core/src/subtop.scala:11:22
    .io_in_bits_we_n      (_core_io_lsu_out_bits_we_n),	// core/src/subtop.scala:11:22
    .io_out_bits_data_out (_uart_ctrl_io_out_bits_data_out),
    .io_uart_rx           (io_uart_rx),
    .io_uart_tx           (io_uart_tx)
  );
endmodule

