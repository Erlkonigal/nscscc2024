// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// external module dist_mem

module btb(	// core/src/ifu.scala:107:7
  input         clock,	// core/src/ifu.scala:107:7
                reset,	// core/src/ifu.scala:107:7
  input  [31:0] io_pc,	// core/src/ifu.scala:108:16
  output        io_branch,	// core/src/ifu.scala:108:16
  output [31:0] io_btarget,	// core/src/ifu.scala:108:16
  input         io_update,	// core/src/ifu.scala:108:16
                io_u_branch,	// core/src/ifu.scala:108:16
                io_u_type,	// core/src/ifu.scala:108:16
  input  [31:0] io_u_pc,	// core/src/ifu.scala:108:16
                io_u_target	// core/src/ifu.scala:108:16
);

  wire [47:0]      _btb_dpo;	// core/src/ifu.scala:119:21
  reg  [1:0]       pht_0;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_1;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_2;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_3;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_4;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_5;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_6;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_7;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_8;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_9;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_10;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_11;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_12;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_13;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_14;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_15;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_16;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_17;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_18;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_19;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_20;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_21;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_22;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_23;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_24;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_25;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_26;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_27;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_28;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_29;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_30;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_31;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_32;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_33;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_34;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_35;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_36;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_37;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_38;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_39;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_40;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_41;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_42;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_43;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_44;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_45;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_46;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_47;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_48;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_49;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_50;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_51;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_52;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_53;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_54;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_55;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_56;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_57;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_58;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_59;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_60;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_61;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_62;	// core/src/ifu.scala:120:22
  reg  [1:0]       pht_63;	// core/src/ifu.scala:120:22
  wire [63:0][1:0] _GEN =
    {{pht_63},
     {pht_62},
     {pht_61},
     {pht_60},
     {pht_59},
     {pht_58},
     {pht_57},
     {pht_56},
     {pht_55},
     {pht_54},
     {pht_53},
     {pht_52},
     {pht_51},
     {pht_50},
     {pht_49},
     {pht_48},
     {pht_47},
     {pht_46},
     {pht_45},
     {pht_44},
     {pht_43},
     {pht_42},
     {pht_41},
     {pht_40},
     {pht_39},
     {pht_38},
     {pht_37},
     {pht_36},
     {pht_35},
     {pht_34},
     {pht_33},
     {pht_32},
     {pht_31},
     {pht_30},
     {pht_29},
     {pht_28},
     {pht_27},
     {pht_26},
     {pht_25},
     {pht_24},
     {pht_23},
     {pht_22},
     {pht_21},
     {pht_20},
     {pht_19},
     {pht_18},
     {pht_17},
     {pht_16},
     {pht_15},
     {pht_14},
     {pht_13},
     {pht_12},
     {pht_11},
     {pht_10},
     {pht_9},
     {pht_8},
     {pht_7},
     {pht_6},
     {pht_5},
     {pht_4},
     {pht_3},
     {pht_2},
     {pht_1},
     {pht_0}};	// core/src/ifu.scala:120:22, :132:36
  always @(posedge clock) begin	// core/src/ifu.scala:107:7
    if (reset) begin	// core/src/ifu.scala:107:7
      pht_0 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_1 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_2 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_3 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_4 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_5 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_6 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_7 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_8 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_9 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_10 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_11 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_12 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_13 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_14 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_15 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_16 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_17 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_18 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_19 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_20 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_21 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_22 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_23 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_24 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_25 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_26 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_27 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_28 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_29 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_30 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_31 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_32 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_33 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_34 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_35 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_36 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_37 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_38 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_39 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_40 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_41 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_42 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_43 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_44 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_45 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_46 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_47 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_48 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_49 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_50 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_51 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_52 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_53 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_54 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_55 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_56 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_57 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_58 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_59 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_60 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_61 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_62 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
      pht_63 <= 2'h0;	// core/src/ifu.scala:107:7, :120:22
    end
    else begin	// core/src/ifu.scala:107:7
      automatic logic       _GEN_0 = io_update & io_u_type;	// core/src/ifu.scala:163:20
      automatic logic [1:0] _GEN_1;	// core/src/ifu.scala:165:78
      automatic logic       _pht_T_3;	// core/src/ifu.scala:165:78
      automatic logic       _GEN_2;	// core/src/ifu.scala:165:78
      automatic logic [1:0] _GEN_3;	// core/src/ifu.scala:166:79
      _GEN_1 = _GEN[io_u_pc[7:2]];	// core/src/ifu.scala:132:36, :146:24, :165:78
      _pht_T_3 = _GEN_1 == 2'h1;	// core/src/ifu.scala:107:7, :165:78
      _GEN_2 = (&_GEN_1) | _GEN_1 == 2'h2;	// core/src/ifu.scala:107:7, :165:78
      _GEN_3 = {1'h0, _GEN_1 == 2'h2};	// core/src/ifu.scala:107:7, :135:19, :165:78, :166:79
      if (_GEN_0 & io_u_pc[7:2] == 6'h0) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_0 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_0 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_0 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_0 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_0 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h1) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_1 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_1 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_1 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_1 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_1 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h2) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_2 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_2 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_2 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_2 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_2 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h3) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_3 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_3 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_3 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_3 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_3 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h4) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_4 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_4 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_4 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_4 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_4 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h5) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_5 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_5 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_5 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_5 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_5 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h6) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_6 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_6 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_6 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_6 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_6 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h7) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_7 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_7 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_7 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_7 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_7 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h8) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_8 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_8 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_8 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_8 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_8 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h9) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_9 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_9 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_9 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_9 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_9 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'hA) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_10 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_10 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_10 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_10 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_10 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'hB) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_11 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_11 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_11 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_11 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_11 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'hC) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_12 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_12 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_12 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_12 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_12 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'hD) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_13 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_13 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_13 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_13 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_13 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'hE) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_14 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_14 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_14 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_14 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_14 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'hF) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_15 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_15 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_15 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_15 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_15 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h10) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_16 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_16 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_16 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_16 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_16 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h11) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_17 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_17 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_17 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_17 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_17 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h12) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_18 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_18 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_18 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_18 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_18 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h13) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_19 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_19 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_19 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_19 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_19 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h14) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_20 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_20 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_20 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_20 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_20 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h15) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_21 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_21 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_21 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_21 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_21 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h16) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_22 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_22 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_22 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_22 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_22 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h17) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_23 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_23 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_23 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_23 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_23 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h18) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_24 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_24 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_24 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_24 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_24 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h19) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_25 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_25 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_25 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_25 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_25 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h1A) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_26 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_26 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_26 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_26 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_26 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h1B) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_27 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_27 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_27 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_27 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_27 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h1C) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_28 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_28 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_28 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_28 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_28 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h1D) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_29 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_29 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_29 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_29 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_29 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h1E) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_30 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_30 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_30 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_30 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_30 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h1F) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_31 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_31 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_31 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_31 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_31 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h20) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_32 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_32 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_32 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_32 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_32 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h21) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_33 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_33 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_33 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_33 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_33 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h22) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_34 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_34 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_34 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_34 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_34 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h23) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_35 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_35 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_35 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_35 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_35 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h24) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_36 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_36 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_36 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_36 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_36 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h25) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_37 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_37 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_37 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_37 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_37 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h26) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_38 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_38 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_38 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_38 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_38 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h27) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_39 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_39 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_39 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_39 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_39 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h28) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_40 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_40 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_40 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_40 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_40 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h29) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_41 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_41 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_41 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_41 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_41 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h2A) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_42 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_42 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_42 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_42 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_42 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h2B) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_43 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_43 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_43 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_43 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_43 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h2C) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_44 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_44 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_44 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_44 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_44 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h2D) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_45 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_45 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_45 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_45 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_45 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h2E) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_46 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_46 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_46 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_46 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_46 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h2F) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_47 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_47 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_47 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_47 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_47 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h30) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_48 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_48 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_48 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_48 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_48 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h31) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_49 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_49 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_49 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_49 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_49 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h32) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_50 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_50 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_50 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_50 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_50 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h33) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_51 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_51 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_51 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_51 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_51 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h34) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_52 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_52 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_52 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_52 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_52 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h35) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_53 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_53 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_53 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_53 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_53 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h36) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_54 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_54 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_54 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_54 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_54 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h37) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_55 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_55 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_55 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_55 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_55 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h38) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_56 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_56 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_56 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_56 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_56 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h39) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_57 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_57 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_57 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_57 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_57 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h3A) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_58 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_58 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_58 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_58 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_58 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h3B) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_59 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_59 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_59 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_59 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_59 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h3C) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_60 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_60 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_60 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_60 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_60 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h3D) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_61 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_61 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_61 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_61 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_61 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & io_u_pc[7:2] == 6'h3E) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_62 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_62 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_62 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_62 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_62 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
      if (_GEN_0 & (&(io_u_pc[7:2]))) begin	// core/src/ifu.scala:120:22, :146:24, :163:{20,34}, :164:28
        if (io_u_branch) begin	// core/src/ifu.scala:108:16
          if (_GEN_2)	// core/src/ifu.scala:165:78
            pht_63 <= 2'h3;	// core/src/ifu.scala:107:7, :120:22
          else if (_pht_T_3)	// core/src/ifu.scala:165:78
            pht_63 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
          else	// core/src/ifu.scala:165:78
            pht_63 <= 2'h1;	// core/src/ifu.scala:107:7, :120:22
        end
        else if (&_GEN_1)	// core/src/ifu.scala:165:78, :166:79
          pht_63 <= 2'h2;	// core/src/ifu.scala:107:7, :120:22
        else	// core/src/ifu.scala:166:79
          pht_63 <= _GEN_3;	// core/src/ifu.scala:120:22, :166:79
      end
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/ifu.scala:107:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/ifu.scala:107:7
      `FIRRTL_BEFORE_INITIAL	// core/src/ifu.scala:107:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/ifu.scala:107:7
      automatic logic [31:0] _RANDOM[0:3];	// core/src/ifu.scala:107:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/ifu.scala:107:7
        `INIT_RANDOM_PROLOG_	// core/src/ifu.scala:107:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/ifu.scala:107:7
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          _RANDOM[i[1:0]] = `RANDOM;	// core/src/ifu.scala:107:7
        end	// core/src/ifu.scala:107:7
        pht_0 = _RANDOM[2'h0][1:0];	// core/src/ifu.scala:107:7, :120:22
        pht_1 = _RANDOM[2'h0][3:2];	// core/src/ifu.scala:107:7, :120:22
        pht_2 = _RANDOM[2'h0][5:4];	// core/src/ifu.scala:107:7, :120:22
        pht_3 = _RANDOM[2'h0][7:6];	// core/src/ifu.scala:107:7, :120:22
        pht_4 = _RANDOM[2'h0][9:8];	// core/src/ifu.scala:107:7, :120:22
        pht_5 = _RANDOM[2'h0][11:10];	// core/src/ifu.scala:107:7, :120:22
        pht_6 = _RANDOM[2'h0][13:12];	// core/src/ifu.scala:107:7, :120:22
        pht_7 = _RANDOM[2'h0][15:14];	// core/src/ifu.scala:107:7, :120:22
        pht_8 = _RANDOM[2'h0][17:16];	// core/src/ifu.scala:107:7, :120:22
        pht_9 = _RANDOM[2'h0][19:18];	// core/src/ifu.scala:107:7, :120:22
        pht_10 = _RANDOM[2'h0][21:20];	// core/src/ifu.scala:107:7, :120:22
        pht_11 = _RANDOM[2'h0][23:22];	// core/src/ifu.scala:107:7, :120:22
        pht_12 = _RANDOM[2'h0][25:24];	// core/src/ifu.scala:107:7, :120:22
        pht_13 = _RANDOM[2'h0][27:26];	// core/src/ifu.scala:107:7, :120:22
        pht_14 = _RANDOM[2'h0][29:28];	// core/src/ifu.scala:107:7, :120:22
        pht_15 = _RANDOM[2'h0][31:30];	// core/src/ifu.scala:107:7, :120:22
        pht_16 = _RANDOM[2'h1][1:0];	// core/src/ifu.scala:107:7, :120:22
        pht_17 = _RANDOM[2'h1][3:2];	// core/src/ifu.scala:107:7, :120:22
        pht_18 = _RANDOM[2'h1][5:4];	// core/src/ifu.scala:107:7, :120:22
        pht_19 = _RANDOM[2'h1][7:6];	// core/src/ifu.scala:107:7, :120:22
        pht_20 = _RANDOM[2'h1][9:8];	// core/src/ifu.scala:107:7, :120:22
        pht_21 = _RANDOM[2'h1][11:10];	// core/src/ifu.scala:107:7, :120:22
        pht_22 = _RANDOM[2'h1][13:12];	// core/src/ifu.scala:107:7, :120:22
        pht_23 = _RANDOM[2'h1][15:14];	// core/src/ifu.scala:107:7, :120:22
        pht_24 = _RANDOM[2'h1][17:16];	// core/src/ifu.scala:107:7, :120:22
        pht_25 = _RANDOM[2'h1][19:18];	// core/src/ifu.scala:107:7, :120:22
        pht_26 = _RANDOM[2'h1][21:20];	// core/src/ifu.scala:107:7, :120:22
        pht_27 = _RANDOM[2'h1][23:22];	// core/src/ifu.scala:107:7, :120:22
        pht_28 = _RANDOM[2'h1][25:24];	// core/src/ifu.scala:107:7, :120:22
        pht_29 = _RANDOM[2'h1][27:26];	// core/src/ifu.scala:107:7, :120:22
        pht_30 = _RANDOM[2'h1][29:28];	// core/src/ifu.scala:107:7, :120:22
        pht_31 = _RANDOM[2'h1][31:30];	// core/src/ifu.scala:107:7, :120:22
        pht_32 = _RANDOM[2'h2][1:0];	// core/src/ifu.scala:107:7, :120:22
        pht_33 = _RANDOM[2'h2][3:2];	// core/src/ifu.scala:107:7, :120:22
        pht_34 = _RANDOM[2'h2][5:4];	// core/src/ifu.scala:107:7, :120:22
        pht_35 = _RANDOM[2'h2][7:6];	// core/src/ifu.scala:107:7, :120:22
        pht_36 = _RANDOM[2'h2][9:8];	// core/src/ifu.scala:107:7, :120:22
        pht_37 = _RANDOM[2'h2][11:10];	// core/src/ifu.scala:107:7, :120:22
        pht_38 = _RANDOM[2'h2][13:12];	// core/src/ifu.scala:107:7, :120:22
        pht_39 = _RANDOM[2'h2][15:14];	// core/src/ifu.scala:107:7, :120:22
        pht_40 = _RANDOM[2'h2][17:16];	// core/src/ifu.scala:107:7, :120:22
        pht_41 = _RANDOM[2'h2][19:18];	// core/src/ifu.scala:107:7, :120:22
        pht_42 = _RANDOM[2'h2][21:20];	// core/src/ifu.scala:107:7, :120:22
        pht_43 = _RANDOM[2'h2][23:22];	// core/src/ifu.scala:107:7, :120:22
        pht_44 = _RANDOM[2'h2][25:24];	// core/src/ifu.scala:107:7, :120:22
        pht_45 = _RANDOM[2'h2][27:26];	// core/src/ifu.scala:107:7, :120:22
        pht_46 = _RANDOM[2'h2][29:28];	// core/src/ifu.scala:107:7, :120:22
        pht_47 = _RANDOM[2'h2][31:30];	// core/src/ifu.scala:107:7, :120:22
        pht_48 = _RANDOM[2'h3][1:0];	// core/src/ifu.scala:107:7, :120:22
        pht_49 = _RANDOM[2'h3][3:2];	// core/src/ifu.scala:107:7, :120:22
        pht_50 = _RANDOM[2'h3][5:4];	// core/src/ifu.scala:107:7, :120:22
        pht_51 = _RANDOM[2'h3][7:6];	// core/src/ifu.scala:107:7, :120:22
        pht_52 = _RANDOM[2'h3][9:8];	// core/src/ifu.scala:107:7, :120:22
        pht_53 = _RANDOM[2'h3][11:10];	// core/src/ifu.scala:107:7, :120:22
        pht_54 = _RANDOM[2'h3][13:12];	// core/src/ifu.scala:107:7, :120:22
        pht_55 = _RANDOM[2'h3][15:14];	// core/src/ifu.scala:107:7, :120:22
        pht_56 = _RANDOM[2'h3][17:16];	// core/src/ifu.scala:107:7, :120:22
        pht_57 = _RANDOM[2'h3][19:18];	// core/src/ifu.scala:107:7, :120:22
        pht_58 = _RANDOM[2'h3][21:20];	// core/src/ifu.scala:107:7, :120:22
        pht_59 = _RANDOM[2'h3][23:22];	// core/src/ifu.scala:107:7, :120:22
        pht_60 = _RANDOM[2'h3][25:24];	// core/src/ifu.scala:107:7, :120:22
        pht_61 = _RANDOM[2'h3][27:26];	// core/src/ifu.scala:107:7, :120:22
        pht_62 = _RANDOM[2'h3][29:28];	// core/src/ifu.scala:107:7, :120:22
        pht_63 = _RANDOM[2'h3][31:30];	// core/src/ifu.scala:107:7, :120:22
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/ifu.scala:107:7
      `FIRRTL_AFTER_INITIAL	// core/src/ifu.scala:107:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  dist_mem btb (	// core/src/ifu.scala:119:21
    .clk  (clock),
    .a    (io_u_pc[7:2]),	// core/src/ifu.scala:146:24
    .d    ({io_update, io_u_type, io_u_pc[21:8], io_u_target}),	// core/src/ifu.scala:147:{20,50}
    .we   (io_update),
    .spo  (/* unused */),
    .dpra (io_pc[7:2]),	// core/src/ifu.scala:122:24
    .dpo  (_btb_dpo)
  );
  assign io_branch =
    _btb_dpo[47] & (io_pc[21:8] ^ _btb_dpo[45:32]) == 14'h0
    & (_btb_dpo[46] & _GEN[io_pc[7:2]][1] | ~(_btb_dpo[46]));	// core/src/ifu.scala:107:7, :119:21, :122:24, :123:29, :124:28, :125:27, :131:{28,36,45,50}, :132:{21,36,41}, :133:23, :135:{19,28}, :143:19
  assign io_btarget = _btb_dpo[31:0];	// core/src/ifu.scala:107:7, :119:21, :126:30
endmodule

module icache(	// core/src/ifu.scala:79:7
  input         clock,	// core/src/ifu.scala:79:7
  input  [31:0] io_pc,	// core/src/ifu.scala:80:16
  output        io_valid,	// core/src/ifu.scala:80:16
  output [31:0] io_inst,	// core/src/ifu.scala:80:16
  input         io_update,	// core/src/ifu.scala:80:16
  input  [31:0] io_u_pc,	// core/src/ifu.scala:80:16
                io_u_inst	// core/src/ifu.scala:80:16
);

  wire [47:0] _cache_dpo;	// core/src/ifu.scala:89:23
  dist_mem cache (	// core/src/ifu.scala:89:23
    .clk  (clock),
    .a    (io_u_pc[7:2]),	// core/src/ifu.scala:100:26
    .d    ({1'h0, io_update, io_u_pc[21:8], io_u_inst}),	// core/src/ifu.scala:101:{22,46}
    .we   (io_update),
    .spo  (/* unused */),
    .dpra (io_pc[7:2]),	// core/src/ifu.scala:90:24
    .dpo  (_cache_dpo)
  );
  assign io_valid = _cache_dpo[46] & (io_pc[21:8] ^ _cache_dpo[45:32]) == 14'h0;	// core/src/ifu.scala:79:7, :89:23, :91:31, :92:29, :98:{25,35,43,52}
  assign io_inst = _cache_dpo[31:0];	// core/src/ifu.scala:79:7, :89:23, :93:30
endmodule

module ifu(	// core/src/ifu.scala:5:7
  input         clock,	// core/src/ifu.scala:5:7
                reset,	// core/src/ifu.scala:5:7
  input  [31:0] io_base_in_bits_data_out,	// core/src/ifu.scala:6:16
  input         io_base_out_ready,	// core/src/ifu.scala:6:16
  output        io_base_out_valid,	// core/src/ifu.scala:6:16
  output [31:0] io_base_out_bits_addr,	// core/src/ifu.scala:6:16
  input         io_next_ready,	// core/src/ifu.scala:6:16
  output        io_next_valid,	// core/src/ifu.scala:6:16
  output [31:0] io_next_bits_pc,	// core/src/ifu.scala:6:16
                io_next_bits_npc,	// core/src/ifu.scala:6:16
                io_next_bits_inst,	// core/src/ifu.scala:6:16
  input         io_flush,	// core/src/ifu.scala:6:16
                io_update,	// core/src/ifu.scala:6:16
                io_u_branch,	// core/src/ifu.scala:6:16
                io_u_type,	// core/src/ifu.scala:6:16
  input  [31:0] io_u_pc,	// core/src/ifu.scala:6:16
                io_u_target,	// core/src/ifu.scala:6:16
                io_nextPC	// core/src/ifu.scala:6:16
);

  wire        _icache_io_valid;	// core/src/ifu.scala:24:24
  wire [31:0] _icache_io_inst;	// core/src/ifu.scala:24:24
  wire        _btb_io_branch;	// core/src/ifu.scala:23:21
  wire [31:0] _btb_io_btarget;	// core/src/ifu.scala:23:21
  reg  [31:0] pc;	// core/src/ifu.scala:22:21
  reg         state;	// core/src/ifu.scala:27:24
  wire        valid = io_next_ready & (io_base_out_ready & state | _icache_io_valid);	// core/src/ifu.scala:24:24, :27:24, :29:31, :30:{35,45}
  wire [31:0] _npc_T = pc + 32'h4;	// core/src/ifu.scala:22:21, :54:54
  always @(posedge clock) begin	// core/src/ifu.scala:5:7
    if (reset) begin	// core/src/ifu.scala:5:7
      pc <= 32'h80000000;	// core/src/ifu.scala:22:21
      state <= 1'h0;	// core/src/ifu.scala:5:7, :27:24
    end
    else begin	// core/src/ifu.scala:5:7
      if (io_flush)	// core/src/ifu.scala:6:16
        pc <= io_nextPC;	// core/src/ifu.scala:22:21
      else if (valid) begin	// core/src/ifu.scala:29:31
        if (_btb_io_branch)	// core/src/ifu.scala:23:21
          pc <= _btb_io_btarget;	// core/src/ifu.scala:22:21, :23:21
        else	// core/src/ifu.scala:23:21
          pc <= _npc_T;	// core/src/ifu.scala:22:21, :54:54
      end
      state <=
        ~io_flush
        & (state
             ? ~(io_next_ready | ~io_base_out_ready) & state
             : io_base_out_ready & ~_icache_io_valid | state);	// core/src/ifu.scala:24:24, :27:24, :32:{17,55}, :33:{19,38,41}, :34:{19,34,37}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/ifu.scala:5:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/ifu.scala:5:7
      `FIRRTL_BEFORE_INITIAL	// core/src/ifu.scala:5:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/ifu.scala:5:7
      automatic logic [31:0] _RANDOM[0:1];	// core/src/ifu.scala:5:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/ifu.scala:5:7
        `INIT_RANDOM_PROLOG_	// core/src/ifu.scala:5:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/ifu.scala:5:7
        for (logic [1:0] i = 2'h0; i < 2'h2; i += 2'h1) begin
          _RANDOM[i[0]] = `RANDOM;	// core/src/ifu.scala:5:7
        end	// core/src/ifu.scala:5:7
        pc = _RANDOM[1'h0];	// core/src/ifu.scala:5:7, :22:21
        state = _RANDOM[1'h1][0];	// core/src/ifu.scala:5:7, :27:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/ifu.scala:5:7
      `FIRRTL_AFTER_INITIAL	// core/src/ifu.scala:5:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  btb btb (	// core/src/ifu.scala:23:21
    .clock       (clock),
    .reset       (reset),
    .io_pc       (pc),	// core/src/ifu.scala:22:21
    .io_branch   (_btb_io_branch),
    .io_btarget  (_btb_io_btarget),
    .io_update   (io_update),
    .io_u_branch (io_u_branch),
    .io_u_type   (io_u_type),
    .io_u_pc     (io_u_pc),
    .io_u_target (io_u_target)
  );
  icache icache (	// core/src/ifu.scala:24:24
    .clock     (clock),
    .io_pc     (pc),	// core/src/ifu.scala:22:21
    .io_valid  (_icache_io_valid),
    .io_inst   (_icache_io_inst),
    .io_update (state & io_base_out_ready),	// core/src/ifu.scala:27:24, :38:31
    .io_u_pc   (pc),	// core/src/ifu.scala:22:21
    .io_u_inst (io_base_in_bits_data_out)
  );
  assign io_base_out_valid = io_base_out_ready;	// core/src/ifu.scala:5:7
  assign io_base_out_bits_addr = pc;	// core/src/ifu.scala:5:7, :22:21
  assign io_next_valid = valid;	// core/src/ifu.scala:5:7, :29:31
  assign io_next_bits_pc = pc;	// core/src/ifu.scala:5:7, :22:21
  assign io_next_bits_npc =
    io_flush ? io_nextPC : valid ? (_btb_io_branch ? _btb_io_btarget : _npc_T) : pc;	// core/src/ifu.scala:5:7, :22:21, :23:21, :29:31, :50:20, :51:13, :53:22, :54:{13,19,54}, :57:13
  assign io_next_bits_inst =
    _icache_io_valid ? _icache_io_inst : io_base_in_bits_data_out;	// core/src/ifu.scala:5:7, :24:24, :75:29
endmodule

module buffer(	// core/src/core.scala:92:7
  input         clock,	// core/src/core.scala:92:7
                reset,	// core/src/core.scala:92:7
  output        io_prev_ready,	// core/src/core.scala:93:16
  input         io_prev_valid,	// core/src/core.scala:93:16
  input  [31:0] io_prev_bits_pc,	// core/src/core.scala:93:16
                io_prev_bits_npc,	// core/src/core.scala:93:16
                io_prev_bits_inst,	// core/src/core.scala:93:16
  input         io_next_ready,	// core/src/core.scala:93:16
  output        io_next_valid,	// core/src/core.scala:93:16
  output [31:0] io_next_bits_pc,	// core/src/core.scala:93:16
                io_next_bits_npc,	// core/src/core.scala:93:16
                io_next_bits_inst,	// core/src/core.scala:93:16
  input         io_stall,	// core/src/core.scala:93:16
                io_flush	// core/src/core.scala:93:16
);

  reg         state;	// core/src/core.scala:99:24
  reg  [31:0] regs_pc;	// core/src/core.scala:101:19
  reg  [31:0] regs_npc;	// core/src/core.scala:101:19
  reg  [31:0] regs_inst;	// core/src/core.scala:101:19
  wire        _GEN = state & (io_stall | ~io_next_ready);	// core/src/core.scala:99:24, :107:{21,34,37}
  always @(posedge clock) begin	// core/src/core.scala:92:7
    if (reset)	// core/src/core.scala:92:7
      state <= 1'h0;	// core/src/core.scala:99:24
    else	// core/src/core.scala:92:7
      state <= ~io_flush & (_GEN | io_prev_valid);	// core/src/core.scala:99:24, :103:20, :104:15, :107:{21,54}, :108:15, :113:15
    if (io_flush | _GEN | ~io_prev_valid) begin	// core/src/core.scala:101:19, :103:20, :107:{21,54}, :110:14, :115:14
    end
    else begin	// core/src/core.scala:101:19, :103:20, :107:54, :110:14, :115:14
      regs_pc <= io_prev_bits_pc;	// core/src/core.scala:101:19
      regs_npc <= io_prev_bits_npc;	// core/src/core.scala:101:19
      regs_inst <= io_prev_bits_inst;	// core/src/core.scala:101:19
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/core.scala:92:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/core.scala:92:7
      `FIRRTL_BEFORE_INITIAL	// core/src/core.scala:92:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/core.scala:92:7
      automatic logic [31:0] _RANDOM[0:3];	// core/src/core.scala:92:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/core.scala:92:7
        `INIT_RANDOM_PROLOG_	// core/src/core.scala:92:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/core.scala:92:7
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          _RANDOM[i[1:0]] = `RANDOM;	// core/src/core.scala:92:7
        end	// core/src/core.scala:92:7
        state = _RANDOM[2'h0][0];	// core/src/core.scala:92:7, :99:24
        regs_pc = {_RANDOM[2'h0][31:1], _RANDOM[2'h1][0]};	// core/src/core.scala:92:7, :99:24, :101:19
        regs_npc = {_RANDOM[2'h1][31:1], _RANDOM[2'h2][0]};	// core/src/core.scala:92:7, :101:19
        regs_inst = {_RANDOM[2'h2][31:1], _RANDOM[2'h3][0]};	// core/src/core.scala:92:7, :101:19
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/core.scala:92:7
      `FIRRTL_AFTER_INITIAL	// core/src/core.scala:92:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_prev_ready = ~io_flush & ~_GEN;	// core/src/core.scala:92:7, :99:24, :103:20, :104:15, :105:15, :107:{21,54}, :108:15, :109:15, :114:15
  assign io_next_valid = state;	// core/src/core.scala:92:7, :99:24
  assign io_next_bits_pc = regs_pc;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_npc = regs_npc;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_inst = regs_inst;	// core/src/core.scala:92:7, :101:19
endmodule

module ImmGen(	// core/src/idu.scala:263:7
  input  [25:0] io_inst26,	// core/src/idu.scala:264:16
  input  [3:0]  io_immType,	// core/src/idu.scala:264:16
  output [31:0] io_Imm	// core/src/idu.scala:264:16
);

  assign io_Imm =
    io_immType == 4'h8
      ? {{4{io_inst26[9]}}, io_inst26[9:0], io_inst26[25:10], 2'h0}
      : io_immType == 4'h7
          ? {{9{io_inst26[4]}}, io_inst26[4:0], io_inst26[25:10], 2'h0}
          : io_immType == 4'h6
              ? {io_inst26[24:5], 12'h0}
              : io_immType == 4'h5
                  ? {{14{io_inst26[25]}}, io_inst26[25:10], 2'h0}
                  : io_immType == 4'h4
                      ? {{16{io_inst26[23]}}, io_inst26[23:10], 2'h0}
                      : io_immType == 4'h3
                          ? {20'h0, io_inst26[21:10]}
                          : io_immType == 4'h2
                              ? {{20{io_inst26[21]}}, io_inst26[21:10]}
                              : io_immType == 4'h1
                                  ? {{24{io_inst26[17]}}, io_inst26[17:10]}
                                  : io_immType == 4'h0
                                      ? {27'h0, io_inst26[14:10]}
                                      : 32'h0;	// core/src/idu.scala:263:7, :270:42, :272:{37,42,62}, :273:{36,41,55,71}, :274:{37,42,56,72}, :275:38, :276:{37,42,56,72,86}, :277:{37,42,56,72}, :278:{37,47,60}, :279:{37,42,55,70}, :280:{35,40,53,68}
endmodule

module RegFile(	// core/src/idu.scala:241:7
  input         clock,	// core/src/idu.scala:241:7
                reset,	// core/src/idu.scala:241:7
  input  [4:0]  io_rd,	// core/src/idu.scala:242:16
                io_rj,	// core/src/idu.scala:242:16
                io_rk,	// core/src/idu.scala:242:16
  output [31:0] io_rd_data,	// core/src/idu.scala:242:16
                io_rj_data,	// core/src/idu.scala:242:16
                io_rk_data,	// core/src/idu.scala:242:16
  input         io_wen,	// core/src/idu.scala:242:16
  input  [4:0]  io_waddr,	// core/src/idu.scala:242:16
  input  [31:0] io_wdata	// core/src/idu.scala:242:16
);

  reg  [31:0]       reg_0;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_1;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_2;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_3;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_4;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_5;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_6;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_7;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_8;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_9;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_10;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_11;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_12;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_13;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_14;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_15;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_16;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_17;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_18;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_19;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_20;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_21;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_22;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_23;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_24;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_25;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_26;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_27;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_28;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_29;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_30;	// core/src/idu.scala:254:22
  reg  [31:0]       reg_31;	// core/src/idu.scala:254:22
  wire [31:0][31:0] _GEN =
    {{reg_31},
     {reg_30},
     {reg_29},
     {reg_28},
     {reg_27},
     {reg_26},
     {reg_25},
     {reg_24},
     {reg_23},
     {reg_22},
     {reg_21},
     {reg_20},
     {reg_19},
     {reg_18},
     {reg_17},
     {reg_16},
     {reg_15},
     {reg_14},
     {reg_13},
     {reg_12},
     {reg_11},
     {reg_10},
     {reg_9},
     {reg_8},
     {reg_7},
     {reg_6},
     {reg_5},
     {reg_4},
     {reg_3},
     {reg_2},
     {reg_1},
     {reg_0}};	// core/src/idu.scala:254:22, :256:22
  always @(posedge clock) begin	// core/src/idu.scala:241:7
    if (reset) begin	// core/src/idu.scala:241:7
      reg_0 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_1 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_2 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_3 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_4 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_5 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_6 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_7 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_8 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_9 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_10 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_11 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_12 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_13 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_14 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_15 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_16 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_17 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_18 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_19 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_20 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_21 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_22 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_23 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_24 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_25 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_26 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_27 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_28 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_29 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_30 <= 32'h0;	// core/src/idu.scala:254:{22,30}
      reg_31 <= 32'h0;	// core/src/idu.scala:254:{22,30}
    end
    else begin	// core/src/idu.scala:241:7
      if (io_waddr == 5'h0) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_0 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_0 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h1) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_1 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_1 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h2) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_2 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_2 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h3) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_3 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_3 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h4) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_4 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_4 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h5) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_5 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_5 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h6) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_6 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_6 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h7) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_7 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_7 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h8) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_8 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_8 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h9) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_9 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_9 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'hA) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_10 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_10 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'hB) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_11 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_11 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'hC) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_12 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_12 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'hD) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_13 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_13 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'hE) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_14 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_14 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'hF) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_15 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_15 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h10) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_16 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_16 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h11) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_17 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_17 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h12) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_18 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_18 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h13) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_19 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_19 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h14) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_20 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_20 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h15) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_21 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_21 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h16) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_22 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_22 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h17) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_23 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_23 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h18) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_24 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_24 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h19) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_25 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_25 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h1A) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_26 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_26 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h1B) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_27 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_27 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h1C) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_28 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_28 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h1D) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_29 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_29 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (io_waddr == 5'h1E) begin	// core/src/idu.scala:241:7, :260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_30 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_30 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
      if (&io_waddr) begin	// core/src/idu.scala:260:19
        if (io_wen)	// core/src/idu.scala:242:16
          reg_31 <= io_wdata;	// core/src/idu.scala:254:22
        else	// core/src/idu.scala:242:16
          reg_31 <= _GEN[io_waddr];	// core/src/idu.scala:254:22, :256:22, :260:25
      end
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/idu.scala:241:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/idu.scala:241:7
      `FIRRTL_BEFORE_INITIAL	// core/src/idu.scala:241:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/idu.scala:241:7
      automatic logic [31:0] _RANDOM[0:31];	// core/src/idu.scala:241:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/idu.scala:241:7
        `INIT_RANDOM_PROLOG_	// core/src/idu.scala:241:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/idu.scala:241:7
        for (logic [5:0] i = 6'h0; i < 6'h20; i += 6'h1) begin
          _RANDOM[i[4:0]] = `RANDOM;	// core/src/idu.scala:241:7
        end	// core/src/idu.scala:241:7
        reg_0 = _RANDOM[5'h0];	// core/src/idu.scala:241:7, :254:22
        reg_1 = _RANDOM[5'h1];	// core/src/idu.scala:241:7, :254:22
        reg_2 = _RANDOM[5'h2];	// core/src/idu.scala:241:7, :254:22
        reg_3 = _RANDOM[5'h3];	// core/src/idu.scala:241:7, :254:22
        reg_4 = _RANDOM[5'h4];	// core/src/idu.scala:241:7, :254:22
        reg_5 = _RANDOM[5'h5];	// core/src/idu.scala:241:7, :254:22
        reg_6 = _RANDOM[5'h6];	// core/src/idu.scala:241:7, :254:22
        reg_7 = _RANDOM[5'h7];	// core/src/idu.scala:241:7, :254:22
        reg_8 = _RANDOM[5'h8];	// core/src/idu.scala:241:7, :254:22
        reg_9 = _RANDOM[5'h9];	// core/src/idu.scala:241:7, :254:22
        reg_10 = _RANDOM[5'hA];	// core/src/idu.scala:241:7, :254:22
        reg_11 = _RANDOM[5'hB];	// core/src/idu.scala:241:7, :254:22
        reg_12 = _RANDOM[5'hC];	// core/src/idu.scala:241:7, :254:22
        reg_13 = _RANDOM[5'hD];	// core/src/idu.scala:241:7, :254:22
        reg_14 = _RANDOM[5'hE];	// core/src/idu.scala:241:7, :254:22
        reg_15 = _RANDOM[5'hF];	// core/src/idu.scala:241:7, :254:22
        reg_16 = _RANDOM[5'h10];	// core/src/idu.scala:241:7, :254:22
        reg_17 = _RANDOM[5'h11];	// core/src/idu.scala:241:7, :254:22
        reg_18 = _RANDOM[5'h12];	// core/src/idu.scala:241:7, :254:22
        reg_19 = _RANDOM[5'h13];	// core/src/idu.scala:241:7, :254:22
        reg_20 = _RANDOM[5'h14];	// core/src/idu.scala:241:7, :254:22
        reg_21 = _RANDOM[5'h15];	// core/src/idu.scala:241:7, :254:22
        reg_22 = _RANDOM[5'h16];	// core/src/idu.scala:241:7, :254:22
        reg_23 = _RANDOM[5'h17];	// core/src/idu.scala:241:7, :254:22
        reg_24 = _RANDOM[5'h18];	// core/src/idu.scala:241:7, :254:22
        reg_25 = _RANDOM[5'h19];	// core/src/idu.scala:241:7, :254:22
        reg_26 = _RANDOM[5'h1A];	// core/src/idu.scala:241:7, :254:22
        reg_27 = _RANDOM[5'h1B];	// core/src/idu.scala:241:7, :254:22
        reg_28 = _RANDOM[5'h1C];	// core/src/idu.scala:241:7, :254:22
        reg_29 = _RANDOM[5'h1D];	// core/src/idu.scala:241:7, :254:22
        reg_30 = _RANDOM[5'h1E];	// core/src/idu.scala:241:7, :254:22
        reg_31 = _RANDOM[5'h1F];	// core/src/idu.scala:241:7, :254:22
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/idu.scala:241:7
      `FIRRTL_AFTER_INITIAL	// core/src/idu.scala:241:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_rd_data = io_rd == 5'h0 ? 32'h0 : _GEN[io_rd];	// core/src/bundles.scala:8:19, core/src/idu.scala:241:7, :254:30, :256:22
  assign io_rj_data = io_rj == 5'h0 ? 32'h0 : _GEN[io_rj];	// core/src/bundles.scala:8:19, core/src/idu.scala:241:7, :254:30, :256:22, :257:22
  assign io_rk_data = io_rk == 5'h0 ? 32'h0 : _GEN[io_rk];	// core/src/bundles.scala:8:19, core/src/idu.scala:241:7, :254:30, :256:22, :258:22
endmodule

module idu(	// core/src/idu.scala:64:7
  input         clock,	// core/src/idu.scala:64:7
                reset,	// core/src/idu.scala:64:7
  output        io_prev_ready,	// core/src/idu.scala:65:16
  input         io_prev_valid,	// core/src/idu.scala:65:16
  input  [31:0] io_prev_bits_pc,	// core/src/idu.scala:65:16
                io_prev_bits_npc,	// core/src/idu.scala:65:16
                io_prev_bits_inst,	// core/src/idu.scala:65:16
  input         io_next_ready,	// core/src/idu.scala:65:16
  output        io_next_valid,	// core/src/idu.scala:65:16
  output [3:0]  io_next_bits_branchOp,	// core/src/idu.scala:65:16
                io_next_bits_aluOp,	// core/src/idu.scala:65:16
  output [1:0]  io_next_bits_aluAsrc,	// core/src/idu.scala:65:16
  output [2:0]  io_next_bits_aluBsrc,	// core/src/idu.scala:65:16
  output [3:0]  io_next_bits_memOp,	// core/src/idu.scala:65:16
  output [1:0]  io_next_bits_wbSel,	// core/src/idu.scala:65:16
                io_next_bits_wbDst,	// core/src/idu.scala:65:16
  output [31:0] io_next_bits_Imm,	// core/src/idu.scala:65:16
  output [4:0]  io_next_bits_rd,	// core/src/idu.scala:65:16
  output [31:0] io_next_bits_rd_data,	// core/src/idu.scala:65:16
                io_next_bits_rj_data,	// core/src/idu.scala:65:16
                io_next_bits_rk_data,	// core/src/idu.scala:65:16
                io_next_bits_pc,	// core/src/idu.scala:65:16
                io_next_bits_npc,	// core/src/idu.scala:65:16
  input         io_stall,	// core/src/idu.scala:65:16
                io_wen,	// core/src/idu.scala:65:16
  input  [4:0]  io_waddr,	// core/src/idu.scala:65:16
  input  [31:0] io_wdata,	// core/src/idu.scala:65:16
  output [4:0]  io_RJ,	// core/src/idu.scala:65:16
                io_RK,	// core/src/idu.scala:65:16
                io_RD,	// core/src/idu.scala:65:16
  input  [3:0]  io_Fw_RJ,	// core/src/idu.scala:65:16
                io_Fw_RK,	// core/src/idu.scala:65:16
                io_Fw_RD,	// core/src/idu.scala:65:16
  input  [31:0] io_ex_ALU,	// core/src/idu.scala:65:16
                io_l1_ALU,	// core/src/idu.scala:65:16
                io_l2_ALU,	// core/src/idu.scala:65:16
                io_wb_ALU,	// core/src/idu.scala:65:16
                io_l1_Mem,	// core/src/idu.scala:65:16
                io_l2_Mem,	// core/src/idu.scala:65:16
                io_wb_Mem,	// core/src/idu.scala:65:16
                io_wb_Mul	// core/src/idu.scala:65:16
);

  wire [31:0] _regFile_io_rd_data;	// core/src/idu.scala:194:25
  wire [31:0] _regFile_io_rj_data;	// core/src/idu.scala:194:25
  wire [31:0] _regFile_io_rk_data;	// core/src/idu.scala:194:25
  wire        _Decode_T_1 = io_prev_bits_inst[31:15] == 17'h20;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_3 = io_prev_bits_inst[31:15] == 17'h22;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_5 = io_prev_bits_inst[31:15] == 17'h24;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_7 = io_prev_bits_inst[31:15] == 17'h25;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_9 = io_prev_bits_inst[31:15] == 17'h28;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_11 = io_prev_bits_inst[31:15] == 17'h29;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_13 = io_prev_bits_inst[31:15] == 17'h2A;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_15 = io_prev_bits_inst[31:15] == 17'h2B;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_17 = io_prev_bits_inst[31:15] == 17'h2E;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_19 = io_prev_bits_inst[31:15] == 17'h2F;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_21 = io_prev_bits_inst[31:15] == 17'h30;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_23 = io_prev_bits_inst[31:15] == 17'h38;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_25 = io_prev_bits_inst[31:15] == 17'h81;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_27 = io_prev_bits_inst[31:15] == 17'h89;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_29 = io_prev_bits_inst[31:15] == 17'h91;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_31 = io_prev_bits_inst[31:22] == 10'h8;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_33 = io_prev_bits_inst[31:22] == 10'h9;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_35 = io_prev_bits_inst[31:22] == 10'hA;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_37 = io_prev_bits_inst[31:22] == 10'hD;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_39 = io_prev_bits_inst[31:22] == 10'hE;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_41 = io_prev_bits_inst[31:22] == 10'hF;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_43 = io_prev_bits_inst[31:25] == 7'hA;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_45 = io_prev_bits_inst[31:25] == 7'hE;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_47 = io_prev_bits_inst[31:22] == 10'hA0;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_49 = io_prev_bits_inst[31:22] == 10'hA1;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_51 = io_prev_bits_inst[31:22] == 10'hA2;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_53 = io_prev_bits_inst[31:22] == 10'hA4;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_55 = io_prev_bits_inst[31:22] == 10'hA5;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_57 = io_prev_bits_inst[31:22] == 10'hA6;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_59 = io_prev_bits_inst[31:22] == 10'hA8;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_61 = io_prev_bits_inst[31:22] == 10'hA9;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_63 = io_prev_bits_inst[31:26] == 6'h13;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_65 = io_prev_bits_inst[31:26] == 6'h14;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_67 = io_prev_bits_inst[31:26] == 6'h15;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_69 = io_prev_bits_inst[31:26] == 6'h16;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_71 = io_prev_bits_inst[31:26] == 6'h17;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_73 = io_prev_bits_inst[31:26] == 6'h18;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_75 = io_prev_bits_inst[31:26] == 6'h19;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_77 = io_prev_bits_inst[31:26] == 6'h1A;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _Decode_T_79 = io_prev_bits_inst[31:26] == 6'h1B;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire        _GEN =
    _Decode_T_69 | _Decode_T_71 | _Decode_T_73 | _Decode_T_75 | _Decode_T_77
    | _Decode_T_79;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_0 = _Decode_T_59 | _Decode_T_61 | _Decode_T_63;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_1 = _Decode_T_59 | _Decode_T_61;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_2 =
    _Decode_T_47 | _Decode_T_49 | _Decode_T_51 | _Decode_T_53 | _Decode_T_55
    | _Decode_T_57 | _GEN_1;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_3 = _Decode_T_37 | _Decode_T_39 | _Decode_T_41;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_4 =
    _Decode_T_25 | _Decode_T_27 | _Decode_T_29 | _Decode_T_31 | _Decode_T_33
    | _Decode_T_35 | _Decode_T_37 | _Decode_T_39 | _Decode_T_41 | _Decode_T_43
    | _Decode_T_45 | _GEN_2;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_5 =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
    | _Decode_T_23;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_6 = _Decode_T_43 | _Decode_T_45;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_7 =
    _Decode_T_25 | _Decode_T_27 | _Decode_T_29 | _Decode_T_31 | _Decode_T_33
    | _Decode_T_35 | _Decode_T_37 | _Decode_T_39 | _Decode_T_41 | _GEN_6;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_8 = _Decode_T_65 | ~_Decode_T_67;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_9 = _Decode_T_53 | _Decode_T_55 | _Decode_T_57;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire        _GEN_10 = _Decode_T_47 | _Decode_T_49 | _Decode_T_51;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  ImmGen immGen (	// core/src/idu.scala:190:24
    .io_inst26  (io_prev_bits_inst[25:0]),	// core/src/idu.scala:191:42
    .io_immType
      (_GEN_5
         ? 4'h9
         : _Decode_T_25 | _Decode_T_27 | _Decode_T_29
             ? 4'h0
             : _Decode_T_31 | _Decode_T_33 | _Decode_T_35
                 ? 4'h2
                 : _GEN_3
                     ? 4'h3
                     : _GEN_6
                         ? 4'h6
                         : _GEN_2
                             ? 4'h2
                             : _Decode_T_63
                                 ? 4'h5
                                 : _Decode_T_65 | _Decode_T_67
                                     ? 4'h8
                                     : _GEN ? 4'h5 : 4'h9),	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
    .io_Imm     (io_next_bits_Imm)
  );
  RegFile regFile (	// core/src/idu.scala:194:25
    .clock      (clock),
    .reset      (reset),
    .io_rd      (io_prev_bits_inst[4:0]),	// core/src/idu.scala:195:39
    .io_rj      (io_prev_bits_inst[9:5]),	// core/src/idu.scala:196:39
    .io_rk      (io_prev_bits_inst[14:10]),	// core/src/idu.scala:197:39
    .io_rd_data (_regFile_io_rd_data),
    .io_rj_data (_regFile_io_rj_data),
    .io_rk_data (_regFile_io_rk_data),
    .io_wen     (io_wen),
    .io_waddr   (io_waddr),
    .io_wdata   (io_wdata)
  );
  assign io_prev_ready = io_next_ready;	// core/src/idu.scala:64:7
  assign io_next_valid = io_prev_valid & ~io_stall;	// core/src/idu.scala:64:7, :237:{36,39}
  assign io_next_bits_branchOp =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
    | _Decode_T_23 | _GEN_4
      ? 4'h9
      : _Decode_T_63
          ? 4'h8
          : _Decode_T_65
              ? 4'h6
              : _Decode_T_67
                  ? 4'h7
                  : _Decode_T_69
                      ? 4'h0
                      : _Decode_T_71
                          ? 4'h1
                          : _Decode_T_73
                              ? 4'h2
                              : _Decode_T_75
                                  ? 4'h3
                                  : _Decode_T_77 ? 4'h4 : _Decode_T_79 ? 4'h5 : 4'h9;	// core/src/idu.scala:64:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_aluOp =
    _Decode_T_1
      ? 4'h0
      : _Decode_T_3
          ? 4'h1
          : _Decode_T_5
              ? 4'h2
              : _Decode_T_7
                  ? 4'h3
                  : _Decode_T_9
                      ? 4'h7
                      : _Decode_T_11
                          ? 4'h4
                          : _Decode_T_13
                              ? 4'h5
                              : _Decode_T_15
                                  ? 4'h6
                                  : _Decode_T_17
                                      ? 4'h8
                                      : _Decode_T_19
                                          ? 4'h9
                                          : _Decode_T_21
                                              ? 4'hA
                                              : _Decode_T_23
                                                  ? 4'hB
                                                  : _Decode_T_25
                                                      ? 4'h8
                                                      : _Decode_T_27
                                                          ? 4'h9
                                                          : _Decode_T_29
                                                              ? 4'hA
                                                              : _Decode_T_31
                                                                  ? 4'h2
                                                                  : _Decode_T_33
                                                                      ? 4'h3
                                                                      : _Decode_T_35
                                                                          ? 4'h0
                                                                          : _Decode_T_37
                                                                              ? 4'h4
                                                                              : _Decode_T_39
                                                                                  ? 4'h5
                                                                                  : _Decode_T_41
                                                                                      ? 4'h6
                                                                                      : _Decode_T_43
                                                                                        | _Decode_T_45
                                                                                        | _Decode_T_47
                                                                                        | _Decode_T_49
                                                                                        | _Decode_T_51
                                                                                        | _Decode_T_53
                                                                                        | _Decode_T_55
                                                                                        | _Decode_T_57
                                                                                        | _GEN_0
                                                                                          ? 4'h0
                                                                                          : _Decode_T_65
                                                                                              ? 4'hC
                                                                                              : _Decode_T_67
                                                                                                  ? 4'h0
                                                                                                  : _GEN
                                                                                                      ? 4'h1
                                                                                                      : 4'hC;	// core/src/idu.scala:64:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_aluAsrc =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
    | _Decode_T_23 | _Decode_T_25 | _Decode_T_27 | _Decode_T_29 | _Decode_T_31
    | _Decode_T_33 | _Decode_T_35 | _GEN_3
      ? 2'h0
      : _Decode_T_43
          ? 2'h2
          : _Decode_T_45
              ? 2'h1
              : _GEN_2
                  ? 2'h0
                  : _Decode_T_63
                      ? 2'h1
                      : _Decode_T_65 ? 2'h2 : _Decode_T_67 ? 2'h1 : {~_GEN, 1'h0};	// core/src/idu.scala:64:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_aluBsrc =
    _GEN_5
      ? 3'h0
      : _GEN_4
          ? 3'h2
          : _Decode_T_63
              ? 3'h3
              : _Decode_T_65 ? 3'h4 : _Decode_T_67 ? 3'h3 : _GEN ? 3'h1 : 3'h4;	// core/src/idu.scala:64:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_memOp =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
    | _Decode_T_23 | _GEN_7
      ? 4'h8
      : _Decode_T_47
          ? 4'h0
          : _Decode_T_49
              ? 4'h2
              : _Decode_T_51
                  ? 4'h4
                  : _Decode_T_53
                      ? 4'h5
                      : _Decode_T_55
                          ? 4'h6
                          : _Decode_T_57
                              ? 4'h7
                              : _Decode_T_59 ? 4'h1 : _Decode_T_61 ? 4'h3 : 4'h8;	// core/src/idu.scala:64:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_wbSel =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
      ? 2'h0
      : _Decode_T_23
          ? 2'h2
          : _GEN_7
              ? 2'h0
              : _GEN_10
                  ? 2'h1
                  : _GEN_9 ? 2'h3 : _GEN_1 ? 2'h1 : _Decode_T_63 ? 2'h0 : {2{_GEN_8}};	// core/src/idu.scala:64:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_wbDst =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
    | _Decode_T_23 | _Decode_T_25 | _Decode_T_27 | _Decode_T_29 | _Decode_T_31
    | _Decode_T_33 | _Decode_T_35 | _Decode_T_37 | _Decode_T_39 | _Decode_T_41
    | _Decode_T_43 | _Decode_T_45 | _GEN_10
      ? 2'h0
      : _GEN_9 ? 2'h2 : _GEN_0 ? 2'h0 : _GEN_8 ? 2'h2 : 2'h1;	// core/src/idu.scala:64:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_rd = io_prev_bits_inst[4:0];	// core/src/idu.scala:64:7, :195:39
  assign io_next_bits_rd_data =
    io_Fw_RD == 4'h7
      ? io_wb_Mul
      : io_Fw_RD == 4'h6
          ? io_wb_Mem
          : io_Fw_RD == 4'h4
              ? io_l2_Mem
              : io_Fw_RD == 4'h2
                  ? io_l1_Mem
                  : io_Fw_RD == 4'h5
                      ? io_wb_ALU
                      : io_Fw_RD == 4'h3
                          ? io_l2_ALU
                          : io_Fw_RD == 4'h1
                              ? io_l1_ALU
                              : io_Fw_RD == 4'h0 ? io_ex_ALU : _regFile_io_rd_data;	// core/src/idu.scala:64:7, :194:25, :216:61, src/main/scala/chisel3/util/Lookup.scala:34:39
  assign io_next_bits_rj_data =
    io_Fw_RJ == 4'h7
      ? io_wb_Mul
      : io_Fw_RJ == 4'h6
          ? io_wb_Mem
          : io_Fw_RJ == 4'h4
              ? io_l2_Mem
              : io_Fw_RJ == 4'h2
                  ? io_l1_Mem
                  : io_Fw_RJ == 4'h5
                      ? io_wb_ALU
                      : io_Fw_RJ == 4'h3
                          ? io_l2_ALU
                          : io_Fw_RJ == 4'h1
                              ? io_l1_ALU
                              : io_Fw_RJ == 4'h0 ? io_ex_ALU : _regFile_io_rj_data;	// core/src/idu.scala:64:7, :194:25, :217:61, src/main/scala/chisel3/util/Lookup.scala:34:39
  assign io_next_bits_rk_data =
    io_Fw_RK == 4'h7
      ? io_wb_Mul
      : io_Fw_RK == 4'h6
          ? io_wb_Mem
          : io_Fw_RK == 4'h4
              ? io_l2_Mem
              : io_Fw_RK == 4'h2
                  ? io_l1_Mem
                  : io_Fw_RK == 4'h5
                      ? io_wb_ALU
                      : io_Fw_RK == 4'h3
                          ? io_l2_ALU
                          : io_Fw_RK == 4'h1
                              ? io_l1_ALU
                              : io_Fw_RK == 4'h0 ? io_ex_ALU : _regFile_io_rk_data;	// core/src/idu.scala:64:7, :194:25, :218:61, src/main/scala/chisel3/util/Lookup.scala:34:39
  assign io_next_bits_pc = io_prev_bits_pc;	// core/src/idu.scala:64:7
  assign io_next_bits_npc = io_prev_bits_npc;	// core/src/idu.scala:64:7
  assign io_RJ = io_prev_bits_inst[9:5];	// core/src/idu.scala:64:7, :196:39
  assign io_RK = io_prev_bits_inst[14:10];	// core/src/idu.scala:64:7, :197:39
  assign io_RD = io_prev_bits_inst[4:0];	// core/src/idu.scala:64:7, :195:39
endmodule

module buffer_1(	// core/src/core.scala:92:7
  input         clock,	// core/src/core.scala:92:7
                reset,	// core/src/core.scala:92:7
  output        io_prev_ready,	// core/src/core.scala:93:16
  input         io_prev_valid,	// core/src/core.scala:93:16
  input  [3:0]  io_prev_bits_branchOp,	// core/src/core.scala:93:16
                io_prev_bits_aluOp,	// core/src/core.scala:93:16
  input  [1:0]  io_prev_bits_aluAsrc,	// core/src/core.scala:93:16
  input  [2:0]  io_prev_bits_aluBsrc,	// core/src/core.scala:93:16
  input  [3:0]  io_prev_bits_memOp,	// core/src/core.scala:93:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/core.scala:93:16
                io_prev_bits_wbDst,	// core/src/core.scala:93:16
  input  [31:0] io_prev_bits_Imm,	// core/src/core.scala:93:16
  input  [4:0]  io_prev_bits_rd,	// core/src/core.scala:93:16
  input  [31:0] io_prev_bits_rd_data,	// core/src/core.scala:93:16
                io_prev_bits_rj_data,	// core/src/core.scala:93:16
                io_prev_bits_rk_data,	// core/src/core.scala:93:16
                io_prev_bits_pc,	// core/src/core.scala:93:16
                io_prev_bits_npc,	// core/src/core.scala:93:16
  input         io_next_ready,	// core/src/core.scala:93:16
  output        io_next_valid,	// core/src/core.scala:93:16
  output [3:0]  io_next_bits_branchOp,	// core/src/core.scala:93:16
                io_next_bits_aluOp,	// core/src/core.scala:93:16
  output [1:0]  io_next_bits_aluAsrc,	// core/src/core.scala:93:16
  output [2:0]  io_next_bits_aluBsrc,	// core/src/core.scala:93:16
  output [3:0]  io_next_bits_memOp,	// core/src/core.scala:93:16
  output [1:0]  io_next_bits_wbSel,	// core/src/core.scala:93:16
                io_next_bits_wbDst,	// core/src/core.scala:93:16
  output [31:0] io_next_bits_Imm,	// core/src/core.scala:93:16
  output [4:0]  io_next_bits_rd,	// core/src/core.scala:93:16
  output [31:0] io_next_bits_rd_data,	// core/src/core.scala:93:16
                io_next_bits_rj_data,	// core/src/core.scala:93:16
                io_next_bits_rk_data,	// core/src/core.scala:93:16
                io_next_bits_pc,	// core/src/core.scala:93:16
                io_next_bits_npc,	// core/src/core.scala:93:16
  input         io_flush	// core/src/core.scala:93:16
);

  reg         state;	// core/src/core.scala:99:24
  reg  [3:0]  regs_branchOp;	// core/src/core.scala:101:19
  reg  [3:0]  regs_aluOp;	// core/src/core.scala:101:19
  reg  [1:0]  regs_aluAsrc;	// core/src/core.scala:101:19
  reg  [2:0]  regs_aluBsrc;	// core/src/core.scala:101:19
  reg  [3:0]  regs_memOp;	// core/src/core.scala:101:19
  reg  [1:0]  regs_wbSel;	// core/src/core.scala:101:19
  reg  [1:0]  regs_wbDst;	// core/src/core.scala:101:19
  reg  [31:0] regs_Imm;	// core/src/core.scala:101:19
  reg  [4:0]  regs_rd;	// core/src/core.scala:101:19
  reg  [31:0] regs_rd_data;	// core/src/core.scala:101:19
  reg  [31:0] regs_rj_data;	// core/src/core.scala:101:19
  reg  [31:0] regs_rk_data;	// core/src/core.scala:101:19
  reg  [31:0] regs_pc;	// core/src/core.scala:101:19
  reg  [31:0] regs_npc;	// core/src/core.scala:101:19
  wire        _GEN = state & ~io_next_ready;	// core/src/core.scala:99:24, :107:{21,37}
  always @(posedge clock) begin	// core/src/core.scala:92:7
    if (reset)	// core/src/core.scala:92:7
      state <= 1'h0;	// core/src/core.scala:93:16, :99:24
    else	// core/src/core.scala:92:7
      state <= ~io_flush & (_GEN | io_prev_valid);	// core/src/core.scala:99:24, :103:20, :104:15, :107:{21,54}, :108:15, :113:15
    if (io_flush | _GEN | ~io_prev_valid) begin	// core/src/core.scala:101:19, :103:20, :107:{21,54}, :110:14, :115:14
    end
    else begin	// core/src/core.scala:101:19, :103:20, :107:54, :110:14, :115:14
      regs_branchOp <= io_prev_bits_branchOp;	// core/src/core.scala:101:19
      regs_aluOp <= io_prev_bits_aluOp;	// core/src/core.scala:101:19
      regs_aluAsrc <= io_prev_bits_aluAsrc;	// core/src/core.scala:101:19
      regs_aluBsrc <= io_prev_bits_aluBsrc;	// core/src/core.scala:101:19
      regs_memOp <= io_prev_bits_memOp;	// core/src/core.scala:101:19
      regs_wbSel <= io_prev_bits_wbSel;	// core/src/core.scala:101:19
      regs_wbDst <= io_prev_bits_wbDst;	// core/src/core.scala:101:19
      regs_Imm <= io_prev_bits_Imm;	// core/src/core.scala:101:19
      regs_rd <= io_prev_bits_rd;	// core/src/core.scala:101:19
      regs_rd_data <= io_prev_bits_rd_data;	// core/src/core.scala:101:19
      regs_rj_data <= io_prev_bits_rj_data;	// core/src/core.scala:101:19
      regs_rk_data <= io_prev_bits_rk_data;	// core/src/core.scala:101:19
      regs_pc <= io_prev_bits_pc;	// core/src/core.scala:101:19
      regs_npc <= io_prev_bits_npc;	// core/src/core.scala:101:19
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/core.scala:92:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/core.scala:92:7
      `FIRRTL_BEFORE_INITIAL	// core/src/core.scala:92:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/core.scala:92:7
      automatic logic [31:0] _RANDOM[0:7];	// core/src/core.scala:92:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/core.scala:92:7
        `INIT_RANDOM_PROLOG_	// core/src/core.scala:92:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/core.scala:92:7
        for (logic [3:0] i = 4'h0; i < 4'h8; i += 4'h1) begin
          _RANDOM[i[2:0]] = `RANDOM;	// core/src/core.scala:92:7
        end	// core/src/core.scala:92:7
        state = _RANDOM[3'h0][0];	// core/src/core.scala:92:7, :99:24
        regs_branchOp = _RANDOM[3'h0][4:1];	// core/src/core.scala:92:7, :99:24, :101:19
        regs_aluOp = _RANDOM[3'h0][8:5];	// core/src/core.scala:92:7, :99:24, :101:19
        regs_aluAsrc = _RANDOM[3'h0][10:9];	// core/src/core.scala:92:7, :99:24, :101:19
        regs_aluBsrc = _RANDOM[3'h0][13:11];	// core/src/core.scala:92:7, :99:24, :101:19
        regs_memOp = _RANDOM[3'h0][17:14];	// core/src/core.scala:92:7, :99:24, :101:19
        regs_wbSel = _RANDOM[3'h0][19:18];	// core/src/core.scala:92:7, :99:24, :101:19
        regs_wbDst = _RANDOM[3'h0][21:20];	// core/src/core.scala:92:7, :99:24, :101:19
        regs_Imm = {_RANDOM[3'h0][31:22], _RANDOM[3'h1][21:0]};	// core/src/core.scala:92:7, :99:24, :101:19
        regs_rd = _RANDOM[3'h1][26:22];	// core/src/core.scala:92:7, :101:19
        regs_rd_data = {_RANDOM[3'h2][31:5], _RANDOM[3'h3][4:0]};	// core/src/core.scala:92:7, :101:19
        regs_rj_data = {_RANDOM[3'h3][31:5], _RANDOM[3'h4][4:0]};	// core/src/core.scala:92:7, :101:19
        regs_rk_data = {_RANDOM[3'h4][31:5], _RANDOM[3'h5][4:0]};	// core/src/core.scala:92:7, :101:19
        regs_pc = {_RANDOM[3'h5][31:5], _RANDOM[3'h6][4:0]};	// core/src/core.scala:92:7, :101:19
        regs_npc = {_RANDOM[3'h6][31:5], _RANDOM[3'h7][4:0]};	// core/src/core.scala:92:7, :101:19
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/core.scala:92:7
      `FIRRTL_AFTER_INITIAL	// core/src/core.scala:92:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_prev_ready = ~io_flush & ~_GEN;	// core/src/core.scala:92:7, :99:24, :103:20, :104:15, :105:15, :107:{21,54}, :108:15, :109:15, :114:15
  assign io_next_valid = state;	// core/src/core.scala:92:7, :99:24
  assign io_next_bits_branchOp = regs_branchOp;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_aluOp = regs_aluOp;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_aluAsrc = regs_aluAsrc;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_aluBsrc = regs_aluBsrc;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_memOp = regs_memOp;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_wbSel = regs_wbSel;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_wbDst = regs_wbDst;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_Imm = regs_Imm;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_rd = regs_rd;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_rd_data = regs_rd_data;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_rj_data = regs_rj_data;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_rk_data = regs_rk_data;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_pc = regs_pc;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_npc = regs_npc;	// core/src/core.scala:92:7, :101:19
endmodule

module booth2(	// core/src/mul.scala:77:7
  input  [31:0] io_A,	// core/src/mul.scala:78:16
  input  [2:0]  io_B,	// core/src/mul.scala:78:16
  output [63:0] io_S	// core/src/mul.scala:78:16
);

  wire [31:0]      _SignExtA_T_1 = {32{io_A[31]}};	// core/src/mul.scala:83:{28,36}
  wire [63:0]      SignExtA = {_SignExtA_T_1, io_A};	// core/src/mul.scala:83:{23,28}
  wire [64:0]      _GEN = {1'h0, io_B == 3'h2 | io_B == 3'h1 ? SignExtA : 64'h0};	// core/src/mul.scala:83:23, :84:34, :88:31
  wire [7:0][64:0] _GEN_0 =
    {{65'h0},
     {{1'h0, ~SignExtA + 64'h1}},
     {{1'h0, ~SignExtA + 64'h1}},
     {{~_SignExtA_T_1, ~io_A, 1'h1} + 65'h1},
     {{_SignExtA_T_1, io_A, 1'h0}},
     {_GEN},
     {_GEN},
     {_GEN}};	// core/src/mul.scala:83:{23,28}, :84:34, :88:31, :89:{22,41}, :90:{22,32}, :91:32
  assign io_S = _GEN_0[io_B][63:0];	// core/src/mul.scala:77:7, :84:{10,34}
endmodule

module csa(	// core/src/mul.scala:96:7
  input  [63:0] io_A,	// core/src/mul.scala:97:16
                io_B,	// core/src/mul.scala:97:16
                io_Cin,	// core/src/mul.scala:97:16
  output [63:0] io_S,	// core/src/mul.scala:97:16
                io_Cout	// core/src/mul.scala:97:16
);

  assign io_S =
    {io_A[63] ^ io_B[63] ^ io_Cin[63],
     io_A[62] ^ io_B[62] ^ io_Cin[62],
     io_A[61] ^ io_B[61] ^ io_Cin[61],
     io_A[60] ^ io_B[60] ^ io_Cin[60],
     io_A[59] ^ io_B[59] ^ io_Cin[59],
     io_A[58] ^ io_B[58] ^ io_Cin[58],
     io_A[57] ^ io_B[57] ^ io_Cin[57],
     io_A[56] ^ io_B[56] ^ io_Cin[56],
     io_A[55] ^ io_B[55] ^ io_Cin[55],
     io_A[54] ^ io_B[54] ^ io_Cin[54],
     io_A[53] ^ io_B[53] ^ io_Cin[53],
     io_A[52] ^ io_B[52] ^ io_Cin[52],
     io_A[51] ^ io_B[51] ^ io_Cin[51],
     io_A[50] ^ io_B[50] ^ io_Cin[50],
     io_A[49] ^ io_B[49] ^ io_Cin[49],
     io_A[48] ^ io_B[48] ^ io_Cin[48],
     io_A[47] ^ io_B[47] ^ io_Cin[47],
     io_A[46] ^ io_B[46] ^ io_Cin[46],
     io_A[45] ^ io_B[45] ^ io_Cin[45],
     io_A[44] ^ io_B[44] ^ io_Cin[44],
     io_A[43] ^ io_B[43] ^ io_Cin[43],
     io_A[42] ^ io_B[42] ^ io_Cin[42],
     io_A[41] ^ io_B[41] ^ io_Cin[41],
     io_A[40] ^ io_B[40] ^ io_Cin[40],
     io_A[39] ^ io_B[39] ^ io_Cin[39],
     io_A[38] ^ io_B[38] ^ io_Cin[38],
     io_A[37] ^ io_B[37] ^ io_Cin[37],
     io_A[36] ^ io_B[36] ^ io_Cin[36],
     io_A[35] ^ io_B[35] ^ io_Cin[35],
     io_A[34] ^ io_B[34] ^ io_Cin[34],
     io_A[33] ^ io_B[33] ^ io_Cin[33],
     io_A[32] ^ io_B[32] ^ io_Cin[32],
     io_A[31] ^ io_B[31] ^ io_Cin[31],
     io_A[30] ^ io_B[30] ^ io_Cin[30],
     io_A[29] ^ io_B[29] ^ io_Cin[29],
     io_A[28] ^ io_B[28] ^ io_Cin[28],
     io_A[27] ^ io_B[27] ^ io_Cin[27],
     io_A[26] ^ io_B[26] ^ io_Cin[26],
     io_A[25] ^ io_B[25] ^ io_Cin[25],
     io_A[24] ^ io_B[24] ^ io_Cin[24],
     io_A[23] ^ io_B[23] ^ io_Cin[23],
     io_A[22] ^ io_B[22] ^ io_Cin[22],
     io_A[21] ^ io_B[21] ^ io_Cin[21],
     io_A[20] ^ io_B[20] ^ io_Cin[20],
     io_A[19] ^ io_B[19] ^ io_Cin[19],
     io_A[18] ^ io_B[18] ^ io_Cin[18],
     io_A[17] ^ io_B[17] ^ io_Cin[17],
     io_A[16] ^ io_B[16] ^ io_Cin[16],
     io_A[15] ^ io_B[15] ^ io_Cin[15],
     io_A[14] ^ io_B[14] ^ io_Cin[14],
     io_A[13] ^ io_B[13] ^ io_Cin[13],
     io_A[12] ^ io_B[12] ^ io_Cin[12],
     io_A[11] ^ io_B[11] ^ io_Cin[11],
     io_A[10] ^ io_B[10] ^ io_Cin[10],
     io_A[9] ^ io_B[9] ^ io_Cin[9],
     io_A[8] ^ io_B[8] ^ io_Cin[8],
     io_A[7] ^ io_B[7] ^ io_Cin[7],
     io_A[6] ^ io_B[6] ^ io_Cin[6],
     io_A[5] ^ io_B[5] ^ io_Cin[5],
     io_A[4] ^ io_B[4] ^ io_Cin[4],
     io_A[3] ^ io_B[3] ^ io_Cin[3],
     io_A[2] ^ io_B[2] ^ io_Cin[2],
     io_A[1] ^ io_B[1] ^ io_Cin[1],
     io_A[0] ^ io_B[0] ^ io_Cin[0]};	// core/src/mul.scala:96:7, :107:{21,31,35,43}, :110:15
  assign io_Cout =
    {io_A[63] & io_B[63] | io_A[63] & io_Cin[63] | io_B[63] & io_Cin[63],
     io_A[62] & io_B[62] | io_A[62] & io_Cin[62] | io_B[62] & io_Cin[62],
     io_A[61] & io_B[61] | io_A[61] & io_Cin[61] | io_B[61] & io_Cin[61],
     io_A[60] & io_B[60] | io_A[60] & io_Cin[60] | io_B[60] & io_Cin[60],
     io_A[59] & io_B[59] | io_A[59] & io_Cin[59] | io_B[59] & io_Cin[59],
     io_A[58] & io_B[58] | io_A[58] & io_Cin[58] | io_B[58] & io_Cin[58],
     io_A[57] & io_B[57] | io_A[57] & io_Cin[57] | io_B[57] & io_Cin[57],
     io_A[56] & io_B[56] | io_A[56] & io_Cin[56] | io_B[56] & io_Cin[56],
     io_A[55] & io_B[55] | io_A[55] & io_Cin[55] | io_B[55] & io_Cin[55],
     io_A[54] & io_B[54] | io_A[54] & io_Cin[54] | io_B[54] & io_Cin[54],
     io_A[53] & io_B[53] | io_A[53] & io_Cin[53] | io_B[53] & io_Cin[53],
     io_A[52] & io_B[52] | io_A[52] & io_Cin[52] | io_B[52] & io_Cin[52],
     io_A[51] & io_B[51] | io_A[51] & io_Cin[51] | io_B[51] & io_Cin[51],
     io_A[50] & io_B[50] | io_A[50] & io_Cin[50] | io_B[50] & io_Cin[50],
     io_A[49] & io_B[49] | io_A[49] & io_Cin[49] | io_B[49] & io_Cin[49],
     io_A[48] & io_B[48] | io_A[48] & io_Cin[48] | io_B[48] & io_Cin[48],
     io_A[47] & io_B[47] | io_A[47] & io_Cin[47] | io_B[47] & io_Cin[47],
     io_A[46] & io_B[46] | io_A[46] & io_Cin[46] | io_B[46] & io_Cin[46],
     io_A[45] & io_B[45] | io_A[45] & io_Cin[45] | io_B[45] & io_Cin[45],
     io_A[44] & io_B[44] | io_A[44] & io_Cin[44] | io_B[44] & io_Cin[44],
     io_A[43] & io_B[43] | io_A[43] & io_Cin[43] | io_B[43] & io_Cin[43],
     io_A[42] & io_B[42] | io_A[42] & io_Cin[42] | io_B[42] & io_Cin[42],
     io_A[41] & io_B[41] | io_A[41] & io_Cin[41] | io_B[41] & io_Cin[41],
     io_A[40] & io_B[40] | io_A[40] & io_Cin[40] | io_B[40] & io_Cin[40],
     io_A[39] & io_B[39] | io_A[39] & io_Cin[39] | io_B[39] & io_Cin[39],
     io_A[38] & io_B[38] | io_A[38] & io_Cin[38] | io_B[38] & io_Cin[38],
     io_A[37] & io_B[37] | io_A[37] & io_Cin[37] | io_B[37] & io_Cin[37],
     io_A[36] & io_B[36] | io_A[36] & io_Cin[36] | io_B[36] & io_Cin[36],
     io_A[35] & io_B[35] | io_A[35] & io_Cin[35] | io_B[35] & io_Cin[35],
     io_A[34] & io_B[34] | io_A[34] & io_Cin[34] | io_B[34] & io_Cin[34],
     io_A[33] & io_B[33] | io_A[33] & io_Cin[33] | io_B[33] & io_Cin[33],
     io_A[32] & io_B[32] | io_A[32] & io_Cin[32] | io_B[32] & io_Cin[32],
     io_A[31] & io_B[31] | io_A[31] & io_Cin[31] | io_B[31] & io_Cin[31],
     io_A[30] & io_B[30] | io_A[30] & io_Cin[30] | io_B[30] & io_Cin[30],
     io_A[29] & io_B[29] | io_A[29] & io_Cin[29] | io_B[29] & io_Cin[29],
     io_A[28] & io_B[28] | io_A[28] & io_Cin[28] | io_B[28] & io_Cin[28],
     io_A[27] & io_B[27] | io_A[27] & io_Cin[27] | io_B[27] & io_Cin[27],
     io_A[26] & io_B[26] | io_A[26] & io_Cin[26] | io_B[26] & io_Cin[26],
     io_A[25] & io_B[25] | io_A[25] & io_Cin[25] | io_B[25] & io_Cin[25],
     io_A[24] & io_B[24] | io_A[24] & io_Cin[24] | io_B[24] & io_Cin[24],
     io_A[23] & io_B[23] | io_A[23] & io_Cin[23] | io_B[23] & io_Cin[23],
     io_A[22] & io_B[22] | io_A[22] & io_Cin[22] | io_B[22] & io_Cin[22],
     io_A[21] & io_B[21] | io_A[21] & io_Cin[21] | io_B[21] & io_Cin[21],
     io_A[20] & io_B[20] | io_A[20] & io_Cin[20] | io_B[20] & io_Cin[20],
     io_A[19] & io_B[19] | io_A[19] & io_Cin[19] | io_B[19] & io_Cin[19],
     io_A[18] & io_B[18] | io_A[18] & io_Cin[18] | io_B[18] & io_Cin[18],
     io_A[17] & io_B[17] | io_A[17] & io_Cin[17] | io_B[17] & io_Cin[17],
     io_A[16] & io_B[16] | io_A[16] & io_Cin[16] | io_B[16] & io_Cin[16],
     io_A[15] & io_B[15] | io_A[15] & io_Cin[15] | io_B[15] & io_Cin[15],
     io_A[14] & io_B[14] | io_A[14] & io_Cin[14] | io_B[14] & io_Cin[14],
     io_A[13] & io_B[13] | io_A[13] & io_Cin[13] | io_B[13] & io_Cin[13],
     io_A[12] & io_B[12] | io_A[12] & io_Cin[12] | io_B[12] & io_Cin[12],
     io_A[11] & io_B[11] | io_A[11] & io_Cin[11] | io_B[11] & io_Cin[11],
     io_A[10] & io_B[10] | io_A[10] & io_Cin[10] | io_B[10] & io_Cin[10],
     io_A[9] & io_B[9] | io_A[9] & io_Cin[9] | io_B[9] & io_Cin[9],
     io_A[8] & io_B[8] | io_A[8] & io_Cin[8] | io_B[8] & io_Cin[8],
     io_A[7] & io_B[7] | io_A[7] & io_Cin[7] | io_B[7] & io_Cin[7],
     io_A[6] & io_B[6] | io_A[6] & io_Cin[6] | io_B[6] & io_Cin[6],
     io_A[5] & io_B[5] | io_A[5] & io_Cin[5] | io_B[5] & io_Cin[5],
     io_A[4] & io_B[4] | io_A[4] & io_Cin[4] | io_B[4] & io_Cin[4],
     io_A[3] & io_B[3] | io_A[3] & io_Cin[3] | io_B[3] & io_Cin[3],
     io_A[2] & io_B[2] | io_A[2] & io_Cin[2] | io_B[2] & io_Cin[2],
     io_A[1] & io_B[1] | io_A[1] & io_Cin[1] | io_B[1] & io_Cin[1],
     io_A[0] & io_B[0] | io_A[0] & io_Cin[0] | io_B[0] & io_Cin[0]};	// core/src/mul.scala:96:7, :107:{21,31,43}, :108:{29,51,64,75}, :111:21
endmodule

module wallace(	// core/src/mul.scala:14:7
  input         clock,	// core/src/mul.scala:14:7
  input  [31:0] io_A,	// core/src/mul.scala:15:16
                io_B,	// core/src/mul.scala:15:16
  output [63:0] io_S	// core/src/mul.scala:15:16
);

  wire [63:0] _csas_0_5_io_S;	// core/src/mul.scala:47:47
  wire [63:0] _csas_0_5_io_Cout;	// core/src/mul.scala:47:47
  wire [63:0] _csas_0_4_io_S;	// core/src/mul.scala:47:47
  wire [63:0] _csas_0_4_io_Cout;	// core/src/mul.scala:47:47
  wire [63:0] _csas_1_3_io_S;	// core/src/mul.scala:47:47
  wire [63:0] _csas_1_3_io_Cout;	// core/src/mul.scala:47:47
  wire [63:0] _csas_0_3_io_S;	// core/src/mul.scala:47:47
  wire [63:0] _csas_0_3_io_Cout;	// core/src/mul.scala:47:47
  wire [63:0] _csas_1_2_io_S;	// core/src/mul.scala:47:47
  wire [63:0] _csas_1_2_io_Cout;	// core/src/mul.scala:47:47
  wire [63:0] _csas_0_2_io_S;	// core/src/mul.scala:47:47
  wire [63:0] _csas_0_2_io_Cout;	// core/src/mul.scala:47:47
  wire [63:0] _csas_2_1_io_S;	// core/src/mul.scala:47:47
  wire [63:0] _csas_2_1_io_Cout;	// core/src/mul.scala:47:47
  wire [63:0] _csas_1_1_io_S;	// core/src/mul.scala:47:47
  wire [63:0] _csas_1_1_io_Cout;	// core/src/mul.scala:47:47
  wire [63:0] _csas_0_1_io_S;	// core/src/mul.scala:47:47
  wire [63:0] _csas_0_1_io_Cout;	// core/src/mul.scala:47:47
  wire [63:0] _csas_4_io_S;	// core/src/mul.scala:47:47
  wire [63:0] _csas_4_io_Cout;	// core/src/mul.scala:47:47
  wire [63:0] _csas_3_io_S;	// core/src/mul.scala:47:47
  wire [63:0] _csas_3_io_Cout;	// core/src/mul.scala:47:47
  wire [63:0] _csas_2_io_S;	// core/src/mul.scala:47:47
  wire [63:0] _csas_2_io_Cout;	// core/src/mul.scala:47:47
  wire [63:0] _csas_1_io_S;	// core/src/mul.scala:47:47
  wire [63:0] _csas_1_io_Cout;	// core/src/mul.scala:47:47
  wire [63:0] _csas_0_io_S;	// core/src/mul.scala:47:47
  wire [63:0] _csas_0_io_Cout;	// core/src/mul.scala:47:47
  wire [63:0] _booths_15_io_S;	// core/src/mul.scala:23:40
  wire [63:0] _booths_14_io_S;	// core/src/mul.scala:23:40
  wire [63:0] _booths_13_io_S;	// core/src/mul.scala:23:40
  wire [63:0] _booths_12_io_S;	// core/src/mul.scala:23:40
  wire [63:0] _booths_11_io_S;	// core/src/mul.scala:23:40
  wire [63:0] _booths_10_io_S;	// core/src/mul.scala:23:40
  wire [63:0] _booths_9_io_S;	// core/src/mul.scala:23:40
  wire [63:0] _booths_8_io_S;	// core/src/mul.scala:23:40
  wire [63:0] _booths_7_io_S;	// core/src/mul.scala:23:40
  wire [63:0] _booths_6_io_S;	// core/src/mul.scala:23:40
  wire [63:0] _booths_5_io_S;	// core/src/mul.scala:23:40
  wire [63:0] _booths_4_io_S;	// core/src/mul.scala:23:40
  wire [63:0] _booths_3_io_S;	// core/src/mul.scala:23:40
  wire [63:0] _booths_2_io_S;	// core/src/mul.scala:23:40
  wire [63:0] _booths_1_io_S;	// core/src/mul.scala:23:40
  wire [63:0] _booths_0_io_S;	// core/src/mul.scala:23:40
  reg  [63:0] output_0;	// core/src/mul.scala:22:21
  reg  [63:0] output_1;	// core/src/mul.scala:22:21
  reg  [63:0] output_2;	// core/src/mul.scala:22:21
  reg  [63:0] output_3;	// core/src/mul.scala:22:21
  reg  [63:0] output_4;	// core/src/mul.scala:22:21
  reg  [63:0] output_5;	// core/src/mul.scala:22:21
  reg  [63:0] output_6;	// core/src/mul.scala:22:21
  reg  [63:0] output_7;	// core/src/mul.scala:22:21
  reg  [63:0] output_8;	// core/src/mul.scala:22:21
  reg  [63:0] output_9;	// core/src/mul.scala:22:21
  reg  [63:0] output_10;	// core/src/mul.scala:22:21
  reg  [63:0] output_11;	// core/src/mul.scala:22:21
  reg  [63:0] output_12;	// core/src/mul.scala:22:21
  reg  [63:0] output_13;	// core/src/mul.scala:22:21
  reg  [63:0] output_14;	// core/src/mul.scala:22:21
  reg  [63:0] output_15;	// core/src/mul.scala:22:21
  reg  [63:0] ma;	// core/src/mul.scala:39:17
  reg  [63:0] mb;	// core/src/mul.scala:40:17
  reg  [63:0] S;	// core/src/mul.scala:71:16
  always @(posedge clock) begin	// core/src/mul.scala:14:7
    output_0 <= _booths_0_io_S;	// core/src/mul.scala:22:21, :23:40
    output_1 <= {_booths_1_io_S[61:0], 2'h0};	// core/src/mul.scala:22:21, :23:40, :33:{19,37}
    output_2 <= {_booths_2_io_S[59:0], 4'h0};	// core/src/mul.scala:22:21, :23:40, :33:{19,37}
    output_3 <= {_booths_3_io_S[57:0], 6'h0};	// core/src/mul.scala:14:7, :22:21, :23:40, :33:19
    output_4 <= {_booths_4_io_S[55:0], 8'h0};	// core/src/mul.scala:22:21, :23:40, :33:{19,37}
    output_5 <= {_booths_5_io_S[53:0], 10'h0};	// core/src/mul.scala:22:21, :23:40, :33:{19,37}
    output_6 <= {_booths_6_io_S[51:0], 12'h0};	// core/src/mul.scala:22:21, :23:40, :33:{19,37}
    output_7 <= {_booths_7_io_S[49:0], 14'h0};	// core/src/mul.scala:22:21, :23:40, :33:{19,37}
    output_8 <= {_booths_8_io_S[47:0], 16'h0};	// core/src/mul.scala:22:21, :23:40, :33:{19,37}
    output_9 <= {_booths_9_io_S[45:0], 18'h0};	// core/src/mul.scala:22:21, :23:40, :33:{19,37}
    output_10 <= {_booths_10_io_S[43:0], 20'h0};	// core/src/mul.scala:22:21, :23:40, :33:{19,37}
    output_11 <= {_booths_11_io_S[41:0], 22'h0};	// core/src/mul.scala:22:21, :23:40, :33:{19,37}
    output_12 <= {_booths_12_io_S[39:0], 24'h0};	// core/src/mul.scala:22:21, :23:40, :33:{19,37}
    output_13 <= {_booths_13_io_S[37:0], 26'h0};	// core/src/mul.scala:22:21, :23:40, :33:{19,37}
    output_14 <= {_booths_14_io_S[35:0], 28'h0};	// core/src/mul.scala:22:21, :23:40, :33:{19,37}
    output_15 <= {_booths_15_io_S[33:0], 30'h0};	// core/src/mul.scala:22:21, :23:40, :33:{19,37}
    ma <= _csas_0_5_io_S;	// core/src/mul.scala:39:17, :47:47
    mb <= {_csas_0_5_io_Cout[62:0], 1'h0};	// core/src/mul.scala:30:30, :40:17, :47:47, :55:34
    S <= ma + mb;	// core/src/mul.scala:39:17, :40:17, :71:16, :72:13
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/mul.scala:14:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/mul.scala:14:7
      `FIRRTL_BEFORE_INITIAL	// core/src/mul.scala:14:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/mul.scala:14:7
      automatic logic [31:0] _RANDOM[0:37];	// core/src/mul.scala:14:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/mul.scala:14:7
        `INIT_RANDOM_PROLOG_	// core/src/mul.scala:14:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/mul.scala:14:7
        for (logic [5:0] i = 6'h0; i < 6'h26; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;	// core/src/mul.scala:14:7
        end	// core/src/mul.scala:14:7
        output_0 = {_RANDOM[6'h0], _RANDOM[6'h1]};	// core/src/mul.scala:14:7, :22:21
        output_1 = {_RANDOM[6'h2], _RANDOM[6'h3]};	// core/src/mul.scala:14:7, :22:21
        output_2 = {_RANDOM[6'h4], _RANDOM[6'h5]};	// core/src/mul.scala:14:7, :22:21
        output_3 = {_RANDOM[6'h6], _RANDOM[6'h7]};	// core/src/mul.scala:14:7, :22:21
        output_4 = {_RANDOM[6'h8], _RANDOM[6'h9]};	// core/src/mul.scala:14:7, :22:21
        output_5 = {_RANDOM[6'hA], _RANDOM[6'hB]};	// core/src/mul.scala:14:7, :22:21
        output_6 = {_RANDOM[6'hC], _RANDOM[6'hD]};	// core/src/mul.scala:14:7, :22:21
        output_7 = {_RANDOM[6'hE], _RANDOM[6'hF]};	// core/src/mul.scala:14:7, :22:21
        output_8 = {_RANDOM[6'h10], _RANDOM[6'h11]};	// core/src/mul.scala:14:7, :22:21
        output_9 = {_RANDOM[6'h12], _RANDOM[6'h13]};	// core/src/mul.scala:14:7, :22:21
        output_10 = {_RANDOM[6'h14], _RANDOM[6'h15]};	// core/src/mul.scala:14:7, :22:21
        output_11 = {_RANDOM[6'h16], _RANDOM[6'h17]};	// core/src/mul.scala:14:7, :22:21
        output_12 = {_RANDOM[6'h18], _RANDOM[6'h19]};	// core/src/mul.scala:14:7, :22:21
        output_13 = {_RANDOM[6'h1A], _RANDOM[6'h1B]};	// core/src/mul.scala:14:7, :22:21
        output_14 = {_RANDOM[6'h1C], _RANDOM[6'h1D]};	// core/src/mul.scala:14:7, :22:21
        output_15 = {_RANDOM[6'h1E], _RANDOM[6'h1F]};	// core/src/mul.scala:14:7, :22:21
        ma = {_RANDOM[6'h20], _RANDOM[6'h21]};	// core/src/mul.scala:14:7, :39:17
        mb = {_RANDOM[6'h22], _RANDOM[6'h23]};	// core/src/mul.scala:14:7, :40:17
        S = {_RANDOM[6'h24], _RANDOM[6'h25]};	// core/src/mul.scala:14:7, :71:16
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/mul.scala:14:7
      `FIRRTL_AFTER_INITIAL	// core/src/mul.scala:14:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  booth2 booths_0 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B ({io_B[1:0], 1'h0}),	// core/src/mul.scala:30:{30,35}
    .io_S (_booths_0_io_S)
  );
  booth2 booths_1 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B (io_B[3:1]),	// core/src/mul.scala:26:41
    .io_S (_booths_1_io_S)
  );
  booth2 booths_2 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B (io_B[5:3]),	// core/src/mul.scala:26:41
    .io_S (_booths_2_io_S)
  );
  booth2 booths_3 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B (io_B[7:5]),	// core/src/mul.scala:26:41
    .io_S (_booths_3_io_S)
  );
  booth2 booths_4 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B (io_B[9:7]),	// core/src/mul.scala:26:41
    .io_S (_booths_4_io_S)
  );
  booth2 booths_5 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B (io_B[11:9]),	// core/src/mul.scala:26:41
    .io_S (_booths_5_io_S)
  );
  booth2 booths_6 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B (io_B[13:11]),	// core/src/mul.scala:26:41
    .io_S (_booths_6_io_S)
  );
  booth2 booths_7 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B (io_B[15:13]),	// core/src/mul.scala:26:41
    .io_S (_booths_7_io_S)
  );
  booth2 booths_8 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B (io_B[17:15]),	// core/src/mul.scala:26:41
    .io_S (_booths_8_io_S)
  );
  booth2 booths_9 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B (io_B[19:17]),	// core/src/mul.scala:26:41
    .io_S (_booths_9_io_S)
  );
  booth2 booths_10 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B (io_B[21:19]),	// core/src/mul.scala:26:41
    .io_S (_booths_10_io_S)
  );
  booth2 booths_11 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B (io_B[23:21]),	// core/src/mul.scala:26:41
    .io_S (_booths_11_io_S)
  );
  booth2 booths_12 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B (io_B[25:23]),	// core/src/mul.scala:26:41
    .io_S (_booths_12_io_S)
  );
  booth2 booths_13 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B (io_B[27:25]),	// core/src/mul.scala:26:41
    .io_S (_booths_13_io_S)
  );
  booth2 booths_14 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B (io_B[29:27]),	// core/src/mul.scala:26:41
    .io_S (_booths_14_io_S)
  );
  booth2 booths_15 (	// core/src/mul.scala:23:40
    .io_A (io_A),
    .io_B (io_B[31:29]),	// core/src/mul.scala:26:41
    .io_S (_booths_15_io_S)
  );
  csa csas_0 (	// core/src/mul.scala:47:47
    .io_A    (output_0),	// core/src/mul.scala:22:21
    .io_B    (output_1),	// core/src/mul.scala:22:21
    .io_Cin  (output_2),	// core/src/mul.scala:22:21
    .io_S    (_csas_0_io_S),
    .io_Cout (_csas_0_io_Cout)
  );
  csa csas_1 (	// core/src/mul.scala:47:47
    .io_A    (output_3),	// core/src/mul.scala:22:21
    .io_B    (output_4),	// core/src/mul.scala:22:21
    .io_Cin  (output_5),	// core/src/mul.scala:22:21
    .io_S    (_csas_1_io_S),
    .io_Cout (_csas_1_io_Cout)
  );
  csa csas_2 (	// core/src/mul.scala:47:47
    .io_A    (output_6),	// core/src/mul.scala:22:21
    .io_B    (output_7),	// core/src/mul.scala:22:21
    .io_Cin  (output_8),	// core/src/mul.scala:22:21
    .io_S    (_csas_2_io_S),
    .io_Cout (_csas_2_io_Cout)
  );
  csa csas_3 (	// core/src/mul.scala:47:47
    .io_A    (output_9),	// core/src/mul.scala:22:21
    .io_B    (output_10),	// core/src/mul.scala:22:21
    .io_Cin  (output_11),	// core/src/mul.scala:22:21
    .io_S    (_csas_3_io_S),
    .io_Cout (_csas_3_io_Cout)
  );
  csa csas_4 (	// core/src/mul.scala:47:47
    .io_A    (output_12),	// core/src/mul.scala:22:21
    .io_B    (output_13),	// core/src/mul.scala:22:21
    .io_Cin  (output_14),	// core/src/mul.scala:22:21
    .io_S    (_csas_4_io_S),
    .io_Cout (_csas_4_io_Cout)
  );
  csa csas_0_1 (	// core/src/mul.scala:47:47
    .io_A    (_csas_0_io_S),	// core/src/mul.scala:47:47
    .io_B    ({_csas_0_io_Cout[62:0], 1'h0}),	// core/src/mul.scala:30:30, :47:47, :55:34
    .io_Cin  (_csas_1_io_S),	// core/src/mul.scala:47:47
    .io_S    (_csas_0_1_io_S),
    .io_Cout (_csas_0_1_io_Cout)
  );
  csa csas_1_1 (	// core/src/mul.scala:47:47
    .io_A    ({_csas_1_io_Cout[62:0], 1'h0}),	// core/src/mul.scala:30:30, :47:47, :55:34
    .io_B    (_csas_2_io_S),	// core/src/mul.scala:47:47
    .io_Cin  ({_csas_2_io_Cout[62:0], 1'h0}),	// core/src/mul.scala:30:30, :47:47, :55:34
    .io_S    (_csas_1_1_io_S),
    .io_Cout (_csas_1_1_io_Cout)
  );
  csa csas_2_1 (	// core/src/mul.scala:47:47
    .io_A    (_csas_3_io_S),	// core/src/mul.scala:47:47
    .io_B    ({_csas_3_io_Cout[62:0], 1'h0}),	// core/src/mul.scala:30:30, :47:47, :55:34
    .io_Cin  (_csas_4_io_S),	// core/src/mul.scala:47:47
    .io_S    (_csas_2_1_io_S),
    .io_Cout (_csas_2_1_io_Cout)
  );
  csa csas_0_2 (	// core/src/mul.scala:47:47
    .io_A    (_csas_0_1_io_S),	// core/src/mul.scala:47:47
    .io_B    ({_csas_0_1_io_Cout[62:0], 1'h0}),	// core/src/mul.scala:30:30, :47:47, :55:34
    .io_Cin  (_csas_1_1_io_S),	// core/src/mul.scala:47:47
    .io_S    (_csas_0_2_io_S),
    .io_Cout (_csas_0_2_io_Cout)
  );
  csa csas_1_2 (	// core/src/mul.scala:47:47
    .io_A    ({_csas_1_1_io_Cout[62:0], 1'h0}),	// core/src/mul.scala:30:30, :47:47, :55:34
    .io_B    (_csas_2_1_io_S),	// core/src/mul.scala:47:47
    .io_Cin  ({_csas_2_1_io_Cout[62:0], 1'h0}),	// core/src/mul.scala:30:30, :47:47, :55:34
    .io_S    (_csas_1_2_io_S),
    .io_Cout (_csas_1_2_io_Cout)
  );
  csa csas_0_3 (	// core/src/mul.scala:47:47
    .io_A    (_csas_0_2_io_S),	// core/src/mul.scala:47:47
    .io_B    ({_csas_0_2_io_Cout[62:0], 1'h0}),	// core/src/mul.scala:30:30, :47:47, :55:34
    .io_Cin  (_csas_1_2_io_S),	// core/src/mul.scala:47:47
    .io_S    (_csas_0_3_io_S),
    .io_Cout (_csas_0_3_io_Cout)
  );
  csa csas_1_3 (	// core/src/mul.scala:47:47
    .io_A    ({_csas_1_2_io_Cout[62:0], 1'h0}),	// core/src/mul.scala:30:30, :47:47, :55:34
    .io_B    ({_csas_4_io_Cout[62:0], 1'h0}),	// core/src/mul.scala:30:30, :47:47, :55:34
    .io_Cin  (output_15),	// core/src/mul.scala:22:21
    .io_S    (_csas_1_3_io_S),
    .io_Cout (_csas_1_3_io_Cout)
  );
  csa csas_0_4 (	// core/src/mul.scala:47:47
    .io_A    (_csas_0_3_io_S),	// core/src/mul.scala:47:47
    .io_B    ({_csas_0_3_io_Cout[62:0], 1'h0}),	// core/src/mul.scala:30:30, :47:47, :55:34
    .io_Cin  (_csas_1_3_io_S),	// core/src/mul.scala:47:47
    .io_S    (_csas_0_4_io_S),
    .io_Cout (_csas_0_4_io_Cout)
  );
  csa csas_0_5 (	// core/src/mul.scala:47:47
    .io_A    (_csas_0_4_io_S),	// core/src/mul.scala:47:47
    .io_B    ({_csas_0_4_io_Cout[62:0], 1'h0}),	// core/src/mul.scala:30:30, :47:47, :55:34
    .io_Cin  ({_csas_1_3_io_Cout[62:0], 1'h0}),	// core/src/mul.scala:30:30, :47:47, :55:34
    .io_S    (_csas_0_5_io_S),
    .io_Cout (_csas_0_5_io_Cout)
  );
  assign io_S = S;	// core/src/mul.scala:14:7, :71:16
endmodule

module bshifter(	// core/src/exu.scala:122:7
  input  [31:0] io_A,	// core/src/exu.scala:123:16
  input  [4:0]  io_B,	// core/src/exu.scala:123:16
  input  [3:0]  io_Op,	// core/src/exu.scala:123:16
  output [31:0] io_Out	// core/src/exu.scala:123:16
);

  wire _GEN = io_Op != 4'h8;	// core/src/exu.scala:136:53
  wire Shifter_1_0 =
    io_B[0] ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[1] : _GEN & io_A[0]) : io_A[0];	// core/src/exu.scala:131:24, :135:{37,43}, :136:53
  wire Shifter_1_1 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[2] : io_Op == 4'h8 ? io_A[0] : io_A[1])
      : io_A[1];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_2 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[3] : io_Op == 4'h8 ? io_A[1] : io_A[2])
      : io_A[2];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_3 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[4] : io_Op == 4'h8 ? io_A[2] : io_A[3])
      : io_A[3];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_4 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[5] : io_Op == 4'h8 ? io_A[3] : io_A[4])
      : io_A[4];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_5 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[6] : io_Op == 4'h8 ? io_A[4] : io_A[5])
      : io_A[5];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_6 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[7] : io_Op == 4'h8 ? io_A[5] : io_A[6])
      : io_A[6];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_7 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[8] : io_Op == 4'h8 ? io_A[6] : io_A[7])
      : io_A[7];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_8 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[9] : io_Op == 4'h8 ? io_A[7] : io_A[8])
      : io_A[8];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_9 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[10] : io_Op == 4'h8 ? io_A[8] : io_A[9])
      : io_A[9];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_10 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[11] : io_Op == 4'h8 ? io_A[9] : io_A[10])
      : io_A[10];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_11 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[12] : io_Op == 4'h8 ? io_A[10] : io_A[11])
      : io_A[11];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_12 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[13] : io_Op == 4'h8 ? io_A[11] : io_A[12])
      : io_A[12];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_13 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[14] : io_Op == 4'h8 ? io_A[12] : io_A[13])
      : io_A[13];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_14 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[15] : io_Op == 4'h8 ? io_A[13] : io_A[14])
      : io_A[14];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_15 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[16] : io_Op == 4'h8 ? io_A[14] : io_A[15])
      : io_A[15];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_16 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[17] : io_Op == 4'h8 ? io_A[15] : io_A[16])
      : io_A[16];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_17 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[18] : io_Op == 4'h8 ? io_A[16] : io_A[17])
      : io_A[17];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_18 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[19] : io_Op == 4'h8 ? io_A[17] : io_A[18])
      : io_A[18];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_19 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[20] : io_Op == 4'h8 ? io_A[18] : io_A[19])
      : io_A[19];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_20 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[21] : io_Op == 4'h8 ? io_A[19] : io_A[20])
      : io_A[20];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_21 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[22] : io_Op == 4'h8 ? io_A[20] : io_A[21])
      : io_A[21];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_22 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[23] : io_Op == 4'h8 ? io_A[21] : io_A[22])
      : io_A[22];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_23 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[24] : io_Op == 4'h8 ? io_A[22] : io_A[23])
      : io_A[23];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_24 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[25] : io_Op == 4'h8 ? io_A[23] : io_A[24])
      : io_A[24];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_25 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[26] : io_Op == 4'h8 ? io_A[24] : io_A[25])
      : io_A[25];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_26 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[27] : io_Op == 4'h8 ? io_A[25] : io_A[26])
      : io_A[26];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_27 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[28] : io_Op == 4'h8 ? io_A[26] : io_A[27])
      : io_A[27];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_28 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[29] : io_Op == 4'h8 ? io_A[27] : io_A[28])
      : io_A[28];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_29 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[30] : io_Op == 4'h8 ? io_A[28] : io_A[29])
      : io_A[29];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire Shifter_1_30 =
    io_B[0]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? io_A[31] : io_Op == 4'h8 ? io_A[29] : io_A[30])
      : io_A[30];	// core/src/exu.scala:131:24, :135:43, :136:53, :151:37, :152:53
  wire _GEN_0 = io_Op != 4'h9;	// core/src/exu.scala:136:53, :144:53
  wire Shifter_1_31 =
    ~(io_B[0]) | io_Op == 4'hA
      ? io_A[31]
      : _GEN_0 & (io_Op == 4'h8 ? io_A[30] : io_A[31]);	// core/src/exu.scala:131:24, :135:43, :136:53, :143:37, :144:53
  wire Shifter_2_0 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_1_2 : _GEN & Shifter_1_0)
      : Shifter_1_0;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37
  wire Shifter_2_1 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_1_3 : _GEN & Shifter_1_1)
      : Shifter_1_1;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37
  wire Shifter_2_2 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_4
           : io_Op == 4'h8 ? Shifter_1_0 : Shifter_1_2)
      : Shifter_1_2;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37, :152:53
  wire Shifter_2_3 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_5
           : io_Op == 4'h8 ? Shifter_1_1 : Shifter_1_3)
      : Shifter_1_3;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_4 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_6
           : io_Op == 4'h8 ? Shifter_1_2 : Shifter_1_4)
      : Shifter_1_4;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_5 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_7
           : io_Op == 4'h8 ? Shifter_1_3 : Shifter_1_5)
      : Shifter_1_5;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_6 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_8
           : io_Op == 4'h8 ? Shifter_1_4 : Shifter_1_6)
      : Shifter_1_6;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_7 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_9
           : io_Op == 4'h8 ? Shifter_1_5 : Shifter_1_7)
      : Shifter_1_7;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_8 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_10
           : io_Op == 4'h8 ? Shifter_1_6 : Shifter_1_8)
      : Shifter_1_8;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_9 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_11
           : io_Op == 4'h8 ? Shifter_1_7 : Shifter_1_9)
      : Shifter_1_9;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_10 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_12
           : io_Op == 4'h8 ? Shifter_1_8 : Shifter_1_10)
      : Shifter_1_10;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_11 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_13
           : io_Op == 4'h8 ? Shifter_1_9 : Shifter_1_11)
      : Shifter_1_11;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_12 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_14
           : io_Op == 4'h8 ? Shifter_1_10 : Shifter_1_12)
      : Shifter_1_12;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_13 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_15
           : io_Op == 4'h8 ? Shifter_1_11 : Shifter_1_13)
      : Shifter_1_13;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_14 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_16
           : io_Op == 4'h8 ? Shifter_1_12 : Shifter_1_14)
      : Shifter_1_14;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_15 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_17
           : io_Op == 4'h8 ? Shifter_1_13 : Shifter_1_15)
      : Shifter_1_15;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_16 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_18
           : io_Op == 4'h8 ? Shifter_1_14 : Shifter_1_16)
      : Shifter_1_16;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_17 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_19
           : io_Op == 4'h8 ? Shifter_1_15 : Shifter_1_17)
      : Shifter_1_17;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_18 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_20
           : io_Op == 4'h8 ? Shifter_1_16 : Shifter_1_18)
      : Shifter_1_18;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_19 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_21
           : io_Op == 4'h8 ? Shifter_1_17 : Shifter_1_19)
      : Shifter_1_19;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_20 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_22
           : io_Op == 4'h8 ? Shifter_1_18 : Shifter_1_20)
      : Shifter_1_20;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_21 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_23
           : io_Op == 4'h8 ? Shifter_1_19 : Shifter_1_21)
      : Shifter_1_21;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_22 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_24
           : io_Op == 4'h8 ? Shifter_1_20 : Shifter_1_22)
      : Shifter_1_22;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_23 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_25
           : io_Op == 4'h8 ? Shifter_1_21 : Shifter_1_23)
      : Shifter_1_23;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_24 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_26
           : io_Op == 4'h8 ? Shifter_1_22 : Shifter_1_24)
      : Shifter_1_24;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_25 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_27
           : io_Op == 4'h8 ? Shifter_1_23 : Shifter_1_25)
      : Shifter_1_25;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_26 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_28
           : io_Op == 4'h8 ? Shifter_1_24 : Shifter_1_26)
      : Shifter_1_26;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_27 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_29
           : io_Op == 4'h8 ? Shifter_1_25 : Shifter_1_27)
      : Shifter_1_27;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_28 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_30
           : io_Op == 4'h8 ? Shifter_1_26 : Shifter_1_28)
      : Shifter_1_28;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_2_29 =
    io_B[1]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_1_31
           : io_Op == 4'h8 ? Shifter_1_27 : Shifter_1_29)
      : Shifter_1_29;	// core/src/exu.scala:135:43, :136:53, :143:37, :151:37, :152:53
  wire Shifter_2_30 =
    io_B[1]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_1_28 : Shifter_1_30))
      : Shifter_1_30;	// core/src/exu.scala:131:24, :135:43, :136:53, :143:37, :144:53, :151:37
  wire Shifter_2_31 =
    io_B[1]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_1_29 : Shifter_1_31))
      : Shifter_1_31;	// core/src/exu.scala:131:24, :135:43, :136:53, :143:37, :144:53, :151:37
  wire Shifter_3_0 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_2_4 : _GEN & Shifter_2_0)
      : Shifter_2_0;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37
  wire Shifter_3_1 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_2_5 : _GEN & Shifter_2_1)
      : Shifter_2_1;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37
  wire Shifter_3_2 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_2_6 : _GEN & Shifter_2_2)
      : Shifter_2_2;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37
  wire Shifter_3_3 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_2_7 : _GEN & Shifter_2_3)
      : Shifter_2_3;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37
  wire Shifter_3_4 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_8
           : io_Op == 4'h8 ? Shifter_2_0 : Shifter_2_4)
      : Shifter_2_4;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37, :152:53
  wire Shifter_3_5 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_9
           : io_Op == 4'h8 ? Shifter_2_1 : Shifter_2_5)
      : Shifter_2_5;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37, :152:53
  wire Shifter_3_6 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_10
           : io_Op == 4'h8 ? Shifter_2_2 : Shifter_2_6)
      : Shifter_2_6;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_7 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_11
           : io_Op == 4'h8 ? Shifter_2_3 : Shifter_2_7)
      : Shifter_2_7;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_8 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_12
           : io_Op == 4'h8 ? Shifter_2_4 : Shifter_2_8)
      : Shifter_2_8;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_9 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_13
           : io_Op == 4'h8 ? Shifter_2_5 : Shifter_2_9)
      : Shifter_2_9;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_10 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_14
           : io_Op == 4'h8 ? Shifter_2_6 : Shifter_2_10)
      : Shifter_2_10;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_11 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_15
           : io_Op == 4'h8 ? Shifter_2_7 : Shifter_2_11)
      : Shifter_2_11;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_12 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_16
           : io_Op == 4'h8 ? Shifter_2_8 : Shifter_2_12)
      : Shifter_2_12;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_13 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_17
           : io_Op == 4'h8 ? Shifter_2_9 : Shifter_2_13)
      : Shifter_2_13;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_14 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_18
           : io_Op == 4'h8 ? Shifter_2_10 : Shifter_2_14)
      : Shifter_2_14;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_15 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_19
           : io_Op == 4'h8 ? Shifter_2_11 : Shifter_2_15)
      : Shifter_2_15;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_16 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_20
           : io_Op == 4'h8 ? Shifter_2_12 : Shifter_2_16)
      : Shifter_2_16;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_17 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_21
           : io_Op == 4'h8 ? Shifter_2_13 : Shifter_2_17)
      : Shifter_2_17;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_18 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_22
           : io_Op == 4'h8 ? Shifter_2_14 : Shifter_2_18)
      : Shifter_2_18;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_19 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_23
           : io_Op == 4'h8 ? Shifter_2_15 : Shifter_2_19)
      : Shifter_2_19;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_20 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_24
           : io_Op == 4'h8 ? Shifter_2_16 : Shifter_2_20)
      : Shifter_2_20;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_21 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_25
           : io_Op == 4'h8 ? Shifter_2_17 : Shifter_2_21)
      : Shifter_2_21;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_22 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_26
           : io_Op == 4'h8 ? Shifter_2_18 : Shifter_2_22)
      : Shifter_2_22;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_23 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_27
           : io_Op == 4'h8 ? Shifter_2_19 : Shifter_2_23)
      : Shifter_2_23;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_24 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_28
           : io_Op == 4'h8 ? Shifter_2_20 : Shifter_2_24)
      : Shifter_2_24;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_25 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_29
           : io_Op == 4'h8 ? Shifter_2_21 : Shifter_2_25)
      : Shifter_2_25;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_3_26 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_30
           : io_Op == 4'h8 ? Shifter_2_22 : Shifter_2_26)
      : Shifter_2_26;	// core/src/exu.scala:135:43, :136:53, :143:37, :151:37, :152:53
  wire Shifter_3_27 =
    io_B[2]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_2_31
           : io_Op == 4'h8 ? Shifter_2_23 : Shifter_2_27)
      : Shifter_2_27;	// core/src/exu.scala:135:43, :136:53, :143:37, :151:37, :152:53
  wire Shifter_3_28 =
    io_B[2]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_2_24 : Shifter_2_28))
      : Shifter_2_28;	// core/src/exu.scala:131:24, :135:43, :136:53, :143:37, :144:53, :151:37
  wire Shifter_3_29 =
    io_B[2]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_2_25 : Shifter_2_29))
      : Shifter_2_29;	// core/src/exu.scala:131:24, :135:43, :136:53, :143:37, :144:53, :151:37
  wire Shifter_3_30 =
    io_B[2]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_2_26 : Shifter_2_30))
      : Shifter_2_30;	// core/src/exu.scala:131:24, :135:43, :136:53, :143:37, :144:53, :151:37
  wire Shifter_3_31 =
    io_B[2]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_2_27 : Shifter_2_31))
      : Shifter_2_31;	// core/src/exu.scala:131:24, :135:43, :136:53, :143:37, :144:53, :151:37
  wire Shifter_4_0 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_8 : _GEN & Shifter_3_0)
      : Shifter_3_0;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37
  wire Shifter_4_1 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_9 : _GEN & Shifter_3_1)
      : Shifter_3_1;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37
  wire Shifter_4_2 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_10 : _GEN & Shifter_3_2)
      : Shifter_3_2;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37
  wire Shifter_4_3 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_11 : _GEN & Shifter_3_3)
      : Shifter_3_3;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37
  wire Shifter_4_4 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_12 : _GEN & Shifter_3_4)
      : Shifter_3_4;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37
  wire Shifter_4_5 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_13 : _GEN & Shifter_3_5)
      : Shifter_3_5;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37
  wire Shifter_4_6 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_14 : _GEN & Shifter_3_6)
      : Shifter_3_6;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37
  wire Shifter_4_7 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_3_15 : _GEN & Shifter_3_7)
      : Shifter_3_7;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37
  wire Shifter_4_8 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_16
           : io_Op == 4'h8 ? Shifter_3_0 : Shifter_3_8)
      : Shifter_3_8;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37, :152:53
  wire Shifter_4_9 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_17
           : io_Op == 4'h8 ? Shifter_3_1 : Shifter_3_9)
      : Shifter_3_9;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37, :152:53
  wire Shifter_4_10 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_18
           : io_Op == 4'h8 ? Shifter_3_2 : Shifter_3_10)
      : Shifter_3_10;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37, :152:53
  wire Shifter_4_11 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_19
           : io_Op == 4'h8 ? Shifter_3_3 : Shifter_3_11)
      : Shifter_3_11;	// core/src/exu.scala:135:{37,43}, :136:53, :151:37, :152:53
  wire Shifter_4_12 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_20
           : io_Op == 4'h8 ? Shifter_3_4 : Shifter_3_12)
      : Shifter_3_12;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_4_13 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_21
           : io_Op == 4'h8 ? Shifter_3_5 : Shifter_3_13)
      : Shifter_3_13;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_4_14 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_22
           : io_Op == 4'h8 ? Shifter_3_6 : Shifter_3_14)
      : Shifter_3_14;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_4_15 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_23
           : io_Op == 4'h8 ? Shifter_3_7 : Shifter_3_15)
      : Shifter_3_15;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_4_16 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_24
           : io_Op == 4'h8 ? Shifter_3_8 : Shifter_3_16)
      : Shifter_3_16;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_4_17 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_25
           : io_Op == 4'h8 ? Shifter_3_9 : Shifter_3_17)
      : Shifter_3_17;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_4_18 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_26
           : io_Op == 4'h8 ? Shifter_3_10 : Shifter_3_18)
      : Shifter_3_18;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_4_19 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_27
           : io_Op == 4'h8 ? Shifter_3_11 : Shifter_3_19)
      : Shifter_3_19;	// core/src/exu.scala:135:43, :136:53, :151:37, :152:53
  wire Shifter_4_20 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_28
           : io_Op == 4'h8 ? Shifter_3_12 : Shifter_3_20)
      : Shifter_3_20;	// core/src/exu.scala:135:43, :136:53, :143:37, :151:37, :152:53
  wire Shifter_4_21 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_29
           : io_Op == 4'h8 ? Shifter_3_13 : Shifter_3_21)
      : Shifter_3_21;	// core/src/exu.scala:135:43, :136:53, :143:37, :151:37, :152:53
  wire Shifter_4_22 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_30
           : io_Op == 4'h8 ? Shifter_3_14 : Shifter_3_22)
      : Shifter_3_22;	// core/src/exu.scala:135:43, :136:53, :143:37, :151:37, :152:53
  wire Shifter_4_23 =
    io_B[3]
      ? (io_Op == 4'hA | io_Op == 4'h9
           ? Shifter_3_31
           : io_Op == 4'h8 ? Shifter_3_15 : Shifter_3_23)
      : Shifter_3_23;	// core/src/exu.scala:135:43, :136:53, :143:37, :151:37, :152:53
  wire Shifter_4_24 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_16 : Shifter_3_24))
      : Shifter_3_24;	// core/src/exu.scala:131:24, :135:43, :136:53, :143:37, :144:53, :151:37
  wire Shifter_4_25 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_17 : Shifter_3_25))
      : Shifter_3_25;	// core/src/exu.scala:131:24, :135:43, :136:53, :143:37, :144:53, :151:37
  wire Shifter_4_26 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_18 : Shifter_3_26))
      : Shifter_3_26;	// core/src/exu.scala:131:24, :135:43, :136:53, :143:37, :144:53, :151:37
  wire Shifter_4_27 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_19 : Shifter_3_27))
      : Shifter_3_27;	// core/src/exu.scala:131:24, :135:43, :136:53, :143:37, :144:53, :151:37
  wire Shifter_4_28 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_20 : Shifter_3_28))
      : Shifter_3_28;	// core/src/exu.scala:131:24, :135:43, :136:53, :143:37, :144:53, :151:37
  wire Shifter_4_29 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_21 : Shifter_3_29))
      : Shifter_3_29;	// core/src/exu.scala:131:24, :135:43, :136:53, :143:37, :144:53, :151:37
  wire Shifter_4_30 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_22 : Shifter_3_30))
      : Shifter_3_30;	// core/src/exu.scala:131:24, :135:43, :136:53, :143:37, :144:53, :151:37
  wire Shifter_4_31 =
    io_B[3]
      ? (io_Op == 4'hA
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'h8 ? Shifter_3_23 : Shifter_3_31))
      : Shifter_3_31;	// core/src/exu.scala:131:24, :135:43, :136:53, :143:37, :144:53, :151:37
  assign io_Out =
    {io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_15 : Shifter_4_31))
       : Shifter_4_31,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_14 : Shifter_4_30))
       : Shifter_4_30,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_13 : Shifter_4_29))
       : Shifter_4_29,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_12 : Shifter_4_28))
       : Shifter_4_28,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_11 : Shifter_4_27))
       : Shifter_4_27,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_10 : Shifter_4_26))
       : Shifter_4_26,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_9 : Shifter_4_25))
       : Shifter_4_25,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_8 : Shifter_4_24))
       : Shifter_4_24,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_7 : Shifter_4_23))
       : Shifter_4_23,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_6 : Shifter_4_22))
       : Shifter_4_22,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_5 : Shifter_4_21))
       : Shifter_4_21,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_4 : Shifter_4_20))
       : Shifter_4_20,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_3 : Shifter_4_19))
       : Shifter_4_19,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_2 : Shifter_4_18))
       : Shifter_4_18,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_1 : Shifter_4_17))
       : Shifter_4_17,
     io_B[4]
       ? (io_Op == 4'hA
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'h8 ? Shifter_4_0 : Shifter_4_16))
       : Shifter_4_16,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_31 : _GEN & Shifter_4_15)
       : Shifter_4_15,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_30 : _GEN & Shifter_4_14)
       : Shifter_4_14,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_29 : _GEN & Shifter_4_13)
       : Shifter_4_13,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_28 : _GEN & Shifter_4_12)
       : Shifter_4_12,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_27 : _GEN & Shifter_4_11)
       : Shifter_4_11,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_26 : _GEN & Shifter_4_10)
       : Shifter_4_10,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_25 : _GEN & Shifter_4_9)
       : Shifter_4_9,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_24 : _GEN & Shifter_4_8)
       : Shifter_4_8,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_23 : _GEN & Shifter_4_7)
       : Shifter_4_7,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_22 : _GEN & Shifter_4_6)
       : Shifter_4_6,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_21 : _GEN & Shifter_4_5)
       : Shifter_4_5,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_20 : _GEN & Shifter_4_4)
       : Shifter_4_4,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_19 : _GEN & Shifter_4_3)
       : Shifter_4_3,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_18 : _GEN & Shifter_4_2)
       : Shifter_4_2,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_17 : _GEN & Shifter_4_1)
       : Shifter_4_1,
     io_B[4]
       ? (io_Op == 4'hA | io_Op == 4'h9 ? Shifter_4_16 : _GEN & Shifter_4_0)
       : Shifter_4_0};	// core/src/exu.scala:122:7, :131:24, :135:{37,43}, :136:53, :143:37, :144:53, :151:37, :160:26
endmodule

module alu(	// core/src/exu.scala:79:7
  input  [31:0] io_A,	// core/src/exu.scala:80:16
                io_B,	// core/src/exu.scala:80:16
  input  [3:0]  io_Op,	// core/src/exu.scala:80:16
  output [31:0] io_Out	// core/src/exu.scala:80:16
);

  wire [31:0]       _Shifter_io_Out;	// core/src/exu.scala:102:25
  wire              Sub = io_Op == 4'h3 | io_Op == 4'h2 | io_Op == 4'h1;	// core/src/exu.scala:87:37
  wire [31:0]       FixB = io_B ^ {32{Sub}};	// core/src/exu.scala:87:37, :95:{21,27}
  wire [33:0]       FixSum = {1'h0, {1'h0, io_A} + {1'h0, FixB}} + {33'h0, Sub};	// core/src/exu.scala:87:37, :95:21, :96:{23,31}
  wire [31:0]       _io_Out_T_5 = io_A | io_B;	// core/src/exu.scala:113:27
  wire [33:0]       _GEN = {2'h0, _Shifter_io_Out};	// core/src/exu.scala:87:37, :102:25, :107:37
  wire [15:0][33:0] _GEN_0 =
    {{34'h0},
     {34'h0},
     {34'h0},
     {34'h0},
     {34'h0},
     {_GEN},
     {_GEN},
     {_GEN},
     {{2'h0, ~_io_Out_T_5}},
     {{2'h0, io_A ^ io_B}},
     {{2'h0, _io_Out_T_5}},
     {{2'h0, io_A & io_B}},
     {{33'h0, ~(FixSum[32])}},
     {{33'h0, FixSum[31] ^ (io_A[31] ^ ~(FixB[31])) & (FixSum[31] ^ io_A[31])}},
     {FixSum},
     {FixSum}};	// core/src/exu.scala:87:37, :95:21, :96:31, :97:{14,20,31,37,47,52}, :99:29, :100:{17,24}, :107:37, :112:28, :113:27, :114:28, :115:22
  bshifter Shifter (	// core/src/exu.scala:102:25
    .io_A   (io_A),
    .io_B   (io_B[4:0]),	// core/src/exu.scala:104:25
    .io_Op  (io_Op),
    .io_Out (_Shifter_io_Out)
  );
  assign io_Out = _GEN_0[io_Op][31:0];	// core/src/exu.scala:79:7, :107:{12,37}
endmodule

module exu(	// core/src/exu.scala:5:7
  input         clock,	// core/src/exu.scala:5:7
  output        io_prev_ready,	// core/src/exu.scala:6:16
  input         io_prev_valid,	// core/src/exu.scala:6:16
  input  [3:0]  io_prev_bits_branchOp,	// core/src/exu.scala:6:16
                io_prev_bits_aluOp,	// core/src/exu.scala:6:16
  input  [1:0]  io_prev_bits_aluAsrc,	// core/src/exu.scala:6:16
  input  [2:0]  io_prev_bits_aluBsrc,	// core/src/exu.scala:6:16
  input  [3:0]  io_prev_bits_memOp,	// core/src/exu.scala:6:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/exu.scala:6:16
                io_prev_bits_wbDst,	// core/src/exu.scala:6:16
  input  [31:0] io_prev_bits_Imm,	// core/src/exu.scala:6:16
  input  [4:0]  io_prev_bits_rd,	// core/src/exu.scala:6:16
  input  [31:0] io_prev_bits_rd_data,	// core/src/exu.scala:6:16
                io_prev_bits_rj_data,	// core/src/exu.scala:6:16
                io_prev_bits_rk_data,	// core/src/exu.scala:6:16
                io_prev_bits_pc,	// core/src/exu.scala:6:16
                io_prev_bits_npc,	// core/src/exu.scala:6:16
  input         io_next_ready,	// core/src/exu.scala:6:16
  output        io_next_valid,	// core/src/exu.scala:6:16
  output [31:0] io_next_bits_ALUOut,	// core/src/exu.scala:6:16
  output [3:0]  io_next_bits_memOp,	// core/src/exu.scala:6:16
  output [1:0]  io_next_bits_wbSel,	// core/src/exu.scala:6:16
                io_next_bits_wbDst,	// core/src/exu.scala:6:16
  output [4:0]  io_next_bits_rd,	// core/src/exu.scala:6:16
  output [31:0] io_next_bits_rd_data,	// core/src/exu.scala:6:16
  output        io_bru_valid,	// core/src/exu.scala:6:16
                io_bru_bits_Zero,	// core/src/exu.scala:6:16
                io_bru_bits_SLess,	// core/src/exu.scala:6:16
                io_bru_bits_ULess,	// core/src/exu.scala:6:16
  output [3:0]  io_bru_bits_branchOp,	// core/src/exu.scala:6:16
  output [31:0] io_bru_bits_pcadd4,	// core/src/exu.scala:6:16
                io_bru_bits_pcoff,	// core/src/exu.scala:6:16
                io_bru_bits_jirlpc,	// core/src/exu.scala:6:16
                io_bru_bits_pc,	// core/src/exu.scala:6:16
                io_bru_bits_npc,	// core/src/exu.scala:6:16
                io_P,	// core/src/exu.scala:6:16
  output [4:0]  io_ex_Dst,	// core/src/exu.scala:6:16
  output [1:0]  io_ex_Sel,	// core/src/exu.scala:6:16
  output [31:0] io_ex_ALU	// core/src/exu.scala:6:16
);

  wire [31:0] _ALU_io_Out;	// core/src/exu.scala:22:21
  wire [63:0] _mult_io_S;	// core/src/exu.scala:21:22
  wire [31:0] ALUA =
    io_prev_bits_aluAsrc == 2'h1
      ? io_prev_bits_pc
      : io_prev_bits_aluAsrc == 2'h0 ? io_prev_bits_rj_data : 32'h0;	// core/src/exu.scala:24:53
  wire [31:0] ALUB =
    io_prev_bits_aluBsrc == 3'h3
      ? 32'h4
      : io_prev_bits_aluBsrc == 3'h2
          ? io_prev_bits_Imm
          : io_prev_bits_aluBsrc == 3'h1
              ? io_prev_bits_rd_data
              : io_prev_bits_aluBsrc == 3'h0 ? io_prev_bits_rk_data : 32'h0;	// core/src/exu.scala:24:53, :28:53
  wallace mult (	// core/src/exu.scala:21:22
    .clock (clock),
    .io_A  (ALUA),	// core/src/exu.scala:24:53
    .io_B  (ALUB),	// core/src/exu.scala:28:53
    .io_S  (_mult_io_S)
  );
  alu ALU (	// core/src/exu.scala:22:21
    .io_A   (ALUA),	// core/src/exu.scala:24:53
    .io_B   (ALUB),	// core/src/exu.scala:28:53
    .io_Op  (io_prev_bits_aluOp),
    .io_Out (_ALU_io_Out)
  );
  assign io_prev_ready = io_next_ready;	// core/src/exu.scala:5:7
  assign io_next_valid = io_prev_valid;	// core/src/exu.scala:5:7
  assign io_next_bits_ALUOut = _ALU_io_Out;	// core/src/exu.scala:5:7, :22:21
  assign io_next_bits_memOp = io_prev_bits_memOp;	// core/src/exu.scala:5:7
  assign io_next_bits_wbSel = io_prev_bits_wbSel;	// core/src/exu.scala:5:7
  assign io_next_bits_wbDst = io_prev_bits_wbDst;	// core/src/exu.scala:5:7
  assign io_next_bits_rd = io_prev_bits_rd;	// core/src/exu.scala:5:7
  assign io_next_bits_rd_data = io_prev_bits_rd_data;	// core/src/exu.scala:5:7
  assign io_bru_valid = io_prev_valid & io_next_ready;	// core/src/exu.scala:5:7, :74:35
  assign io_bru_bits_Zero = (io_prev_bits_rj_data ^ io_prev_bits_rd_data) == 32'h0;	// core/src/bundles.scala:8:{14,19}, core/src/exu.scala:5:7, :24:53
  assign io_bru_bits_SLess =
    $signed(io_prev_bits_rj_data) < $signed(io_prev_bits_rd_data);	// core/src/exu.scala:5:7, :52:54
  assign io_bru_bits_ULess = io_prev_bits_rj_data < io_prev_bits_rd_data;	// core/src/exu.scala:5:7, :53:47
  assign io_bru_bits_branchOp = io_prev_bits_branchOp;	// core/src/exu.scala:5:7
  assign io_bru_bits_pcadd4 = io_prev_bits_pc + 32'h4;	// core/src/exu.scala:5:7, :28:53, :55:43
  assign io_bru_bits_pcoff = io_prev_bits_pc + io_prev_bits_Imm;	// core/src/exu.scala:5:7, :56:42
  assign io_bru_bits_jirlpc = io_prev_bits_rj_data + io_prev_bits_Imm;	// core/src/exu.scala:5:7, :57:48
  assign io_bru_bits_pc = io_prev_bits_pc;	// core/src/exu.scala:5:7
  assign io_bru_bits_npc = io_prev_bits_npc;	// core/src/exu.scala:5:7
  assign io_P = _mult_io_S[31:0];	// core/src/exu.scala:5:7, :21:22, :41:22
  assign io_ex_Dst =
    io_prev_valid
      ? (io_prev_bits_wbDst == 2'h1
           ? 5'h1
           : io_prev_bits_wbDst == 2'h0 ? io_prev_bits_rd : 5'h0)
      : 5'h0;	// core/src/exu.scala:5:7, :24:53, :61:25, :62:{19,57}, :69:19
  assign io_ex_Sel = io_prev_valid ? io_prev_bits_wbSel : 2'h3;	// core/src/exu.scala:5:7, :28:53, :61:25, :66:19, :70:19
  assign io_ex_ALU = _ALU_io_Out;	// core/src/exu.scala:5:7, :22:21
endmodule

module buffer_2(	// core/src/core.scala:92:7
  input         clock,	// core/src/core.scala:92:7
                reset,	// core/src/core.scala:92:7
  output        io_prev_ready,	// core/src/core.scala:93:16
  input         io_prev_valid,	// core/src/core.scala:93:16
  input  [31:0] io_prev_bits_ALUOut,	// core/src/core.scala:93:16
  input  [3:0]  io_prev_bits_memOp,	// core/src/core.scala:93:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/core.scala:93:16
                io_prev_bits_wbDst,	// core/src/core.scala:93:16
  input  [4:0]  io_prev_bits_rd,	// core/src/core.scala:93:16
  input  [31:0] io_prev_bits_rd_data,	// core/src/core.scala:93:16
  output        io_next_valid,	// core/src/core.scala:93:16
  output [31:0] io_next_bits_ALUOut,	// core/src/core.scala:93:16
  output [3:0]  io_next_bits_memOp,	// core/src/core.scala:93:16
  output [1:0]  io_next_bits_wbSel,	// core/src/core.scala:93:16
                io_next_bits_wbDst,	// core/src/core.scala:93:16
  output [4:0]  io_next_bits_rd,	// core/src/core.scala:93:16
  output [31:0] io_next_bits_rd_data,	// core/src/core.scala:93:16
  input         io_stall,	// core/src/core.scala:93:16
                io_flush	// core/src/core.scala:93:16
);

  reg         state;	// core/src/core.scala:99:24
  reg  [31:0] regs_ALUOut;	// core/src/core.scala:101:19
  reg  [3:0]  regs_memOp;	// core/src/core.scala:101:19
  reg  [1:0]  regs_wbSel;	// core/src/core.scala:101:19
  reg  [1:0]  regs_wbDst;	// core/src/core.scala:101:19
  reg  [4:0]  regs_rd;	// core/src/core.scala:101:19
  reg  [31:0] regs_rd_data;	// core/src/core.scala:101:19
  wire        _GEN = state & io_stall;	// core/src/core.scala:99:24, :107:21
  always @(posedge clock) begin	// core/src/core.scala:92:7
    if (reset)	// core/src/core.scala:92:7
      state <= 1'h0;	// core/src/core.scala:99:24, :107:37
    else	// core/src/core.scala:92:7
      state <= ~io_flush & (_GEN | io_prev_valid);	// core/src/core.scala:99:24, :103:20, :104:15, :107:{21,54}, :108:15, :113:15
    if (io_flush | _GEN | ~io_prev_valid) begin	// core/src/core.scala:101:19, :103:20, :107:{21,54}, :110:14, :115:14
    end
    else begin	// core/src/core.scala:101:19, :103:20, :107:54, :110:14, :115:14
      regs_ALUOut <= io_prev_bits_ALUOut;	// core/src/core.scala:101:19
      regs_memOp <= io_prev_bits_memOp;	// core/src/core.scala:101:19
      regs_wbSel <= io_prev_bits_wbSel;	// core/src/core.scala:101:19
      regs_wbDst <= io_prev_bits_wbDst;	// core/src/core.scala:101:19
      regs_rd <= io_prev_bits_rd;	// core/src/core.scala:101:19
      regs_rd_data <= io_prev_bits_rd_data;	// core/src/core.scala:101:19
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/core.scala:92:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/core.scala:92:7
      `FIRRTL_BEFORE_INITIAL	// core/src/core.scala:92:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/core.scala:92:7
      automatic logic [31:0] _RANDOM[0:3];	// core/src/core.scala:92:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/core.scala:92:7
        `INIT_RANDOM_PROLOG_	// core/src/core.scala:92:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/core.scala:92:7
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          _RANDOM[i[1:0]] = `RANDOM;	// core/src/core.scala:92:7
        end	// core/src/core.scala:92:7
        state = _RANDOM[2'h0][0];	// core/src/core.scala:92:7, :99:24
        regs_ALUOut = {_RANDOM[2'h0][31:1], _RANDOM[2'h1][0]};	// core/src/core.scala:92:7, :99:24, :101:19
        regs_memOp = _RANDOM[2'h1][4:1];	// core/src/core.scala:92:7, :101:19
        regs_wbSel = _RANDOM[2'h1][6:5];	// core/src/core.scala:92:7, :101:19
        regs_wbDst = _RANDOM[2'h1][8:7];	// core/src/core.scala:92:7, :101:19
        regs_rd = _RANDOM[2'h2][13:9];	// core/src/core.scala:92:7, :101:19
        regs_rd_data = {_RANDOM[2'h2][31:14], _RANDOM[2'h3][13:0]};	// core/src/core.scala:92:7, :101:19
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/core.scala:92:7
      `FIRRTL_AFTER_INITIAL	// core/src/core.scala:92:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_prev_ready = ~io_flush & ~_GEN;	// core/src/core.scala:92:7, :99:24, :103:20, :104:15, :105:15, :107:{21,54}, :108:15, :109:15, :114:15
  assign io_next_valid = state;	// core/src/core.scala:92:7, :99:24
  assign io_next_bits_ALUOut = regs_ALUOut;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_memOp = regs_memOp;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_wbSel = regs_wbSel;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_wbDst = regs_wbDst;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_rd = regs_rd;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_rd_data = regs_rd_data;	// core/src/core.scala:92:7, :101:19
endmodule

module buffer_3(	// core/src/core.scala:92:7
  input         clock,	// core/src/core.scala:92:7
                reset,	// core/src/core.scala:92:7
                io_prev_valid,	// core/src/core.scala:93:16
                io_prev_bits_Zero,	// core/src/core.scala:93:16
                io_prev_bits_SLess,	// core/src/core.scala:93:16
                io_prev_bits_ULess,	// core/src/core.scala:93:16
  input  [3:0]  io_prev_bits_branchOp,	// core/src/core.scala:93:16
  input  [31:0] io_prev_bits_pcadd4,	// core/src/core.scala:93:16
                io_prev_bits_pcoff,	// core/src/core.scala:93:16
                io_prev_bits_jirlpc,	// core/src/core.scala:93:16
                io_prev_bits_pc,	// core/src/core.scala:93:16
                io_prev_bits_npc,	// core/src/core.scala:93:16
  output        io_next_valid,	// core/src/core.scala:93:16
                io_next_bits_Zero,	// core/src/core.scala:93:16
                io_next_bits_SLess,	// core/src/core.scala:93:16
                io_next_bits_ULess,	// core/src/core.scala:93:16
  output [3:0]  io_next_bits_branchOp,	// core/src/core.scala:93:16
  output [31:0] io_next_bits_pcadd4,	// core/src/core.scala:93:16
                io_next_bits_pcoff,	// core/src/core.scala:93:16
                io_next_bits_jirlpc,	// core/src/core.scala:93:16
                io_next_bits_pc,	// core/src/core.scala:93:16
                io_next_bits_npc,	// core/src/core.scala:93:16
  input         io_stall,	// core/src/core.scala:93:16
                io_flush	// core/src/core.scala:93:16
);

  reg        state;	// core/src/core.scala:99:24
  reg        regs_Zero;	// core/src/core.scala:101:19
  reg        regs_SLess;	// core/src/core.scala:101:19
  reg        regs_ULess;	// core/src/core.scala:101:19
  reg [3:0]  regs_branchOp;	// core/src/core.scala:101:19
  reg [31:0] regs_pcadd4;	// core/src/core.scala:101:19
  reg [31:0] regs_pcoff;	// core/src/core.scala:101:19
  reg [31:0] regs_jirlpc;	// core/src/core.scala:101:19
  reg [31:0] regs_pc;	// core/src/core.scala:101:19
  reg [31:0] regs_npc;	// core/src/core.scala:101:19
  always @(posedge clock) begin	// core/src/core.scala:92:7
    automatic logic _GEN;	// core/src/core.scala:107:21
    _GEN = state & io_stall;	// core/src/core.scala:99:24, :107:21
    if (reset)	// core/src/core.scala:92:7
      state <= 1'h0;	// core/src/core.scala:99:24, :107:37
    else	// core/src/core.scala:92:7
      state <= ~io_flush & (_GEN | io_prev_valid);	// core/src/core.scala:99:24, :103:20, :104:15, :107:{21,54}, :108:15, :113:15
    if (io_flush | _GEN | ~io_prev_valid) begin	// core/src/core.scala:101:19, :103:20, :107:{21,54}, :110:14, :115:14
    end
    else begin	// core/src/core.scala:101:19, :103:20, :107:54, :110:14, :115:14
      regs_Zero <= io_prev_bits_Zero;	// core/src/core.scala:101:19
      regs_SLess <= io_prev_bits_SLess;	// core/src/core.scala:101:19
      regs_ULess <= io_prev_bits_ULess;	// core/src/core.scala:101:19
      regs_branchOp <= io_prev_bits_branchOp;	// core/src/core.scala:101:19
      regs_pcadd4 <= io_prev_bits_pcadd4;	// core/src/core.scala:101:19
      regs_pcoff <= io_prev_bits_pcoff;	// core/src/core.scala:101:19
      regs_jirlpc <= io_prev_bits_jirlpc;	// core/src/core.scala:101:19
      regs_pc <= io_prev_bits_pc;	// core/src/core.scala:101:19
      regs_npc <= io_prev_bits_npc;	// core/src/core.scala:101:19
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/core.scala:92:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/core.scala:92:7
      `FIRRTL_BEFORE_INITIAL	// core/src/core.scala:92:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/core.scala:92:7
      automatic logic [31:0] _RANDOM[0:5];	// core/src/core.scala:92:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/core.scala:92:7
        `INIT_RANDOM_PROLOG_	// core/src/core.scala:92:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/core.scala:92:7
        for (logic [2:0] i = 3'h0; i < 3'h6; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;	// core/src/core.scala:92:7
        end	// core/src/core.scala:92:7
        state = _RANDOM[3'h0][0];	// core/src/core.scala:92:7, :99:24
        regs_Zero = _RANDOM[3'h0][1];	// core/src/core.scala:92:7, :99:24, :101:19
        regs_SLess = _RANDOM[3'h0][2];	// core/src/core.scala:92:7, :99:24, :101:19
        regs_ULess = _RANDOM[3'h0][3];	// core/src/core.scala:92:7, :99:24, :101:19
        regs_branchOp = _RANDOM[3'h0][7:4];	// core/src/core.scala:92:7, :99:24, :101:19
        regs_pcadd4 = {_RANDOM[3'h0][31:8], _RANDOM[3'h1][7:0]};	// core/src/core.scala:92:7, :99:24, :101:19
        regs_pcoff = {_RANDOM[3'h1][31:8], _RANDOM[3'h2][7:0]};	// core/src/core.scala:92:7, :101:19
        regs_jirlpc = {_RANDOM[3'h2][31:8], _RANDOM[3'h3][7:0]};	// core/src/core.scala:92:7, :101:19
        regs_pc = {_RANDOM[3'h3][31:8], _RANDOM[3'h4][7:0]};	// core/src/core.scala:92:7, :101:19
        regs_npc = {_RANDOM[3'h4][31:8], _RANDOM[3'h5][7:0]};	// core/src/core.scala:92:7, :101:19
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/core.scala:92:7
      `FIRRTL_AFTER_INITIAL	// core/src/core.scala:92:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_next_valid = state;	// core/src/core.scala:92:7, :99:24
  assign io_next_bits_Zero = regs_Zero;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_SLess = regs_SLess;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_ULess = regs_ULess;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_branchOp = regs_branchOp;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_pcadd4 = regs_pcadd4;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_pcoff = regs_pcoff;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_jirlpc = regs_jirlpc;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_pc = regs_pc;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_npc = regs_npc;	// core/src/core.scala:92:7, :101:19
endmodule

module lsu(	// core/src/lsu.scala:5:7
  input         clock,	// core/src/lsu.scala:5:7
                reset,	// core/src/lsu.scala:5:7
  input  [31:0] io_ext_in_bits_data_out,	// core/src/lsu.scala:6:16
  output        io_ext_out_valid,	// core/src/lsu.scala:6:16
                io_ext_out_bits_data_wen,	// core/src/lsu.scala:6:16
  output [31:0] io_ext_out_bits_data_in,	// core/src/lsu.scala:6:16
                io_ext_out_bits_addr,	// core/src/lsu.scala:6:16
  output [3:0]  io_ext_out_bits_be_n,	// core/src/lsu.scala:6:16
  output        io_ext_out_bits_oe_n,	// core/src/lsu.scala:6:16
                io_ext_out_bits_we_n,	// core/src/lsu.scala:6:16
  input         io_prev_valid,	// core/src/lsu.scala:6:16
  input  [31:0] io_prev_bits_ALUOut,	// core/src/lsu.scala:6:16
  input  [3:0]  io_prev_bits_memOp,	// core/src/lsu.scala:6:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/lsu.scala:6:16
                io_prev_bits_wbDst,	// core/src/lsu.scala:6:16
  input  [4:0]  io_prev_bits_rd,	// core/src/lsu.scala:6:16
  input  [31:0] io_prev_bits_rd_data,	// core/src/lsu.scala:6:16
  output        io_next_valid,	// core/src/lsu.scala:6:16
  output [31:0] io_next_bits_MemOut,	// core/src/lsu.scala:6:16
                io_next_bits_ALUOut,	// core/src/lsu.scala:6:16
  output [1:0]  io_next_bits_wbSel,	// core/src/lsu.scala:6:16
                io_next_bits_wbDst,	// core/src/lsu.scala:6:16
  output [4:0]  io_next_bits_rd,	// core/src/lsu.scala:6:16
  output        io_stall,	// core/src/lsu.scala:6:16
  output [4:0]  io_l1_Dst,	// core/src/lsu.scala:6:16
  output [1:0]  io_l1_Sel,	// core/src/lsu.scala:6:16
  output [31:0] io_l1_ALU,	// core/src/lsu.scala:6:16
                io_l1_Mem,	// core/src/lsu.scala:6:16
  output [4:0]  io_l2_Dst,	// core/src/lsu.scala:6:16
  output [1:0]  io_l2_Sel,	// core/src/lsu.scala:6:16
  output [31:0] io_l2_ALU,	// core/src/lsu.scala:6:16
                io_l2_Mem	// core/src/lsu.scala:6:16
);

  wire             Writevalid =
    io_prev_valid
    & (io_prev_bits_memOp == 4'h7 | io_prev_bits_memOp == 4'h6
       | io_prev_bits_memOp == 4'h5);	// core/src/lsu.scala:5:7, :31:{49,71}
  wire             Readvalid =
    io_prev_valid
    & (io_prev_bits_memOp == 4'h4 | io_prev_bits_memOp == 4'h3
       | io_prev_bits_memOp == 4'h2 | io_prev_bits_memOp == 4'h1
       | ~(|io_prev_bits_memOp));	// core/src/lsu.scala:5:7, :36:{48,70}
  reg              wq_0_valid;	// core/src/lsu.scala:88:21
  reg  [31:0]      wq_0_addr;	// core/src/lsu.scala:88:21
  reg  [31:0]      wq_0_data;	// core/src/lsu.scala:88:21
  reg  [3:0]       wq_0_be_n;	// core/src/lsu.scala:88:21
  reg  [1:0]       wq_0_op;	// core/src/lsu.scala:88:21
  reg              wq_1_valid;	// core/src/lsu.scala:88:21
  reg  [31:0]      wq_1_addr;	// core/src/lsu.scala:88:21
  reg  [31:0]      wq_1_data;	// core/src/lsu.scala:88:21
  reg  [3:0]       wq_1_be_n;	// core/src/lsu.scala:88:21
  reg  [1:0]       wq_1_op;	// core/src/lsu.scala:88:21
  reg              wq_2_valid;	// core/src/lsu.scala:88:21
  reg  [31:0]      wq_2_addr;	// core/src/lsu.scala:88:21
  reg  [31:0]      wq_2_data;	// core/src/lsu.scala:88:21
  reg  [3:0]       wq_2_be_n;	// core/src/lsu.scala:88:21
  reg  [1:0]       wq_2_op;	// core/src/lsu.scala:88:21
  reg              wq_3_valid;	// core/src/lsu.scala:88:21
  reg  [31:0]      wq_3_addr;	// core/src/lsu.scala:88:21
  reg  [31:0]      wq_3_data;	// core/src/lsu.scala:88:21
  reg  [3:0]       wq_3_be_n;	// core/src/lsu.scala:88:21
  reg  [1:0]       wq_3_op;	// core/src/lsu.scala:88:21
  reg              wq_4_valid;	// core/src/lsu.scala:88:21
  reg  [31:0]      wq_4_addr;	// core/src/lsu.scala:88:21
  reg  [31:0]      wq_4_data;	// core/src/lsu.scala:88:21
  reg  [3:0]       wq_4_be_n;	// core/src/lsu.scala:88:21
  reg  [1:0]       wq_4_op;	// core/src/lsu.scala:88:21
  reg              wq_5_valid;	// core/src/lsu.scala:88:21
  reg  [31:0]      wq_5_addr;	// core/src/lsu.scala:88:21
  reg  [31:0]      wq_5_data;	// core/src/lsu.scala:88:21
  reg  [3:0]       wq_5_be_n;	// core/src/lsu.scala:88:21
  reg  [1:0]       wq_5_op;	// core/src/lsu.scala:88:21
  reg  [1:0]       wq_state;	// core/src/lsu.scala:89:27
  reg  [2:0]       wq_ptr;	// core/src/lsu.scala:90:25
  wire [7:0]       _GEN =
    {{wq_0_valid},
     {wq_0_valid},
     {wq_5_valid},
     {wq_4_valid},
     {wq_3_valid},
     {wq_2_valid},
     {wq_1_valid},
     {wq_0_valid}};	// core/src/lsu.scala:88:21, :92:49
  wire             wq_full = wq_ptr == 3'h5 & _GEN[wq_ptr];	// core/src/lsu.scala:31:71, :90:25, :92:{45,49}
  wire [1:0]       _hit_0_T_13 = {wq_0_op[1], ~(wq_0_op[0])};	// core/src/lsu.scala:88:21, :114:37
  wire             hit_0 =
    wq_0_valid & (wq_0_addr ^ io_prev_bits_ALUOut) == 32'h0
    & (io_prev_bits_memOp == 4'h4
         ? wq_0_op == 2'h2
         : io_prev_bits_memOp == 4'h3
             ? _hit_0_T_13 == 2'h0
             : io_prev_bits_memOp == 4'h2
                 ? _hit_0_T_13 == 2'h0
                 : io_prev_bits_memOp == 4'h1
                     ? wq_0_op == 2'h0
                     : ~(|io_prev_bits_memOp) & wq_0_op == 2'h0);	// core/src/lsu.scala:5:7, :36:70, :88:{21,34}, :111:{47,58,62,84}, :112:44, :113:45, :114:{37,44}, :115:45, :116:44
  wire [1:0]       _hit_1_T_13 = {wq_1_op[1], ~(wq_1_op[0])};	// core/src/lsu.scala:88:21, :114:37
  wire             hit_1 =
    wq_1_valid & (wq_1_addr ^ io_prev_bits_ALUOut) == 32'h0
    & (io_prev_bits_memOp == 4'h4
         ? wq_1_op == 2'h2
         : io_prev_bits_memOp == 4'h3
             ? _hit_1_T_13 == 2'h0
             : io_prev_bits_memOp == 4'h2
                 ? _hit_1_T_13 == 2'h0
                 : io_prev_bits_memOp == 4'h1
                     ? wq_1_op == 2'h0
                     : ~(|io_prev_bits_memOp) & wq_1_op == 2'h0);	// core/src/lsu.scala:5:7, :36:70, :88:{21,34}, :111:{47,58,62,84}, :112:44, :113:45, :114:{37,44}, :115:45, :116:44
  wire [1:0]       _hit_2_T_13 = {wq_2_op[1], ~(wq_2_op[0])};	// core/src/lsu.scala:88:21, :114:37
  wire             hit_2 =
    wq_2_valid & (wq_2_addr ^ io_prev_bits_ALUOut) == 32'h0
    & (io_prev_bits_memOp == 4'h4
         ? wq_2_op == 2'h2
         : io_prev_bits_memOp == 4'h3
             ? _hit_2_T_13 == 2'h0
             : io_prev_bits_memOp == 4'h2
                 ? _hit_2_T_13 == 2'h0
                 : io_prev_bits_memOp == 4'h1
                     ? wq_2_op == 2'h0
                     : ~(|io_prev_bits_memOp) & wq_2_op == 2'h0);	// core/src/lsu.scala:5:7, :36:70, :88:{21,34}, :111:{47,58,62,84}, :112:44, :113:45, :114:{37,44}, :115:45, :116:44
  wire [1:0]       _hit_3_T_13 = {wq_3_op[1], ~(wq_3_op[0])};	// core/src/lsu.scala:88:21, :114:37
  wire             hit_3 =
    wq_3_valid & (wq_3_addr ^ io_prev_bits_ALUOut) == 32'h0
    & (io_prev_bits_memOp == 4'h4
         ? wq_3_op == 2'h2
         : io_prev_bits_memOp == 4'h3
             ? _hit_3_T_13 == 2'h0
             : io_prev_bits_memOp == 4'h2
                 ? _hit_3_T_13 == 2'h0
                 : io_prev_bits_memOp == 4'h1
                     ? wq_3_op == 2'h0
                     : ~(|io_prev_bits_memOp) & wq_3_op == 2'h0);	// core/src/lsu.scala:5:7, :36:70, :88:{21,34}, :111:{47,58,62,84}, :112:44, :113:45, :114:{37,44}, :115:45, :116:44
  wire [1:0]       _hit_4_T_13 = {wq_4_op[1], ~(wq_4_op[0])};	// core/src/lsu.scala:88:21, :114:37
  wire             hit_4 =
    wq_4_valid & (wq_4_addr ^ io_prev_bits_ALUOut) == 32'h0
    & (io_prev_bits_memOp == 4'h4
         ? wq_4_op == 2'h2
         : io_prev_bits_memOp == 4'h3
             ? _hit_4_T_13 == 2'h0
             : io_prev_bits_memOp == 4'h2
                 ? _hit_4_T_13 == 2'h0
                 : io_prev_bits_memOp == 4'h1
                     ? wq_4_op == 2'h0
                     : ~(|io_prev_bits_memOp) & wq_4_op == 2'h0);	// core/src/lsu.scala:5:7, :36:70, :88:{21,34}, :111:{47,58,62,84}, :112:44, :113:45, :114:{37,44}, :115:45, :116:44
  wire [1:0]       _hit_5_T_13 = {wq_5_op[1], ~(wq_5_op[0])};	// core/src/lsu.scala:88:21, :114:37
  wire             hit_5 =
    wq_5_valid & (wq_5_addr ^ io_prev_bits_ALUOut) == 32'h0
    & (io_prev_bits_memOp == 4'h4
         ? wq_5_op == 2'h2
         : io_prev_bits_memOp == 4'h3
             ? _hit_5_T_13 == 2'h0
             : io_prev_bits_memOp == 4'h2
                 ? _hit_5_T_13 == 2'h0
                 : io_prev_bits_memOp == 4'h1
                     ? wq_5_op == 2'h0
                     : ~(|io_prev_bits_memOp) & wq_5_op == 2'h0);	// core/src/lsu.scala:5:7, :36:70, :88:{21,34}, :111:{47,58,62,84}, :112:44, :113:45, :114:{37,44}, :115:45, :116:44
  wire [2:0]       _hit_index_T_4 =
    hit_5 ? 3'h0 : hit_4 ? 3'h1 : hit_3 ? 3'h2 : hit_2 ? 3'h3 : {2'h2, ~hit_1};	// core/src/lsu.scala:36:70, :90:25, :111:62, :126:32, src/main/scala/chisel3/util/Mux.scala:50:70
  wire             _GEN_0 = wq_state == 2'h1;	// core/src/lsu.scala:89:27, :121:22
  wire [7:0]       _GEN_1 =
    {{hit_0}, {hit_0}, {hit_5}, {hit_4}, {hit_3}, {hit_2}, {hit_1}, {hit_0}};	// core/src/lsu.scala:111:62, :135:32
  wire             _GEN_2 = _GEN_1[~_hit_index_T_4];	// core/src/lsu.scala:119:18, :135:32, src/main/scala/chisel3/util/Mux.scala:50:70
  wire             _GEN_3 = wq_state == 2'h2;	// core/src/lsu.scala:36:70, :89:27, :121:22
  wire             wq_stall =
    _GEN_0
      ? (Writevalid ? wq_full : Readvalid & ~_GEN_2)
      : _GEN_3
          ? (Writevalid ? wq_full : Readvalid & ~_GEN_2)
          : (&wq_state) & ~Writevalid & Readvalid & ~_GEN_2;	// core/src/lsu.scala:31:{49,71}, :36:48, :89:27, :92:49, :95:14, :121:22, :123:30, :125:32, :133:34, :135:{26,32}, :147:30, :149:32, :157:34, :159:{26,32}, :166:30, :181:34, :183:32
  reg              state;	// core/src/lsu.scala:201:24
  wire [7:0][31:0] _GEN_4 =
    {{wq_0_data},
     {wq_0_data},
     {wq_5_data},
     {wq_4_data},
     {wq_3_data},
     {wq_2_data},
     {wq_1_data},
     {wq_0_data}};	// core/src/lsu.scala:88:21, :207:23
  wire [31:0]      ReadData = state ? io_ext_in_bits_data_out : _GEN_4[~_hit_index_T_4];	// core/src/lsu.scala:119:18, :201:24, :207:23, src/main/scala/chisel3/util/Mux.scala:50:70
  wire [3:0][7:0]  _GEN_5 =
    {{ReadData[31:24]}, {ReadData[23:16]}, {ReadData[15:8]}, {ReadData[7:0]}};	// core/src/lsu.scala:207:23, :208:51, :209:24, :210:24, :211:24, :212:24
  wire [7:0]       FetchByte = _GEN_5[io_prev_bits_ALUOut[1:0]];	// core/src/lsu.scala:46:37, :208:51
  wire [15:0]      FetchHalf = io_prev_bits_ALUOut[1] ? ReadData[31:16] : ReadData[15:0];	// core/src/lsu.scala:52:37, :207:23, :214:48, :215:24, :216:24
  wire [31:0]      _FixLoad_T_27 =
    io_prev_bits_memOp == 4'h3
      ? {16'h0, FetchHalf}
      : io_prev_bits_memOp == 4'h2
          ? {{16{FetchHalf[15]}}, FetchHalf}
          : io_prev_bits_memOp == 4'h1
              ? {24'h0, FetchByte}
              : (|io_prev_bits_memOp) ? 32'h0 : {{24{FetchByte[7]}}, FetchByte};	// core/src/lsu.scala:5:7, :36:70, :64:24, :65:24, :88:34, :208:51, :214:48, :219:38, :220:{26,31,45}, :221:26, :222:{26,31,45}, :223:26
  wire             _FixLoad_T_28 = io_prev_bits_memOp == 4'h4;	// core/src/lsu.scala:5:7, :219:38
  wire [31:0]      FixLoad = _FixLoad_T_28 ? ReadData : _FixLoad_T_27;	// core/src/lsu.scala:207:23, :219:38
  reg  [31:0]      regs_bits_MemOut;	// core/src/lsu.scala:228:19
  reg  [31:0]      regs_bits_ALUOut;	// core/src/lsu.scala:228:19
  reg  [1:0]       regs_bits_wbSel;	// core/src/lsu.scala:228:19
  reg  [1:0]       regs_bits_wbDst;	// core/src/lsu.scala:228:19
  reg  [4:0]       regs_bits_rd;	// core/src/lsu.scala:228:19
  reg              regs_valid;	// core/src/lsu.scala:228:19
  wire [31:0]      next_MemOut =
    state ? (_FixLoad_T_28 ? io_ext_in_bits_data_out : _FixLoad_T_27) : regs_bits_MemOut;	// core/src/lsu.scala:201:24, :219:38, :228:19, :273:17, :274:21, :281:14
  wire [31:0]      next_ALUOut = state ? io_prev_bits_ALUOut : regs_bits_ALUOut;	// core/src/lsu.scala:201:24, :228:19, :273:17, :275:21, :281:14
  wire [1:0]       next_wbSel = state ? io_prev_bits_wbSel : regs_bits_wbSel;	// core/src/lsu.scala:201:24, :228:19, :273:17, :276:20, :281:14
  wire [1:0]       next_wbDst = state ? io_prev_bits_wbDst : regs_bits_wbDst;	// core/src/lsu.scala:201:24, :228:19, :273:17, :277:20, :281:14
  wire [4:0]       next_rd = state ? io_prev_bits_rd : regs_bits_rd;	// core/src/lsu.scala:201:24, :228:19, :273:17, :278:17, :281:14
  wire             _GEN_6 = io_prev_valid & ~state;	// core/src/lsu.scala:201:24, :267:29, :285:24
  wire             io_next_valid_0 = state | regs_valid;	// core/src/lsu.scala:201:24, :228:19, :296:16
  always @(posedge clock) begin	// core/src/lsu.scala:5:7
    automatic logic _GEN_7;	// core/src/lsu.scala:235:42
    _GEN_7 = io_prev_valid & ~wq_stall & ~state;	// core/src/lsu.scala:121:22, :123:30, :201:24, :235:{32,42,45}
    if (reset) begin	// core/src/lsu.scala:5:7
      wq_0_valid <= 1'h0;	// core/src/lsu.scala:6:16, :88:21
      wq_0_addr <= 32'h0;	// core/src/lsu.scala:88:{21,34}
      wq_0_data <= 32'h0;	// core/src/lsu.scala:88:{21,34}
      wq_0_be_n <= 4'h0;	// core/src/lsu.scala:5:7, :88:21
      wq_0_op <= 2'h0;	// core/src/lsu.scala:88:{21,34}
      wq_1_valid <= 1'h0;	// core/src/lsu.scala:6:16, :88:21
      wq_1_addr <= 32'h0;	// core/src/lsu.scala:88:{21,34}
      wq_1_data <= 32'h0;	// core/src/lsu.scala:88:{21,34}
      wq_1_be_n <= 4'h0;	// core/src/lsu.scala:5:7, :88:21
      wq_1_op <= 2'h0;	// core/src/lsu.scala:88:{21,34}
      wq_2_valid <= 1'h0;	// core/src/lsu.scala:6:16, :88:21
      wq_2_addr <= 32'h0;	// core/src/lsu.scala:88:{21,34}
      wq_2_data <= 32'h0;	// core/src/lsu.scala:88:{21,34}
      wq_2_be_n <= 4'h0;	// core/src/lsu.scala:5:7, :88:21
      wq_2_op <= 2'h0;	// core/src/lsu.scala:88:{21,34}
      wq_3_valid <= 1'h0;	// core/src/lsu.scala:6:16, :88:21
      wq_3_addr <= 32'h0;	// core/src/lsu.scala:88:{21,34}
      wq_3_data <= 32'h0;	// core/src/lsu.scala:88:{21,34}
      wq_3_be_n <= 4'h0;	// core/src/lsu.scala:5:7, :88:21
      wq_3_op <= 2'h0;	// core/src/lsu.scala:88:{21,34}
      wq_4_valid <= 1'h0;	// core/src/lsu.scala:6:16, :88:21
      wq_4_addr <= 32'h0;	// core/src/lsu.scala:88:{21,34}
      wq_4_data <= 32'h0;	// core/src/lsu.scala:88:{21,34}
      wq_4_be_n <= 4'h0;	// core/src/lsu.scala:5:7, :88:21
      wq_4_op <= 2'h0;	// core/src/lsu.scala:88:{21,34}
      wq_5_valid <= 1'h0;	// core/src/lsu.scala:6:16, :88:21
      wq_5_addr <= 32'h0;	// core/src/lsu.scala:88:{21,34}
      wq_5_data <= 32'h0;	// core/src/lsu.scala:88:{21,34}
      wq_5_be_n <= 4'h0;	// core/src/lsu.scala:5:7, :88:21
      wq_5_op <= 2'h0;	// core/src/lsu.scala:88:{21,34}
      wq_state <= 2'h1;	// core/src/lsu.scala:89:27
      wq_ptr <= 3'h0;	// core/src/lsu.scala:90:25
      state <= 1'h0;	// core/src/lsu.scala:6:16, :201:24
    end
    else begin	// core/src/lsu.scala:5:7
      automatic logic [3:0][3:0]  _GEN_8 = '{4'h7, 4'hB, 4'hD, 4'hE};	// core/src/lsu.scala:46:50
      automatic logic [3:0]       _GenMask_T_7 =
        io_prev_bits_memOp == 4'h6
          ? (io_prev_bits_ALUOut[1] ? 4'h3 : 4'hC)
          : io_prev_bits_memOp == 4'h5 ? _GEN_8[io_prev_bits_ALUOut[1:0]] : 4'h0;	// core/src/lsu.scala:5:7, :46:{37,50}, :52:{37,47}, :57:38
      automatic logic             _GenMask_T_8 = io_prev_bits_memOp == 4'h7;	// core/src/lsu.scala:5:7, :57:38
      automatic logic [3:0]       GenMask = _GenMask_T_8 ? 4'h0 : _GenMask_T_7;	// core/src/lsu.scala:5:7, :57:38
      automatic logic [3:0][31:0] _GEN_9 =
        {{{io_prev_bits_rd_data[7:0], 24'h0}},
         {{8'h0, io_prev_bits_rd_data[7:0], 16'h0}},
         {{16'h0, io_prev_bits_rd_data[7:0], 8'h0}},
         {{24'h0, io_prev_bits_rd_data[7:0]}}};	// core/src/lsu.scala:63:50, :64:{19,24,44}, :65:{19,24,56}, :66:19, :67:19
      automatic logic [31:0]      GenData =
        io_prev_bits_memOp == 4'h7
          ? io_prev_bits_rd_data
          : io_prev_bits_memOp == 4'h6
              ? (io_prev_bits_ALUOut[1]
                   ? {io_prev_bits_rd_data[15:0], 16'h0}
                   : {16'h0, io_prev_bits_rd_data[15:0]})
              : io_prev_bits_memOp == 4'h5 ? _GEN_9[io_prev_bits_ALUOut[1:0]] : 32'h0;	// core/src/lsu.scala:5:7, :46:37, :52:37, :63:50, :65:24, :69:47, :70:{19,44}, :71:19, :74:38, :88:34
      automatic logic [1:0]       newdata_op =
        io_prev_bits_memOp == 4'h7 ? 2'h2 : {1'h0, io_prev_bits_memOp == 4'h6};	// core/src/lsu.scala:5:7, :6:16, :36:70, :102:38
      automatic logic             _GEN_10;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic             _GEN_11;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [31:0]      _GEN_12;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [31:0]      _GEN_13;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [3:0]       _GEN_14;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [1:0]       _GEN_15;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic             _GEN_16;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic             _GEN_17;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [31:0]      _GEN_18;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [31:0]      _GEN_19;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [3:0]       _GEN_20;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [1:0]       _GEN_21;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic             _GEN_22;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic             _GEN_23;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [31:0]      _GEN_24;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [31:0]      _GEN_25;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [3:0]       _GEN_26;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [1:0]       _GEN_27;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic             _GEN_28;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic             _GEN_29;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [31:0]      _GEN_30;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [31:0]      _GEN_31;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [3:0]       _GEN_32;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [1:0]       _GEN_33;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic             _GEN_34;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic             _GEN_35;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [31:0]      _GEN_36;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [31:0]      _GEN_37;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [3:0]       _GEN_38;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [1:0]       _GEN_39;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic             _GEN_40;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic             _GEN_41;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [31:0]      _GEN_42;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [31:0]      _GEN_43;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [3:0]       _GEN_44;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic [1:0]       _GEN_45;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      automatic logic             _GEN_46;	// core/src/lsu.scala:90:25, :123:30, :125:32, :127:28
      automatic logic             _GEN_47;	// core/src/lsu.scala:168:32, :170:{31,37}, :176:31
      automatic logic             _GEN_48;	// core/src/lsu.scala:168:32, :170:{31,37}, :176:31
      automatic logic             _GEN_49;	// core/src/lsu.scala:168:32, :170:{31,37}, :176:31
      automatic logic             _GEN_50;	// core/src/lsu.scala:168:32, :170:{31,37}, :176:31
      automatic logic             _GEN_51;	// core/src/lsu.scala:168:32, :170:{31,37}, :176:31
      automatic logic [3:0]       _GEN_52;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][31:0] _GEN_53;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][31:0] _GEN_54;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][3:0]  _GEN_55;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][1:0]  _GEN_56;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0]       _GEN_57;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][31:0] _GEN_58;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][31:0] _GEN_59;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][3:0]  _GEN_60;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][1:0]  _GEN_61;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0]       _GEN_62;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][31:0] _GEN_63;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][31:0] _GEN_64;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][3:0]  _GEN_65;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][1:0]  _GEN_66;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0]       _GEN_67;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][31:0] _GEN_68;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][31:0] _GEN_69;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][3:0]  _GEN_70;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][1:0]  _GEN_71;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0]       _GEN_72;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][31:0] _GEN_73;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][31:0] _GEN_74;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][3:0]  _GEN_75;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][1:0]  _GEN_76;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0]       _GEN_77;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][31:0] _GEN_78;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][31:0] _GEN_79;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][3:0]  _GEN_80;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][1:0]  _GEN_81;	// core/src/lsu.scala:88:21, :121:22, :123:30, :147:30, :166:30
      automatic logic [3:0][1:0]  _GEN_82;	// core/src/lsu.scala:89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_10 = Writevalid & ~wq_full & wq_ptr == 3'h0;	// core/src/lsu.scala:31:49, :88:21, :90:25, :92:49, :123:30, :125:{22,32}, :126:32
      _GEN_11 = _GEN_10 | wq_0_valid;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      _GEN_12 = _GEN_10 ? io_prev_bits_ALUOut : wq_0_addr;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      _GEN_13 = _GEN_10 ? GenData : wq_0_data;	// core/src/lsu.scala:74:38, :88:21, :123:30, :125:32, :126:32
      _GEN_14 = _GEN_10 ? GenMask : wq_0_be_n;	// core/src/lsu.scala:57:38, :88:21, :123:30, :125:32, :126:32
      _GEN_15 = _GEN_10 ? newdata_op : wq_0_op;	// core/src/lsu.scala:88:21, :102:38, :123:30, :125:32, :126:32
      _GEN_16 = Writevalid & ~wq_full & wq_ptr == 3'h1;	// core/src/lsu.scala:31:49, :88:21, :90:25, :92:49, :123:30, :125:{22,32}, :126:32
      _GEN_17 = _GEN_16 | wq_1_valid;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      _GEN_18 = _GEN_16 ? io_prev_bits_ALUOut : wq_1_addr;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      _GEN_19 = _GEN_16 ? GenData : wq_1_data;	// core/src/lsu.scala:74:38, :88:21, :123:30, :125:32, :126:32
      _GEN_20 = _GEN_16 ? GenMask : wq_1_be_n;	// core/src/lsu.scala:57:38, :88:21, :123:30, :125:32, :126:32
      _GEN_21 = _GEN_16 ? newdata_op : wq_1_op;	// core/src/lsu.scala:88:21, :102:38, :123:30, :125:32, :126:32
      _GEN_22 = Writevalid & ~wq_full & wq_ptr == 3'h2;	// core/src/lsu.scala:31:49, :88:21, :90:25, :92:49, :123:30, :125:{22,32}, :126:32
      _GEN_23 = _GEN_22 | wq_2_valid;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      _GEN_24 = _GEN_22 ? io_prev_bits_ALUOut : wq_2_addr;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      _GEN_25 = _GEN_22 ? GenData : wq_2_data;	// core/src/lsu.scala:74:38, :88:21, :123:30, :125:32, :126:32
      _GEN_26 = _GEN_22 ? GenMask : wq_2_be_n;	// core/src/lsu.scala:57:38, :88:21, :123:30, :125:32, :126:32
      _GEN_27 = _GEN_22 ? newdata_op : wq_2_op;	// core/src/lsu.scala:88:21, :102:38, :123:30, :125:32, :126:32
      _GEN_28 = Writevalid & ~wq_full & wq_ptr == 3'h3;	// core/src/lsu.scala:31:49, :88:21, :90:25, :92:49, :123:30, :125:{22,32}, :126:32
      _GEN_29 = _GEN_28 | wq_3_valid;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      _GEN_30 = _GEN_28 ? io_prev_bits_ALUOut : wq_3_addr;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      _GEN_31 = _GEN_28 ? GenData : wq_3_data;	// core/src/lsu.scala:74:38, :88:21, :123:30, :125:32, :126:32
      _GEN_32 = _GEN_28 ? GenMask : wq_3_be_n;	// core/src/lsu.scala:57:38, :88:21, :123:30, :125:32, :126:32
      _GEN_33 = _GEN_28 ? newdata_op : wq_3_op;	// core/src/lsu.scala:88:21, :102:38, :123:30, :125:32, :126:32
      _GEN_34 = Writevalid & ~wq_full & wq_ptr == 3'h4;	// core/src/lsu.scala:31:49, :36:70, :88:21, :90:25, :92:49, :123:30, :125:{22,32}, :126:32
      _GEN_35 = _GEN_34 | wq_4_valid;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      _GEN_36 = _GEN_34 ? io_prev_bits_ALUOut : wq_4_addr;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      _GEN_37 = _GEN_34 ? GenData : wq_4_data;	// core/src/lsu.scala:74:38, :88:21, :123:30, :125:32, :126:32
      _GEN_38 = _GEN_34 ? GenMask : wq_4_be_n;	// core/src/lsu.scala:57:38, :88:21, :123:30, :125:32, :126:32
      _GEN_39 = _GEN_34 ? newdata_op : wq_4_op;	// core/src/lsu.scala:88:21, :102:38, :123:30, :125:32, :126:32
      _GEN_40 = Writevalid & ~wq_full & wq_ptr == 3'h5;	// core/src/lsu.scala:31:{49,71}, :88:21, :90:25, :92:49, :123:30, :125:{22,32}, :126:32
      _GEN_41 = _GEN_40 | wq_5_valid;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      _GEN_42 = _GEN_40 ? io_prev_bits_ALUOut : wq_5_addr;	// core/src/lsu.scala:88:21, :123:30, :125:32, :126:32
      _GEN_43 = _GEN_40 ? GenData : wq_5_data;	// core/src/lsu.scala:74:38, :88:21, :123:30, :125:32, :126:32
      _GEN_44 = _GEN_40 ? GenMask : wq_5_be_n;	// core/src/lsu.scala:57:38, :88:21, :123:30, :125:32, :126:32
      _GEN_45 = _GEN_40 ? newdata_op : wq_5_op;	// core/src/lsu.scala:88:21, :102:38, :123:30, :125:32, :126:32
      _GEN_46 = Writevalid & ~wq_full;	// core/src/lsu.scala:31:49, :90:25, :92:49, :123:30, :125:{22,32}, :127:28
      _GEN_47 = ~wq_full & {wq_ptr[2:1], ~(wq_ptr[0])} == 3'h0;	// core/src/lsu.scala:90:25, :92:49, :125:22, :168:32, :170:{31,37,47,60}, :176:31
      _GEN_48 = ~wq_full & {wq_ptr[2], wq_ptr[1:0] ^ 2'h2} == 3'h0;	// core/src/lsu.scala:36:70, :90:25, :92:49, :125:22, :168:32, :170:{31,37,47,60}, :176:31
      _GEN_49 = ~wq_full & {wq_ptr[2], ~(wq_ptr[1:0])} == 3'h0;	// core/src/lsu.scala:90:25, :92:49, :125:22, :168:32, :170:{31,37,47,60}, :176:31
      _GEN_50 = ~wq_full & wq_ptr == 3'h4;	// core/src/lsu.scala:36:70, :90:25, :92:49, :125:22, :168:32, :170:{31,37,60}, :176:31
      _GEN_51 = ~wq_full & wq_ptr == 3'h5;	// core/src/lsu.scala:31:71, :90:25, :92:49, :125:22, :168:32, :170:{31,37,60}, :176:31
      _GEN_52 =
        {{Writevalid ? _GEN_47 | wq_1_valid : Readvalid ? wq_0_valid : wq_1_valid},
         {_GEN_11},
         {_GEN_11},
         {wq_0_valid}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_0_valid <= _GEN_52[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_53 =
        {{Writevalid
            ? (_GEN_47 ? io_prev_bits_ALUOut : wq_1_addr)
            : Readvalid ? wq_0_addr : wq_1_addr},
         {_GEN_12},
         {_GEN_12},
         {wq_0_addr}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_0_addr <= _GEN_53[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_54 =
        {{Writevalid
            ? (_GEN_47 ? GenData : wq_1_data)
            : Readvalid ? wq_0_data : wq_1_data},
         {_GEN_13},
         {_GEN_13},
         {wq_0_data}};	// core/src/lsu.scala:31:49, :36:48, :74:38, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_0_data <= _GEN_54[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_55 =
        {{Writevalid
            ? (_GEN_47 ? GenMask : wq_1_be_n)
            : Readvalid ? wq_0_be_n : wq_1_be_n},
         {_GEN_14},
         {_GEN_14},
         {wq_0_be_n}};	// core/src/lsu.scala:31:49, :36:48, :57:38, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_0_be_n <= _GEN_55[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_56 =
        {{Writevalid ? (_GEN_47 ? newdata_op : wq_1_op) : Readvalid ? wq_0_op : wq_1_op},
         {_GEN_15},
         {_GEN_15},
         {wq_0_op}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :102:38, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_0_op <= _GEN_56[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_57 =
        {{Writevalid ? _GEN_48 | wq_2_valid : Readvalid ? wq_1_valid : wq_2_valid},
         {_GEN_17},
         {_GEN_17},
         {wq_1_valid}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_1_valid <= _GEN_57[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_58 =
        {{Writevalid
            ? (_GEN_48 ? io_prev_bits_ALUOut : wq_2_addr)
            : Readvalid ? wq_1_addr : wq_2_addr},
         {_GEN_18},
         {_GEN_18},
         {wq_1_addr}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_1_addr <= _GEN_58[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_59 =
        {{Writevalid
            ? (_GEN_48 ? GenData : wq_2_data)
            : Readvalid ? wq_1_data : wq_2_data},
         {_GEN_19},
         {_GEN_19},
         {wq_1_data}};	// core/src/lsu.scala:31:49, :36:48, :74:38, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_1_data <= _GEN_59[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_60 =
        {{Writevalid
            ? (_GEN_48 ? GenMask : wq_2_be_n)
            : Readvalid ? wq_1_be_n : wq_2_be_n},
         {_GEN_20},
         {_GEN_20},
         {wq_1_be_n}};	// core/src/lsu.scala:31:49, :36:48, :57:38, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_1_be_n <= _GEN_60[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_61 =
        {{Writevalid ? (_GEN_48 ? newdata_op : wq_2_op) : Readvalid ? wq_1_op : wq_2_op},
         {_GEN_21},
         {_GEN_21},
         {wq_1_op}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :102:38, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_1_op <= _GEN_61[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_62 =
        {{Writevalid ? _GEN_49 | wq_3_valid : Readvalid ? wq_2_valid : wq_3_valid},
         {_GEN_23},
         {_GEN_23},
         {wq_2_valid}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_2_valid <= _GEN_62[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_63 =
        {{Writevalid
            ? (_GEN_49 ? io_prev_bits_ALUOut : wq_3_addr)
            : Readvalid ? wq_2_addr : wq_3_addr},
         {_GEN_24},
         {_GEN_24},
         {wq_2_addr}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_2_addr <= _GEN_63[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_64 =
        {{Writevalid
            ? (_GEN_49 ? GenData : wq_3_data)
            : Readvalid ? wq_2_data : wq_3_data},
         {_GEN_25},
         {_GEN_25},
         {wq_2_data}};	// core/src/lsu.scala:31:49, :36:48, :74:38, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_2_data <= _GEN_64[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_65 =
        {{Writevalid
            ? (_GEN_49 ? GenMask : wq_3_be_n)
            : Readvalid ? wq_2_be_n : wq_3_be_n},
         {_GEN_26},
         {_GEN_26},
         {wq_2_be_n}};	// core/src/lsu.scala:31:49, :36:48, :57:38, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_2_be_n <= _GEN_65[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_66 =
        {{Writevalid ? (_GEN_49 ? newdata_op : wq_3_op) : Readvalid ? wq_2_op : wq_3_op},
         {_GEN_27},
         {_GEN_27},
         {wq_2_op}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :102:38, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_2_op <= _GEN_66[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_67 =
        {{Writevalid ? _GEN_50 | wq_4_valid : Readvalid ? wq_3_valid : wq_4_valid},
         {_GEN_29},
         {_GEN_29},
         {wq_3_valid}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_3_valid <= _GEN_67[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_68 =
        {{Writevalid
            ? (_GEN_50 ? io_prev_bits_ALUOut : wq_4_addr)
            : Readvalid ? wq_3_addr : wq_4_addr},
         {_GEN_30},
         {_GEN_30},
         {wq_3_addr}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_3_addr <= _GEN_68[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_69 =
        {{Writevalid
            ? (_GEN_50 ? GenData : wq_4_data)
            : Readvalid ? wq_3_data : wq_4_data},
         {_GEN_31},
         {_GEN_31},
         {wq_3_data}};	// core/src/lsu.scala:31:49, :36:48, :74:38, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_3_data <= _GEN_69[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_70 =
        {{Writevalid
            ? (_GEN_50 ? GenMask : wq_4_be_n)
            : Readvalid ? wq_3_be_n : wq_4_be_n},
         {_GEN_32},
         {_GEN_32},
         {wq_3_be_n}};	// core/src/lsu.scala:31:49, :36:48, :57:38, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_3_be_n <= _GEN_70[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_71 =
        {{Writevalid ? (_GEN_50 ? newdata_op : wq_4_op) : Readvalid ? wq_3_op : wq_4_op},
         {_GEN_33},
         {_GEN_33},
         {wq_3_op}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :102:38, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_3_op <= _GEN_71[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_72 =
        {{Writevalid ? _GEN_51 | wq_5_valid : Readvalid ? wq_4_valid : wq_5_valid},
         {_GEN_35},
         {_GEN_35},
         {wq_4_valid}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_4_valid <= _GEN_72[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_73 =
        {{Writevalid
            ? (_GEN_51 ? io_prev_bits_ALUOut : wq_5_addr)
            : Readvalid ? wq_4_addr : wq_5_addr},
         {_GEN_36},
         {_GEN_36},
         {wq_4_addr}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_4_addr <= _GEN_73[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_74 =
        {{Writevalid
            ? (_GEN_51 ? GenData : wq_5_data)
            : Readvalid ? wq_4_data : wq_5_data},
         {_GEN_37},
         {_GEN_37},
         {wq_4_data}};	// core/src/lsu.scala:31:49, :36:48, :74:38, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_4_data <= _GEN_74[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_75 =
        {{Writevalid
            ? (_GEN_51 ? GenMask : wq_5_be_n)
            : Readvalid ? wq_4_be_n : wq_5_be_n},
         {_GEN_38},
         {_GEN_38},
         {wq_4_be_n}};	// core/src/lsu.scala:31:49, :36:48, :57:38, :88:21, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_4_be_n <= _GEN_75[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_76 =
        {{Writevalid ? (_GEN_51 ? newdata_op : wq_5_op) : Readvalid ? wq_4_op : wq_5_op},
         {_GEN_39},
         {_GEN_39},
         {wq_4_op}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :102:38, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :170:{31,37}, :176:31, :181:34, :193:27
      wq_4_op <= _GEN_76[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_77 =
        {{Writevalid ? wq_full : Readvalid & wq_5_valid},
         {_GEN_41},
         {_GEN_41},
         {wq_5_valid}};	// core/src/lsu.scala:31:49, :36:48, :88:21, :92:49, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :181:34, :195:35
      wq_5_valid <= _GEN_77[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_78 =
        {{Writevalid
            ? (wq_full ? io_prev_bits_ALUOut : 32'h0)
            : Readvalid ? wq_5_addr : 32'h0},
         {_GEN_42},
         {_GEN_42},
         {wq_5_addr}};	// core/src/lsu.scala:31:49, :36:48, :88:{21,34}, :92:49, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :172:39, :178:39, :181:34, :195:35
      wq_5_addr <= _GEN_78[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_79 =
        {{Writevalid ? (wq_full ? GenData : 32'h0) : Readvalid ? wq_5_data : 32'h0},
         {_GEN_43},
         {_GEN_43},
         {wq_5_data}};	// core/src/lsu.scala:31:49, :36:48, :74:38, :88:{21,34}, :92:49, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :172:39, :178:39, :181:34, :195:35
      wq_5_data <= _GEN_79[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_80 =
        {{Writevalid
            ? (~wq_full | _GenMask_T_8 ? 4'h0 : _GenMask_T_7)
            : Readvalid ? wq_5_be_n : 4'h0},
         {_GEN_44},
         {_GEN_44},
         {wq_5_be_n}};	// core/src/lsu.scala:5:7, :31:49, :36:48, :57:38, :88:21, :92:49, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :172:39, :178:39, :181:34, :195:35
      wq_5_be_n <= _GEN_80[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_81 =
        {{Writevalid ? (wq_full ? newdata_op : 2'h0) : Readvalid ? wq_5_op : 2'h0},
         {_GEN_45},
         {_GEN_45},
         {wq_5_op}};	// core/src/lsu.scala:31:49, :36:48, :88:{21,34}, :92:49, :102:38, :121:22, :123:30, :125:32, :126:32, :147:30, :166:30, :168:32, :172:39, :178:39, :181:34, :195:35
      wq_5_op <= _GEN_81[wq_state];	// core/src/lsu.scala:88:21, :89:27, :121:22, :123:30, :147:30, :166:30
      _GEN_82 =
        {{Writevalid | ~(Readvalid | {wq_ptr[2:1], ~(wq_ptr[0])} == 3'h0) ? 2'h2 : 2'h1},
         {Writevalid ? 2'h3 : {~Readvalid, 1'h1}},
         {Writevalid | ~(Readvalid | wq_ptr == 3'h0 & ~wq_0_valid) ? 2'h2 : 2'h1},
         {wq_state}};	// core/src/lsu.scala:6:16, :31:{39,49}, :36:{48,70}, :88:21, :89:27, :90:25, :91:{28,32,35}, :121:22, :123:30, :124:26, :133:34, :134:26, :138:33, :147:30, :148:26, :157:34, :158:26, :162:26, :166:30, :167:26, :170:47, :181:34, :182:26, :186:{30,37,42}
      wq_state <= _GEN_82[wq_state];	// core/src/lsu.scala:89:27, :121:22, :123:30, :147:30, :166:30
      if (_GEN_0) begin	// core/src/lsu.scala:121:22
        if (~_GEN_46 | wq_ptr == 3'h5) begin	// core/src/lsu.scala:31:71, :90:25, :123:30, :125:32, :127:{28,61}
        end
        else	// core/src/lsu.scala:90:25, :123:30, :125:32, :127:28
          wq_ptr <= wq_ptr + 3'h1;	// core/src/lsu.scala:90:25, :126:32, :127:81
      end
      else if (_GEN_3) begin	// core/src/lsu.scala:121:22
        if (~_GEN_46 | wq_ptr == 3'h5) begin	// core/src/lsu.scala:31:71, :90:25, :123:30, :125:32, :127:28, :147:30, :149:32, :151:{28,61}
        end
        else	// core/src/lsu.scala:90:25, :147:30, :149:32, :151:28
          wq_ptr <= wq_ptr + 3'h1;	// core/src/lsu.scala:90:25, :126:32, :151:81
      end
      else if (~(&wq_state) | Writevalid | Readvalid) begin	// core/src/lsu.scala:31:49, :36:48, :89:27, :90:25, :121:22, :166:30
      end
      else	// core/src/lsu.scala:90:25, :121:22, :166:30
        wq_ptr <= wq_ptr - 3'h1;	// core/src/lsu.scala:90:25, :196:34
      state <= ~state & (wq_stall | state);	// core/src/lsu.scala:121:22, :123:30, :201:24, :202:{17,55}, :203:19
    end
    if (_GEN_7) begin	// core/src/lsu.scala:235:42
      regs_bits_MemOut <= FixLoad;	// core/src/lsu.scala:219:38, :228:19
      regs_bits_ALUOut <= io_prev_bits_ALUOut;	// core/src/lsu.scala:228:19
      regs_bits_wbSel <= io_prev_bits_wbSel;	// core/src/lsu.scala:228:19
      regs_bits_wbDst <= io_prev_bits_wbDst;	// core/src/lsu.scala:228:19
      regs_bits_rd <= io_prev_bits_rd;	// core/src/lsu.scala:228:19
    end
    regs_valid <= _GEN_7;	// core/src/lsu.scala:228:19, :235:42
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/lsu.scala:5:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/lsu.scala:5:7
      `FIRRTL_BEFORE_INITIAL	// core/src/lsu.scala:5:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/lsu.scala:5:7
      automatic logic [31:0] _RANDOM[0:15];	// core/src/lsu.scala:5:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/lsu.scala:5:7
        `INIT_RANDOM_PROLOG_	// core/src/lsu.scala:5:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/lsu.scala:5:7
        for (logic [4:0] i = 5'h0; i < 5'h10; i += 5'h1) begin
          _RANDOM[i[3:0]] = `RANDOM;	// core/src/lsu.scala:5:7
        end	// core/src/lsu.scala:5:7
        wq_0_valid = _RANDOM[4'h0][0];	// core/src/lsu.scala:5:7, :88:21
        wq_0_addr = {_RANDOM[4'h0][31:1], _RANDOM[4'h1][0]};	// core/src/lsu.scala:5:7, :88:21
        wq_0_data = {_RANDOM[4'h1][31:1], _RANDOM[4'h2][0]};	// core/src/lsu.scala:5:7, :88:21
        wq_0_be_n = _RANDOM[4'h2][4:1];	// core/src/lsu.scala:5:7, :88:21
        wq_0_op = _RANDOM[4'h2][6:5];	// core/src/lsu.scala:5:7, :88:21
        wq_1_valid = _RANDOM[4'h2][7];	// core/src/lsu.scala:5:7, :88:21
        wq_1_addr = {_RANDOM[4'h2][31:8], _RANDOM[4'h3][7:0]};	// core/src/lsu.scala:5:7, :88:21
        wq_1_data = {_RANDOM[4'h3][31:8], _RANDOM[4'h4][7:0]};	// core/src/lsu.scala:5:7, :88:21
        wq_1_be_n = _RANDOM[4'h4][11:8];	// core/src/lsu.scala:5:7, :88:21
        wq_1_op = _RANDOM[4'h4][13:12];	// core/src/lsu.scala:5:7, :88:21
        wq_2_valid = _RANDOM[4'h4][14];	// core/src/lsu.scala:5:7, :88:21
        wq_2_addr = {_RANDOM[4'h4][31:15], _RANDOM[4'h5][14:0]};	// core/src/lsu.scala:5:7, :88:21
        wq_2_data = {_RANDOM[4'h5][31:15], _RANDOM[4'h6][14:0]};	// core/src/lsu.scala:5:7, :88:21
        wq_2_be_n = _RANDOM[4'h6][18:15];	// core/src/lsu.scala:5:7, :88:21
        wq_2_op = _RANDOM[4'h6][20:19];	// core/src/lsu.scala:5:7, :88:21
        wq_3_valid = _RANDOM[4'h6][21];	// core/src/lsu.scala:5:7, :88:21
        wq_3_addr = {_RANDOM[4'h6][31:22], _RANDOM[4'h7][21:0]};	// core/src/lsu.scala:5:7, :88:21
        wq_3_data = {_RANDOM[4'h7][31:22], _RANDOM[4'h8][21:0]};	// core/src/lsu.scala:5:7, :88:21
        wq_3_be_n = _RANDOM[4'h8][25:22];	// core/src/lsu.scala:5:7, :88:21
        wq_3_op = _RANDOM[4'h8][27:26];	// core/src/lsu.scala:5:7, :88:21
        wq_4_valid = _RANDOM[4'h8][28];	// core/src/lsu.scala:5:7, :88:21
        wq_4_addr = {_RANDOM[4'h8][31:29], _RANDOM[4'h9][28:0]};	// core/src/lsu.scala:5:7, :88:21
        wq_4_data = {_RANDOM[4'h9][31:29], _RANDOM[4'hA][28:0]};	// core/src/lsu.scala:5:7, :88:21
        wq_4_be_n = {_RANDOM[4'hA][31:29], _RANDOM[4'hB][0]};	// core/src/lsu.scala:5:7, :88:21
        wq_4_op = _RANDOM[4'hB][2:1];	// core/src/lsu.scala:5:7, :88:21
        wq_5_valid = _RANDOM[4'hB][3];	// core/src/lsu.scala:5:7, :88:21
        wq_5_addr = {_RANDOM[4'hB][31:4], _RANDOM[4'hC][3:0]};	// core/src/lsu.scala:5:7, :88:21
        wq_5_data = {_RANDOM[4'hC][31:4], _RANDOM[4'hD][3:0]};	// core/src/lsu.scala:5:7, :88:21
        wq_5_be_n = _RANDOM[4'hD][7:4];	// core/src/lsu.scala:5:7, :88:21
        wq_5_op = _RANDOM[4'hD][9:8];	// core/src/lsu.scala:5:7, :88:21
        wq_state = _RANDOM[4'hD][11:10];	// core/src/lsu.scala:5:7, :88:21, :89:27
        wq_ptr = _RANDOM[4'hD][14:12];	// core/src/lsu.scala:5:7, :88:21, :90:25
        state = _RANDOM[4'hD][15];	// core/src/lsu.scala:5:7, :88:21, :201:24
        regs_bits_MemOut = {_RANDOM[4'hD][31:16], _RANDOM[4'hE][15:0]};	// core/src/lsu.scala:5:7, :88:21, :228:19
        regs_bits_ALUOut = {_RANDOM[4'hE][31:16], _RANDOM[4'hF][15:0]};	// core/src/lsu.scala:5:7, :228:19
        regs_bits_wbSel = _RANDOM[4'hF][17:16];	// core/src/lsu.scala:5:7, :228:19
        regs_bits_wbDst = _RANDOM[4'hF][19:18];	// core/src/lsu.scala:5:7, :228:19
        regs_bits_rd = _RANDOM[4'hF][24:20];	// core/src/lsu.scala:5:7, :228:19
        regs_valid = _RANDOM[4'hF][25];	// core/src/lsu.scala:5:7, :228:19
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/lsu.scala:5:7
      `FIRRTL_AFTER_INITIAL	// core/src/lsu.scala:5:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_ext_out_valid = wq_state[1] | Readvalid;	// core/src/lsu.scala:5:7, :36:48, :89:27, :269:{33,37}
  assign io_ext_out_bits_data_wen = ~Readvalid;	// core/src/lsu.scala:5:7, :31:71, :36:48, :248:21, :251:30, :260:30
  assign io_ext_out_bits_data_in = Readvalid ? 32'h0 : wq_0_data;	// core/src/lsu.scala:5:7, :36:48, :88:{21,34}, :248:21, :254:33, :263:33
  assign io_ext_out_bits_addr = Readvalid ? io_prev_bits_ALUOut : wq_0_addr;	// core/src/lsu.scala:5:7, :36:48, :88:21, :248:21, :249:30, :258:30
  assign io_ext_out_bits_be_n = Readvalid ? 4'h0 : wq_0_be_n;	// core/src/lsu.scala:5:7, :36:48, :88:21, :248:21, :255:30, :264:30
  assign io_ext_out_bits_oe_n = ~Readvalid;	// core/src/lsu.scala:5:7, :31:71, :36:48, :248:21, :251:30, :260:30
  assign io_ext_out_bits_we_n = Readvalid;	// core/src/lsu.scala:5:7, :36:48
  assign io_next_valid = io_next_valid_0;	// core/src/lsu.scala:5:7, :296:16
  assign io_next_bits_MemOut = next_MemOut;	// core/src/lsu.scala:5:7, :273:17, :274:21, :281:14
  assign io_next_bits_ALUOut = next_ALUOut;	// core/src/lsu.scala:5:7, :273:17, :275:21, :281:14
  assign io_next_bits_wbSel = next_wbSel;	// core/src/lsu.scala:5:7, :273:17, :276:20, :281:14
  assign io_next_bits_wbDst = next_wbDst;	// core/src/lsu.scala:5:7, :273:17, :277:20, :281:14
  assign io_next_bits_rd = next_rd;	// core/src/lsu.scala:5:7, :273:17, :278:17, :281:14
  assign io_stall = wq_stall & ~state;	// core/src/lsu.scala:5:7, :121:22, :123:30, :201:24, :267:{26,29}
  assign io_l1_Dst =
    _GEN_6
      ? (io_prev_bits_wbDst == 2'h1
           ? 5'h1
           : io_prev_bits_wbDst == 2'h0 ? io_prev_bits_rd : 5'h0)
      : 5'h0;	// core/src/lsu.scala:5:7, :88:34, :89:27, :285:{24,48}, :286:{19,57}, :293:19
  assign io_l1_Sel = _GEN_6 ? io_prev_bits_wbSel : 2'h3;	// core/src/lsu.scala:5:7, :36:70, :285:{24,48}, :290:19, :294:19
  assign io_l1_ALU = io_prev_bits_ALUOut;	// core/src/lsu.scala:5:7
  assign io_l1_Mem = FixLoad;	// core/src/lsu.scala:5:7, :219:38
  assign io_l2_Dst =
    io_next_valid_0
      ? (next_wbDst == 2'h1 ? 5'h1 : next_wbDst == 2'h0 ? next_rd : 5'h0)
      : 5'h0;	// core/src/lsu.scala:5:7, :88:34, :89:27, :273:17, :277:20, :278:17, :281:14, :296:{16,31}, :297:{19,49}, :304:19
  assign io_l2_Sel = io_next_valid_0 ? next_wbSel : 2'h3;	// core/src/lsu.scala:5:7, :36:70, :273:17, :276:20, :281:14, :296:{16,31}, :301:19, :305:19
  assign io_l2_ALU = next_ALUOut;	// core/src/lsu.scala:5:7, :273:17, :275:21, :281:14
  assign io_l2_Mem = next_MemOut;	// core/src/lsu.scala:5:7, :273:17, :274:21, :281:14
endmodule

module bru(	// core/src/bru.scala:5:7
  input         io_prev_valid,	// core/src/bru.scala:6:16
                io_prev_bits_Zero,	// core/src/bru.scala:6:16
                io_prev_bits_SLess,	// core/src/bru.scala:6:16
                io_prev_bits_ULess,	// core/src/bru.scala:6:16
  input  [3:0]  io_prev_bits_branchOp,	// core/src/bru.scala:6:16
  input  [31:0] io_prev_bits_pcadd4,	// core/src/bru.scala:6:16
                io_prev_bits_pcoff,	// core/src/bru.scala:6:16
                io_prev_bits_jirlpc,	// core/src/bru.scala:6:16
                io_prev_bits_pc,	// core/src/bru.scala:6:16
                io_prev_bits_npc,	// core/src/bru.scala:6:16
  input         io_stall,	// core/src/bru.scala:6:16
  output        io_flush,	// core/src/bru.scala:6:16
                io_update,	// core/src/bru.scala:6:16
                io_u_branch,	// core/src/bru.scala:6:16
                io_u_type,	// core/src/bru.scala:6:16
  output [31:0] io_u_pc,	// core/src/bru.scala:6:16
                io_u_target,	// core/src/bru.scala:6:16
                io_nextPC	// core/src/bru.scala:6:16
);

  wire        branch =
    io_prev_bits_branchOp == 4'h5
      ? ~io_prev_bits_ULess
      : io_prev_bits_branchOp == 4'h4
          ? io_prev_bits_ULess
          : io_prev_bits_branchOp == 4'h3
              ? ~io_prev_bits_SLess
              : io_prev_bits_branchOp == 4'h2
                  ? io_prev_bits_SLess
                  : io_prev_bits_branchOp == 4'h1
                      ? ~io_prev_bits_Zero
                      : io_prev_bits_branchOp == 4'h0
                          ? io_prev_bits_Zero
                          : io_prev_bits_branchOp == 4'h7 | io_prev_bits_branchOp == 4'h6
                            | io_prev_bits_branchOp == 4'h8;	// core/src/bru.scala:28:56, :33:27, :35:27, :37:28
  wire [31:0] btarget =
    io_prev_bits_branchOp == 4'h8 ? io_prev_bits_jirlpc : io_prev_bits_pcoff;	// core/src/bru.scala:28:56, :39:59
  wire [31:0] nextPC = branch ? btarget : io_prev_bits_pcadd4;	// core/src/bru.scala:28:56, :39:59, :42:21
  assign io_flush = (|(nextPC ^ io_prev_bits_npc)) & io_prev_valid & ~io_stall;	// core/src/bru.scala:5:7, :42:21, :44:{76,79}, core/src/bundles.scala:8:{14,19}
  assign io_update = io_prev_bits_branchOp != 4'h9 & io_prev_valid & ~io_stall;	// core/src/bru.scala:5:7, :44:79, :45:{77,102}, core/src/bundles.scala:8:19
  assign io_u_branch = branch;	// core/src/bru.scala:5:7, :28:56
  assign io_u_type =
    ~(io_prev_bits_branchOp == 4'h7 | io_prev_bits_branchOp == 4'h6)
    & io_prev_bits_branchOp != 4'h8;	// core/src/bru.scala:5:7, :28:56, :46:55
  assign io_u_pc = io_prev_bits_pc;	// core/src/bru.scala:5:7
  assign io_u_target = btarget;	// core/src/bru.scala:5:7, :39:59
  assign io_nextPC = nextPC;	// core/src/bru.scala:5:7, :42:21
endmodule

module buffer_4(	// core/src/core.scala:92:7
  input         clock,	// core/src/core.scala:92:7
                reset,	// core/src/core.scala:92:7
                io_prev_valid,	// core/src/core.scala:93:16
  input  [31:0] io_prev_bits_MemOut,	// core/src/core.scala:93:16
                io_prev_bits_ALUOut,	// core/src/core.scala:93:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/core.scala:93:16
                io_prev_bits_wbDst,	// core/src/core.scala:93:16
  input  [4:0]  io_prev_bits_rd,	// core/src/core.scala:93:16
  output        io_next_valid,	// core/src/core.scala:93:16
  output [31:0] io_next_bits_MemOut,	// core/src/core.scala:93:16
                io_next_bits_ALUOut,	// core/src/core.scala:93:16
  output [1:0]  io_next_bits_wbSel,	// core/src/core.scala:93:16
                io_next_bits_wbDst,	// core/src/core.scala:93:16
  output [4:0]  io_next_bits_rd	// core/src/core.scala:93:16
);

  reg        state;	// core/src/core.scala:99:24
  reg [31:0] regs_MemOut;	// core/src/core.scala:101:19
  reg [31:0] regs_ALUOut;	// core/src/core.scala:101:19
  reg [1:0]  regs_wbSel;	// core/src/core.scala:101:19
  reg [1:0]  regs_wbDst;	// core/src/core.scala:101:19
  reg [4:0]  regs_rd;	// core/src/core.scala:101:19
  always @(posedge clock) begin	// core/src/core.scala:92:7
    if (reset)	// core/src/core.scala:92:7
      state <= 1'h0;	// core/src/core.scala:93:16, :99:24, :101:19, :103:20, :107:{21,54}, :110:14, :115:14
    else	// core/src/core.scala:92:7
      state <= io_prev_valid;	// core/src/core.scala:99:24
    if (io_prev_valid) begin	// core/src/core.scala:93:16
      regs_MemOut <= io_prev_bits_MemOut;	// core/src/core.scala:101:19
      regs_ALUOut <= io_prev_bits_ALUOut;	// core/src/core.scala:101:19
      regs_wbSel <= io_prev_bits_wbSel;	// core/src/core.scala:101:19
      regs_wbDst <= io_prev_bits_wbDst;	// core/src/core.scala:101:19
      regs_rd <= io_prev_bits_rd;	// core/src/core.scala:101:19
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/core.scala:92:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/core.scala:92:7
      `FIRRTL_BEFORE_INITIAL	// core/src/core.scala:92:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/core.scala:92:7
      automatic logic [31:0] _RANDOM[0:2];	// core/src/core.scala:92:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/core.scala:92:7
        `INIT_RANDOM_PROLOG_	// core/src/core.scala:92:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/core.scala:92:7
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// core/src/core.scala:92:7
        end	// core/src/core.scala:92:7
        state = _RANDOM[2'h0][0];	// core/src/core.scala:92:7, :99:24
        regs_MemOut = {_RANDOM[2'h0][31:1], _RANDOM[2'h1][0]};	// core/src/core.scala:92:7, :99:24, :101:19
        regs_ALUOut = {_RANDOM[2'h1][31:1], _RANDOM[2'h2][0]};	// core/src/core.scala:92:7, :101:19
        regs_wbSel = _RANDOM[2'h2][2:1];	// core/src/core.scala:92:7, :101:19
        regs_wbDst = _RANDOM[2'h2][4:3];	// core/src/core.scala:92:7, :101:19
        regs_rd = _RANDOM[2'h2][9:5];	// core/src/core.scala:92:7, :101:19
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/core.scala:92:7
      `FIRRTL_AFTER_INITIAL	// core/src/core.scala:92:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_next_valid = state;	// core/src/core.scala:92:7, :99:24
  assign io_next_bits_MemOut = regs_MemOut;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_ALUOut = regs_ALUOut;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_wbSel = regs_wbSel;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_wbDst = regs_wbDst;	// core/src/core.scala:92:7, :101:19
  assign io_next_bits_rd = regs_rd;	// core/src/core.scala:92:7, :101:19
endmodule

module wbu(	// core/src/wbu.scala:5:7
  input         io_prev_valid,	// core/src/wbu.scala:6:16
  input  [31:0] io_prev_bits_MemOut,	// core/src/wbu.scala:6:16
                io_prev_bits_ALUOut,	// core/src/wbu.scala:6:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/wbu.scala:6:16
                io_prev_bits_wbDst,	// core/src/wbu.scala:6:16
  input  [4:0]  io_prev_bits_rd,	// core/src/wbu.scala:6:16
  output        io_wen,	// core/src/wbu.scala:6:16
  output [4:0]  io_waddr,	// core/src/wbu.scala:6:16
  output [31:0] io_wdata,	// core/src/wbu.scala:6:16
  input  [31:0] io_P,	// core/src/wbu.scala:6:16
  output [4:0]  io_wb_Dst,	// core/src/wbu.scala:6:16
  output [1:0]  io_wb_Sel,	// core/src/wbu.scala:6:16
  output [31:0] io_wb_ALU,	// core/src/wbu.scala:6:16
                io_wb_Mem,	// core/src/wbu.scala:6:16
                io_wb_Mul	// core/src/wbu.scala:6:16
);

  wire [3:0][31:0] _GEN = {{32'h0}, {io_P}, {io_prev_bits_MemOut}, {io_prev_bits_ALUOut}};	// core/src/wbu.scala:26:52
  assign io_wen = io_prev_bits_wbSel != 2'h3 & io_prev_valid;	// core/src/wbu.scala:5:7, :21:{34,50}
  assign io_waddr =
    io_prev_bits_wbDst == 2'h1 ? 5'h1 : (|io_prev_bits_wbDst) ? 5'h0 : io_prev_bits_rd;	// core/src/wbu.scala:5:7, :22:52
  assign io_wdata = _GEN[io_prev_bits_wbSel];	// core/src/wbu.scala:5:7, :26:52
  assign io_wb_Dst =
    io_prev_valid
      ? (io_prev_bits_wbDst == 2'h1
           ? 5'h1
           : (|io_prev_bits_wbDst) ? 5'h0 : io_prev_bits_rd)
      : 5'h0;	// core/src/wbu.scala:5:7, :22:52, :32:25, :33:{19,57}, :40:19
  assign io_wb_Sel = io_prev_valid ? io_prev_bits_wbSel : 2'h3;	// core/src/wbu.scala:5:7, :21:34, :32:25, :37:19, :41:19
  assign io_wb_ALU = io_prev_bits_ALUOut;	// core/src/wbu.scala:5:7
  assign io_wb_Mem = io_prev_bits_MemOut;	// core/src/wbu.scala:5:7
  assign io_wb_Mul = io_P;	// core/src/wbu.scala:5:7
endmodule

module forward(	// core/src/idu.scala:5:7
  input  [4:0] io_RJ,	// core/src/idu.scala:6:16
               io_RK,	// core/src/idu.scala:6:16
               io_RD,	// core/src/idu.scala:6:16
               io_ex_Dst,	// core/src/idu.scala:6:16
               io_l1_Dst,	// core/src/idu.scala:6:16
               io_l2_Dst,	// core/src/idu.scala:6:16
               io_wb_Dst,	// core/src/idu.scala:6:16
  input  [1:0] io_ex_Sel,	// core/src/idu.scala:6:16
               io_l1_Sel,	// core/src/idu.scala:6:16
  input        io_l1_stall,	// core/src/idu.scala:6:16
  input  [1:0] io_l2_Sel,	// core/src/idu.scala:6:16
               io_wb_Sel,	// core/src/idu.scala:6:16
  output       io_stall,	// core/src/idu.scala:6:16
  output [3:0] io_Fw_RJ,	// core/src/idu.scala:6:16
               io_Fw_RK,	// core/src/idu.scala:6:16
               io_Fw_RD	// core/src/idu.scala:6:16
);

  wire [3:0] _io_Fw_RD_T_37 = io_l1_stall ? 4'h8 : 4'h2;	// core/src/idu.scala:38:78, src/main/scala/chisel3/util/Mux.scala:126:16
  wire       _GEN = io_l1_Sel != 2'h2;	// core/src/bundles.scala:8:19, core/src/idu.scala:34:64
  wire       _GEN_0 = io_l2_Sel != 2'h2;	// core/src/bundles.scala:8:19, core/src/idu.scala:34:64
  wire [3:0] io_Fw_RJ_0 =
    io_RJ == 5'h0
      ? 4'h9
      : (io_RJ ^ io_ex_Dst) == 5'h0
          ? (io_ex_Sel == 2'h0
               ? 4'h0
               : {3'h4, ~({io_ex_Sel[1], ~(io_ex_Sel[0])} == 2'h0 | io_ex_Sel == 2'h2)})
          : (io_RJ ^ io_l1_Dst) == 5'h0
              ? (io_l1_Sel == 2'h0
                   ? 4'h1
                   : {io_l1_Sel[1], ~(io_l1_Sel[0])} == 2'h0
                       ? _io_Fw_RD_T_37
                       : {3'h4, _GEN})
              : (io_RJ ^ io_l2_Dst) == 5'h0
                  ? (io_l2_Sel == 2'h0
                       ? 4'h3
                       : {io_l2_Sel[1], ~(io_l2_Sel[0])} == 2'h0 ? 4'h4 : {3'h4, _GEN_0})
                  : (io_RJ ^ io_wb_Dst) == 5'h0
                      ? (io_wb_Sel == 2'h0
                           ? 4'h5
                           : {io_wb_Sel[1], ~(io_wb_Sel[0])} == 2'h0
                               ? 4'h6
                               : io_wb_Sel == 2'h2 ? 4'h7 : 4'h9)
                      : 4'h9;	// core/src/bundles.scala:8:{14,19}, core/src/idu.scala:29:12, :34:64, :38:78, src/main/scala/chisel3/util/Mux.scala:126:16
  wire [3:0] io_Fw_RK_0 =
    io_RK == 5'h0
      ? 4'h9
      : (io_RK ^ io_ex_Dst) == 5'h0
          ? (io_ex_Sel == 2'h0
               ? 4'h0
               : {3'h4, ~({io_ex_Sel[1], ~(io_ex_Sel[0])} == 2'h0 | io_ex_Sel == 2'h2)})
          : (io_RK ^ io_l1_Dst) == 5'h0
              ? (io_l1_Sel == 2'h0
                   ? 4'h1
                   : {io_l1_Sel[1], ~(io_l1_Sel[0])} == 2'h0
                       ? _io_Fw_RD_T_37
                       : {3'h4, _GEN})
              : (io_RK ^ io_l2_Dst) == 5'h0
                  ? (io_l2_Sel == 2'h0
                       ? 4'h3
                       : {io_l2_Sel[1], ~(io_l2_Sel[0])} == 2'h0 ? 4'h4 : {3'h4, _GEN_0})
                  : (io_RK ^ io_wb_Dst) == 5'h0
                      ? (io_wb_Sel == 2'h0
                           ? 4'h5
                           : {io_wb_Sel[1], ~(io_wb_Sel[0])} == 2'h0
                               ? 4'h6
                               : io_wb_Sel == 2'h2 ? 4'h7 : 4'h9)
                      : 4'h9;	// core/src/bundles.scala:8:{14,19}, core/src/idu.scala:29:12, :34:64, :38:78, src/main/scala/chisel3/util/Mux.scala:126:16
  wire [3:0] io_Fw_RD_0 =
    io_RD == 5'h0
      ? 4'h9
      : (io_RD ^ io_ex_Dst) == 5'h0
          ? (io_ex_Sel == 2'h0
               ? 4'h0
               : {3'h4, ~({io_ex_Sel[1], ~(io_ex_Sel[0])} == 2'h0 | io_ex_Sel == 2'h2)})
          : (io_RD ^ io_l1_Dst) == 5'h0
              ? (io_l1_Sel == 2'h0
                   ? 4'h1
                   : {io_l1_Sel[1], ~(io_l1_Sel[0])} == 2'h0
                       ? _io_Fw_RD_T_37
                       : {3'h4, _GEN})
              : (io_RD ^ io_l2_Dst) == 5'h0
                  ? (io_l2_Sel == 2'h0
                       ? 4'h3
                       : {io_l2_Sel[1], ~(io_l2_Sel[0])} == 2'h0 ? 4'h4 : {3'h4, _GEN_0})
                  : (io_RD ^ io_wb_Dst) == 5'h0
                      ? (io_wb_Sel == 2'h0
                           ? 4'h5
                           : {io_wb_Sel[1], ~(io_wb_Sel[0])} == 2'h0
                               ? 4'h6
                               : io_wb_Sel == 2'h2 ? 4'h7 : 4'h9)
                      : 4'h9;	// core/src/bundles.scala:8:{14,19}, core/src/idu.scala:29:12, :34:64, :38:78, src/main/scala/chisel3/util/Mux.scala:126:16
  assign io_stall = io_Fw_RJ_0 == 4'h8 | io_Fw_RK_0 == 4'h8 | io_Fw_RD_0 == 4'h8;	// core/src/bundles.scala:8:19, core/src/idu.scala:5:7, :29:12, :60:74, src/main/scala/chisel3/util/Mux.scala:126:16
  assign io_Fw_RJ = io_Fw_RJ_0;	// core/src/idu.scala:5:7, :29:12
  assign io_Fw_RK = io_Fw_RK_0;	// core/src/idu.scala:5:7, :29:12
  assign io_Fw_RD = io_Fw_RD_0;	// core/src/idu.scala:5:7, :29:12
endmodule

module core(	// core/src/core.scala:5:7
  input         clock,	// core/src/core.scala:5:7
                reset,	// core/src/core.scala:5:7
  input  [31:0] io_ifu_in_bits_data_out,	// core/src/core.scala:6:16
  input         io_ifu_out_ready,	// core/src/core.scala:6:16
  output        io_ifu_out_valid,	// core/src/core.scala:6:16
  output [31:0] io_ifu_out_bits_addr,	// core/src/core.scala:6:16
  input  [31:0] io_lsu_in_bits_data_out,	// core/src/core.scala:6:16
  output        io_lsu_out_valid,	// core/src/core.scala:6:16
                io_lsu_out_bits_data_wen,	// core/src/core.scala:6:16
  output [31:0] io_lsu_out_bits_data_in,	// core/src/core.scala:6:16
                io_lsu_out_bits_addr,	// core/src/core.scala:6:16
  output [3:0]  io_lsu_out_bits_be_n,	// core/src/core.scala:6:16
  output        io_lsu_out_bits_oe_n,	// core/src/core.scala:6:16
                io_lsu_out_bits_we_n	// core/src/core.scala:6:16
);

  wire        _forward_io_stall;	// core/src/core.scala:29:25
  wire [3:0]  _forward_io_Fw_RJ;	// core/src/core.scala:29:25
  wire [3:0]  _forward_io_Fw_RK;	// core/src/core.scala:29:25
  wire [3:0]  _forward_io_Fw_RD;	// core/src/core.scala:29:25
  wire        _wbu_io_wen;	// core/src/core.scala:22:21
  wire [4:0]  _wbu_io_waddr;	// core/src/core.scala:22:21
  wire [31:0] _wbu_io_wdata;	// core/src/core.scala:22:21
  wire [4:0]  _wbu_io_wb_Dst;	// core/src/core.scala:22:21
  wire [1:0]  _wbu_io_wb_Sel;	// core/src/core.scala:22:21
  wire [31:0] _wbu_io_wb_ALU;	// core/src/core.scala:22:21
  wire [31:0] _wbu_io_wb_Mem;	// core/src/core.scala:22:21
  wire [31:0] _wbu_io_wb_Mul;	// core/src/core.scala:22:21
  wire        _lsu_wbu_io_next_valid;	// core/src/core.scala:21:25
  wire [31:0] _lsu_wbu_io_next_bits_MemOut;	// core/src/core.scala:21:25
  wire [31:0] _lsu_wbu_io_next_bits_ALUOut;	// core/src/core.scala:21:25
  wire [1:0]  _lsu_wbu_io_next_bits_wbSel;	// core/src/core.scala:21:25
  wire [1:0]  _lsu_wbu_io_next_bits_wbDst;	// core/src/core.scala:21:25
  wire [4:0]  _lsu_wbu_io_next_bits_rd;	// core/src/core.scala:21:25
  wire        _bru_io_flush;	// core/src/core.scala:20:21
  wire        _bru_io_update;	// core/src/core.scala:20:21
  wire        _bru_io_u_branch;	// core/src/core.scala:20:21
  wire        _bru_io_u_type;	// core/src/core.scala:20:21
  wire [31:0] _bru_io_u_pc;	// core/src/core.scala:20:21
  wire [31:0] _bru_io_u_target;	// core/src/core.scala:20:21
  wire [31:0] _bru_io_nextPC;	// core/src/core.scala:20:21
  wire        _lsu_io_next_valid;	// core/src/core.scala:19:21
  wire [31:0] _lsu_io_next_bits_MemOut;	// core/src/core.scala:19:21
  wire [31:0] _lsu_io_next_bits_ALUOut;	// core/src/core.scala:19:21
  wire [1:0]  _lsu_io_next_bits_wbSel;	// core/src/core.scala:19:21
  wire [1:0]  _lsu_io_next_bits_wbDst;	// core/src/core.scala:19:21
  wire [4:0]  _lsu_io_next_bits_rd;	// core/src/core.scala:19:21
  wire        _lsu_io_stall;	// core/src/core.scala:19:21
  wire [4:0]  _lsu_io_l1_Dst;	// core/src/core.scala:19:21
  wire [1:0]  _lsu_io_l1_Sel;	// core/src/core.scala:19:21
  wire [31:0] _lsu_io_l1_ALU;	// core/src/core.scala:19:21
  wire [31:0] _lsu_io_l1_Mem;	// core/src/core.scala:19:21
  wire [4:0]  _lsu_io_l2_Dst;	// core/src/core.scala:19:21
  wire [1:0]  _lsu_io_l2_Sel;	// core/src/core.scala:19:21
  wire [31:0] _lsu_io_l2_ALU;	// core/src/core.scala:19:21
  wire [31:0] _lsu_io_l2_Mem;	// core/src/core.scala:19:21
  wire        _exu_bru_io_next_valid;	// core/src/core.scala:18:25
  wire        _exu_bru_io_next_bits_Zero;	// core/src/core.scala:18:25
  wire        _exu_bru_io_next_bits_SLess;	// core/src/core.scala:18:25
  wire        _exu_bru_io_next_bits_ULess;	// core/src/core.scala:18:25
  wire [3:0]  _exu_bru_io_next_bits_branchOp;	// core/src/core.scala:18:25
  wire [31:0] _exu_bru_io_next_bits_pcadd4;	// core/src/core.scala:18:25
  wire [31:0] _exu_bru_io_next_bits_pcoff;	// core/src/core.scala:18:25
  wire [31:0] _exu_bru_io_next_bits_jirlpc;	// core/src/core.scala:18:25
  wire [31:0] _exu_bru_io_next_bits_pc;	// core/src/core.scala:18:25
  wire [31:0] _exu_bru_io_next_bits_npc;	// core/src/core.scala:18:25
  wire        _exu_lsu_io_prev_ready;	// core/src/core.scala:17:25
  wire        _exu_lsu_io_next_valid;	// core/src/core.scala:17:25
  wire [31:0] _exu_lsu_io_next_bits_ALUOut;	// core/src/core.scala:17:25
  wire [3:0]  _exu_lsu_io_next_bits_memOp;	// core/src/core.scala:17:25
  wire [1:0]  _exu_lsu_io_next_bits_wbSel;	// core/src/core.scala:17:25
  wire [1:0]  _exu_lsu_io_next_bits_wbDst;	// core/src/core.scala:17:25
  wire [4:0]  _exu_lsu_io_next_bits_rd;	// core/src/core.scala:17:25
  wire [31:0] _exu_lsu_io_next_bits_rd_data;	// core/src/core.scala:17:25
  wire        _exu_io_prev_ready;	// core/src/core.scala:16:21
  wire        _exu_io_next_valid;	// core/src/core.scala:16:21
  wire [31:0] _exu_io_next_bits_ALUOut;	// core/src/core.scala:16:21
  wire [3:0]  _exu_io_next_bits_memOp;	// core/src/core.scala:16:21
  wire [1:0]  _exu_io_next_bits_wbSel;	// core/src/core.scala:16:21
  wire [1:0]  _exu_io_next_bits_wbDst;	// core/src/core.scala:16:21
  wire [4:0]  _exu_io_next_bits_rd;	// core/src/core.scala:16:21
  wire [31:0] _exu_io_next_bits_rd_data;	// core/src/core.scala:16:21
  wire        _exu_io_bru_valid;	// core/src/core.scala:16:21
  wire        _exu_io_bru_bits_Zero;	// core/src/core.scala:16:21
  wire        _exu_io_bru_bits_SLess;	// core/src/core.scala:16:21
  wire        _exu_io_bru_bits_ULess;	// core/src/core.scala:16:21
  wire [3:0]  _exu_io_bru_bits_branchOp;	// core/src/core.scala:16:21
  wire [31:0] _exu_io_bru_bits_pcadd4;	// core/src/core.scala:16:21
  wire [31:0] _exu_io_bru_bits_pcoff;	// core/src/core.scala:16:21
  wire [31:0] _exu_io_bru_bits_jirlpc;	// core/src/core.scala:16:21
  wire [31:0] _exu_io_bru_bits_pc;	// core/src/core.scala:16:21
  wire [31:0] _exu_io_bru_bits_npc;	// core/src/core.scala:16:21
  wire [31:0] _exu_io_P;	// core/src/core.scala:16:21
  wire [4:0]  _exu_io_ex_Dst;	// core/src/core.scala:16:21
  wire [1:0]  _exu_io_ex_Sel;	// core/src/core.scala:16:21
  wire [31:0] _exu_io_ex_ALU;	// core/src/core.scala:16:21
  wire        _idu_exu_io_prev_ready;	// core/src/core.scala:15:25
  wire        _idu_exu_io_next_valid;	// core/src/core.scala:15:25
  wire [3:0]  _idu_exu_io_next_bits_branchOp;	// core/src/core.scala:15:25
  wire [3:0]  _idu_exu_io_next_bits_aluOp;	// core/src/core.scala:15:25
  wire [1:0]  _idu_exu_io_next_bits_aluAsrc;	// core/src/core.scala:15:25
  wire [2:0]  _idu_exu_io_next_bits_aluBsrc;	// core/src/core.scala:15:25
  wire [3:0]  _idu_exu_io_next_bits_memOp;	// core/src/core.scala:15:25
  wire [1:0]  _idu_exu_io_next_bits_wbSel;	// core/src/core.scala:15:25
  wire [1:0]  _idu_exu_io_next_bits_wbDst;	// core/src/core.scala:15:25
  wire [31:0] _idu_exu_io_next_bits_Imm;	// core/src/core.scala:15:25
  wire [4:0]  _idu_exu_io_next_bits_rd;	// core/src/core.scala:15:25
  wire [31:0] _idu_exu_io_next_bits_rd_data;	// core/src/core.scala:15:25
  wire [31:0] _idu_exu_io_next_bits_rj_data;	// core/src/core.scala:15:25
  wire [31:0] _idu_exu_io_next_bits_rk_data;	// core/src/core.scala:15:25
  wire [31:0] _idu_exu_io_next_bits_pc;	// core/src/core.scala:15:25
  wire [31:0] _idu_exu_io_next_bits_npc;	// core/src/core.scala:15:25
  wire        _idu_io_prev_ready;	// core/src/core.scala:14:21
  wire        _idu_io_next_valid;	// core/src/core.scala:14:21
  wire [3:0]  _idu_io_next_bits_branchOp;	// core/src/core.scala:14:21
  wire [3:0]  _idu_io_next_bits_aluOp;	// core/src/core.scala:14:21
  wire [1:0]  _idu_io_next_bits_aluAsrc;	// core/src/core.scala:14:21
  wire [2:0]  _idu_io_next_bits_aluBsrc;	// core/src/core.scala:14:21
  wire [3:0]  _idu_io_next_bits_memOp;	// core/src/core.scala:14:21
  wire [1:0]  _idu_io_next_bits_wbSel;	// core/src/core.scala:14:21
  wire [1:0]  _idu_io_next_bits_wbDst;	// core/src/core.scala:14:21
  wire [31:0] _idu_io_next_bits_Imm;	// core/src/core.scala:14:21
  wire [4:0]  _idu_io_next_bits_rd;	// core/src/core.scala:14:21
  wire [31:0] _idu_io_next_bits_rd_data;	// core/src/core.scala:14:21
  wire [31:0] _idu_io_next_bits_rj_data;	// core/src/core.scala:14:21
  wire [31:0] _idu_io_next_bits_rk_data;	// core/src/core.scala:14:21
  wire [31:0] _idu_io_next_bits_pc;	// core/src/core.scala:14:21
  wire [31:0] _idu_io_next_bits_npc;	// core/src/core.scala:14:21
  wire [4:0]  _idu_io_RJ;	// core/src/core.scala:14:21
  wire [4:0]  _idu_io_RK;	// core/src/core.scala:14:21
  wire [4:0]  _idu_io_RD;	// core/src/core.scala:14:21
  wire        _ifu_idu_io_prev_ready;	// core/src/core.scala:13:25
  wire        _ifu_idu_io_next_valid;	// core/src/core.scala:13:25
  wire [31:0] _ifu_idu_io_next_bits_pc;	// core/src/core.scala:13:25
  wire [31:0] _ifu_idu_io_next_bits_npc;	// core/src/core.scala:13:25
  wire [31:0] _ifu_idu_io_next_bits_inst;	// core/src/core.scala:13:25
  wire        _ifu_io_next_valid;	// core/src/core.scala:12:21
  wire [31:0] _ifu_io_next_bits_pc;	// core/src/core.scala:12:21
  wire [31:0] _ifu_io_next_bits_npc;	// core/src/core.scala:12:21
  wire [31:0] _ifu_io_next_bits_inst;	// core/src/core.scala:12:21
  ifu ifu (	// core/src/core.scala:12:21
    .clock                    (clock),
    .reset                    (reset),
    .io_base_in_bits_data_out (io_ifu_in_bits_data_out),
    .io_base_out_ready        (io_ifu_out_ready),
    .io_base_out_valid        (io_ifu_out_valid),
    .io_base_out_bits_addr    (io_ifu_out_bits_addr),
    .io_next_ready            (_ifu_idu_io_prev_ready),	// core/src/core.scala:13:25
    .io_next_valid            (_ifu_io_next_valid),
    .io_next_bits_pc          (_ifu_io_next_bits_pc),
    .io_next_bits_npc         (_ifu_io_next_bits_npc),
    .io_next_bits_inst        (_ifu_io_next_bits_inst),
    .io_flush                 (_bru_io_flush),	// core/src/core.scala:20:21
    .io_update                (_bru_io_update),	// core/src/core.scala:20:21
    .io_u_branch              (_bru_io_u_branch),	// core/src/core.scala:20:21
    .io_u_type                (_bru_io_u_type),	// core/src/core.scala:20:21
    .io_u_pc                  (_bru_io_u_pc),	// core/src/core.scala:20:21
    .io_u_target              (_bru_io_u_target),	// core/src/core.scala:20:21
    .io_nextPC                (_bru_io_nextPC)	// core/src/core.scala:20:21
  );
  buffer ifu_idu (	// core/src/core.scala:13:25
    .clock             (clock),
    .reset             (reset),
    .io_prev_ready     (_ifu_idu_io_prev_ready),
    .io_prev_valid     (_ifu_io_next_valid),	// core/src/core.scala:12:21
    .io_prev_bits_pc   (_ifu_io_next_bits_pc),	// core/src/core.scala:12:21
    .io_prev_bits_npc  (_ifu_io_next_bits_npc),	// core/src/core.scala:12:21
    .io_prev_bits_inst (_ifu_io_next_bits_inst),	// core/src/core.scala:12:21
    .io_next_ready     (_idu_io_prev_ready),	// core/src/core.scala:14:21
    .io_next_valid     (_ifu_idu_io_next_valid),
    .io_next_bits_pc   (_ifu_idu_io_next_bits_pc),
    .io_next_bits_npc  (_ifu_idu_io_next_bits_npc),
    .io_next_bits_inst (_ifu_idu_io_next_bits_inst),
    .io_stall          (_forward_io_stall),	// core/src/core.scala:29:25
    .io_flush          (_bru_io_flush)	// core/src/core.scala:20:21
  );
  idu idu (	// core/src/core.scala:14:21
    .clock                 (clock),
    .reset                 (reset),
    .io_prev_ready         (_idu_io_prev_ready),
    .io_prev_valid         (_ifu_idu_io_next_valid),	// core/src/core.scala:13:25
    .io_prev_bits_pc       (_ifu_idu_io_next_bits_pc),	// core/src/core.scala:13:25
    .io_prev_bits_npc      (_ifu_idu_io_next_bits_npc),	// core/src/core.scala:13:25
    .io_prev_bits_inst     (_ifu_idu_io_next_bits_inst),	// core/src/core.scala:13:25
    .io_next_ready         (_idu_exu_io_prev_ready),	// core/src/core.scala:15:25
    .io_next_valid         (_idu_io_next_valid),
    .io_next_bits_branchOp (_idu_io_next_bits_branchOp),
    .io_next_bits_aluOp    (_idu_io_next_bits_aluOp),
    .io_next_bits_aluAsrc  (_idu_io_next_bits_aluAsrc),
    .io_next_bits_aluBsrc  (_idu_io_next_bits_aluBsrc),
    .io_next_bits_memOp    (_idu_io_next_bits_memOp),
    .io_next_bits_wbSel    (_idu_io_next_bits_wbSel),
    .io_next_bits_wbDst    (_idu_io_next_bits_wbDst),
    .io_next_bits_Imm      (_idu_io_next_bits_Imm),
    .io_next_bits_rd       (_idu_io_next_bits_rd),
    .io_next_bits_rd_data  (_idu_io_next_bits_rd_data),
    .io_next_bits_rj_data  (_idu_io_next_bits_rj_data),
    .io_next_bits_rk_data  (_idu_io_next_bits_rk_data),
    .io_next_bits_pc       (_idu_io_next_bits_pc),
    .io_next_bits_npc      (_idu_io_next_bits_npc),
    .io_stall              (_forward_io_stall),	// core/src/core.scala:29:25
    .io_wen                (_wbu_io_wen),	// core/src/core.scala:22:21
    .io_waddr              (_wbu_io_waddr),	// core/src/core.scala:22:21
    .io_wdata              (_wbu_io_wdata),	// core/src/core.scala:22:21
    .io_RJ                 (_idu_io_RJ),
    .io_RK                 (_idu_io_RK),
    .io_RD                 (_idu_io_RD),
    .io_Fw_RJ              (_forward_io_Fw_RJ),	// core/src/core.scala:29:25
    .io_Fw_RK              (_forward_io_Fw_RK),	// core/src/core.scala:29:25
    .io_Fw_RD              (_forward_io_Fw_RD),	// core/src/core.scala:29:25
    .io_ex_ALU             (_exu_io_ex_ALU),	// core/src/core.scala:16:21
    .io_l1_ALU             (_lsu_io_l1_ALU),	// core/src/core.scala:19:21
    .io_l2_ALU             (_lsu_io_l2_ALU),	// core/src/core.scala:19:21
    .io_wb_ALU             (_wbu_io_wb_ALU),	// core/src/core.scala:22:21
    .io_l1_Mem             (_lsu_io_l1_Mem),	// core/src/core.scala:19:21
    .io_l2_Mem             (_lsu_io_l2_Mem),	// core/src/core.scala:19:21
    .io_wb_Mem             (_wbu_io_wb_Mem),	// core/src/core.scala:22:21
    .io_wb_Mul             (_wbu_io_wb_Mul)	// core/src/core.scala:22:21
  );
  buffer_1 idu_exu (	// core/src/core.scala:15:25
    .clock                 (clock),
    .reset                 (reset),
    .io_prev_ready         (_idu_exu_io_prev_ready),
    .io_prev_valid         (_idu_io_next_valid),	// core/src/core.scala:14:21
    .io_prev_bits_branchOp (_idu_io_next_bits_branchOp),	// core/src/core.scala:14:21
    .io_prev_bits_aluOp    (_idu_io_next_bits_aluOp),	// core/src/core.scala:14:21
    .io_prev_bits_aluAsrc  (_idu_io_next_bits_aluAsrc),	// core/src/core.scala:14:21
    .io_prev_bits_aluBsrc  (_idu_io_next_bits_aluBsrc),	// core/src/core.scala:14:21
    .io_prev_bits_memOp    (_idu_io_next_bits_memOp),	// core/src/core.scala:14:21
    .io_prev_bits_wbSel    (_idu_io_next_bits_wbSel),	// core/src/core.scala:14:21
    .io_prev_bits_wbDst    (_idu_io_next_bits_wbDst),	// core/src/core.scala:14:21
    .io_prev_bits_Imm      (_idu_io_next_bits_Imm),	// core/src/core.scala:14:21
    .io_prev_bits_rd       (_idu_io_next_bits_rd),	// core/src/core.scala:14:21
    .io_prev_bits_rd_data  (_idu_io_next_bits_rd_data),	// core/src/core.scala:14:21
    .io_prev_bits_rj_data  (_idu_io_next_bits_rj_data),	// core/src/core.scala:14:21
    .io_prev_bits_rk_data  (_idu_io_next_bits_rk_data),	// core/src/core.scala:14:21
    .io_prev_bits_pc       (_idu_io_next_bits_pc),	// core/src/core.scala:14:21
    .io_prev_bits_npc      (_idu_io_next_bits_npc),	// core/src/core.scala:14:21
    .io_next_ready         (_exu_io_prev_ready),	// core/src/core.scala:16:21
    .io_next_valid         (_idu_exu_io_next_valid),
    .io_next_bits_branchOp (_idu_exu_io_next_bits_branchOp),
    .io_next_bits_aluOp    (_idu_exu_io_next_bits_aluOp),
    .io_next_bits_aluAsrc  (_idu_exu_io_next_bits_aluAsrc),
    .io_next_bits_aluBsrc  (_idu_exu_io_next_bits_aluBsrc),
    .io_next_bits_memOp    (_idu_exu_io_next_bits_memOp),
    .io_next_bits_wbSel    (_idu_exu_io_next_bits_wbSel),
    .io_next_bits_wbDst    (_idu_exu_io_next_bits_wbDst),
    .io_next_bits_Imm      (_idu_exu_io_next_bits_Imm),
    .io_next_bits_rd       (_idu_exu_io_next_bits_rd),
    .io_next_bits_rd_data  (_idu_exu_io_next_bits_rd_data),
    .io_next_bits_rj_data  (_idu_exu_io_next_bits_rj_data),
    .io_next_bits_rk_data  (_idu_exu_io_next_bits_rk_data),
    .io_next_bits_pc       (_idu_exu_io_next_bits_pc),
    .io_next_bits_npc      (_idu_exu_io_next_bits_npc),
    .io_flush              (_bru_io_flush)	// core/src/core.scala:20:21
  );
  exu exu (	// core/src/core.scala:16:21
    .clock                 (clock),
    .io_prev_ready         (_exu_io_prev_ready),
    .io_prev_valid         (_idu_exu_io_next_valid),	// core/src/core.scala:15:25
    .io_prev_bits_branchOp (_idu_exu_io_next_bits_branchOp),	// core/src/core.scala:15:25
    .io_prev_bits_aluOp    (_idu_exu_io_next_bits_aluOp),	// core/src/core.scala:15:25
    .io_prev_bits_aluAsrc  (_idu_exu_io_next_bits_aluAsrc),	// core/src/core.scala:15:25
    .io_prev_bits_aluBsrc  (_idu_exu_io_next_bits_aluBsrc),	// core/src/core.scala:15:25
    .io_prev_bits_memOp    (_idu_exu_io_next_bits_memOp),	// core/src/core.scala:15:25
    .io_prev_bits_wbSel    (_idu_exu_io_next_bits_wbSel),	// core/src/core.scala:15:25
    .io_prev_bits_wbDst    (_idu_exu_io_next_bits_wbDst),	// core/src/core.scala:15:25
    .io_prev_bits_Imm      (_idu_exu_io_next_bits_Imm),	// core/src/core.scala:15:25
    .io_prev_bits_rd       (_idu_exu_io_next_bits_rd),	// core/src/core.scala:15:25
    .io_prev_bits_rd_data  (_idu_exu_io_next_bits_rd_data),	// core/src/core.scala:15:25
    .io_prev_bits_rj_data  (_idu_exu_io_next_bits_rj_data),	// core/src/core.scala:15:25
    .io_prev_bits_rk_data  (_idu_exu_io_next_bits_rk_data),	// core/src/core.scala:15:25
    .io_prev_bits_pc       (_idu_exu_io_next_bits_pc),	// core/src/core.scala:15:25
    .io_prev_bits_npc      (_idu_exu_io_next_bits_npc),	// core/src/core.scala:15:25
    .io_next_ready         (_exu_lsu_io_prev_ready),	// core/src/core.scala:17:25
    .io_next_valid         (_exu_io_next_valid),
    .io_next_bits_ALUOut   (_exu_io_next_bits_ALUOut),
    .io_next_bits_memOp    (_exu_io_next_bits_memOp),
    .io_next_bits_wbSel    (_exu_io_next_bits_wbSel),
    .io_next_bits_wbDst    (_exu_io_next_bits_wbDst),
    .io_next_bits_rd       (_exu_io_next_bits_rd),
    .io_next_bits_rd_data  (_exu_io_next_bits_rd_data),
    .io_bru_valid          (_exu_io_bru_valid),
    .io_bru_bits_Zero      (_exu_io_bru_bits_Zero),
    .io_bru_bits_SLess     (_exu_io_bru_bits_SLess),
    .io_bru_bits_ULess     (_exu_io_bru_bits_ULess),
    .io_bru_bits_branchOp  (_exu_io_bru_bits_branchOp),
    .io_bru_bits_pcadd4    (_exu_io_bru_bits_pcadd4),
    .io_bru_bits_pcoff     (_exu_io_bru_bits_pcoff),
    .io_bru_bits_jirlpc    (_exu_io_bru_bits_jirlpc),
    .io_bru_bits_pc        (_exu_io_bru_bits_pc),
    .io_bru_bits_npc       (_exu_io_bru_bits_npc),
    .io_P                  (_exu_io_P),
    .io_ex_Dst             (_exu_io_ex_Dst),
    .io_ex_Sel             (_exu_io_ex_Sel),
    .io_ex_ALU             (_exu_io_ex_ALU)
  );
  buffer_2 exu_lsu (	// core/src/core.scala:17:25
    .clock                (clock),
    .reset                (reset),
    .io_prev_ready        (_exu_lsu_io_prev_ready),
    .io_prev_valid        (_exu_io_next_valid),	// core/src/core.scala:16:21
    .io_prev_bits_ALUOut  (_exu_io_next_bits_ALUOut),	// core/src/core.scala:16:21
    .io_prev_bits_memOp   (_exu_io_next_bits_memOp),	// core/src/core.scala:16:21
    .io_prev_bits_wbSel   (_exu_io_next_bits_wbSel),	// core/src/core.scala:16:21
    .io_prev_bits_wbDst   (_exu_io_next_bits_wbDst),	// core/src/core.scala:16:21
    .io_prev_bits_rd      (_exu_io_next_bits_rd),	// core/src/core.scala:16:21
    .io_prev_bits_rd_data (_exu_io_next_bits_rd_data),	// core/src/core.scala:16:21
    .io_next_valid        (_exu_lsu_io_next_valid),
    .io_next_bits_ALUOut  (_exu_lsu_io_next_bits_ALUOut),
    .io_next_bits_memOp   (_exu_lsu_io_next_bits_memOp),
    .io_next_bits_wbSel   (_exu_lsu_io_next_bits_wbSel),
    .io_next_bits_wbDst   (_exu_lsu_io_next_bits_wbDst),
    .io_next_bits_rd      (_exu_lsu_io_next_bits_rd),
    .io_next_bits_rd_data (_exu_lsu_io_next_bits_rd_data),
    .io_stall             (_lsu_io_stall),	// core/src/core.scala:19:21
    .io_flush             (_bru_io_flush)	// core/src/core.scala:20:21
  );
  buffer_3 exu_bru (	// core/src/core.scala:18:25
    .clock                 (clock),
    .reset                 (reset),
    .io_prev_valid         (_exu_io_bru_valid),	// core/src/core.scala:16:21
    .io_prev_bits_Zero     (_exu_io_bru_bits_Zero),	// core/src/core.scala:16:21
    .io_prev_bits_SLess    (_exu_io_bru_bits_SLess),	// core/src/core.scala:16:21
    .io_prev_bits_ULess    (_exu_io_bru_bits_ULess),	// core/src/core.scala:16:21
    .io_prev_bits_branchOp (_exu_io_bru_bits_branchOp),	// core/src/core.scala:16:21
    .io_prev_bits_pcadd4   (_exu_io_bru_bits_pcadd4),	// core/src/core.scala:16:21
    .io_prev_bits_pcoff    (_exu_io_bru_bits_pcoff),	// core/src/core.scala:16:21
    .io_prev_bits_jirlpc   (_exu_io_bru_bits_jirlpc),	// core/src/core.scala:16:21
    .io_prev_bits_pc       (_exu_io_bru_bits_pc),	// core/src/core.scala:16:21
    .io_prev_bits_npc      (_exu_io_bru_bits_npc),	// core/src/core.scala:16:21
    .io_next_valid         (_exu_bru_io_next_valid),
    .io_next_bits_Zero     (_exu_bru_io_next_bits_Zero),
    .io_next_bits_SLess    (_exu_bru_io_next_bits_SLess),
    .io_next_bits_ULess    (_exu_bru_io_next_bits_ULess),
    .io_next_bits_branchOp (_exu_bru_io_next_bits_branchOp),
    .io_next_bits_pcadd4   (_exu_bru_io_next_bits_pcadd4),
    .io_next_bits_pcoff    (_exu_bru_io_next_bits_pcoff),
    .io_next_bits_jirlpc   (_exu_bru_io_next_bits_jirlpc),
    .io_next_bits_pc       (_exu_bru_io_next_bits_pc),
    .io_next_bits_npc      (_exu_bru_io_next_bits_npc),
    .io_stall              (_lsu_io_stall),	// core/src/core.scala:19:21
    .io_flush              (_bru_io_flush)	// core/src/core.scala:20:21
  );
  lsu lsu (	// core/src/core.scala:19:21
    .clock                    (clock),
    .reset                    (reset),
    .io_ext_in_bits_data_out  (io_lsu_in_bits_data_out),
    .io_ext_out_valid         (io_lsu_out_valid),
    .io_ext_out_bits_data_wen (io_lsu_out_bits_data_wen),
    .io_ext_out_bits_data_in  (io_lsu_out_bits_data_in),
    .io_ext_out_bits_addr     (io_lsu_out_bits_addr),
    .io_ext_out_bits_be_n     (io_lsu_out_bits_be_n),
    .io_ext_out_bits_oe_n     (io_lsu_out_bits_oe_n),
    .io_ext_out_bits_we_n     (io_lsu_out_bits_we_n),
    .io_prev_valid            (_exu_lsu_io_next_valid),	// core/src/core.scala:17:25
    .io_prev_bits_ALUOut      (_exu_lsu_io_next_bits_ALUOut),	// core/src/core.scala:17:25
    .io_prev_bits_memOp       (_exu_lsu_io_next_bits_memOp),	// core/src/core.scala:17:25
    .io_prev_bits_wbSel       (_exu_lsu_io_next_bits_wbSel),	// core/src/core.scala:17:25
    .io_prev_bits_wbDst       (_exu_lsu_io_next_bits_wbDst),	// core/src/core.scala:17:25
    .io_prev_bits_rd          (_exu_lsu_io_next_bits_rd),	// core/src/core.scala:17:25
    .io_prev_bits_rd_data     (_exu_lsu_io_next_bits_rd_data),	// core/src/core.scala:17:25
    .io_next_valid            (_lsu_io_next_valid),
    .io_next_bits_MemOut      (_lsu_io_next_bits_MemOut),
    .io_next_bits_ALUOut      (_lsu_io_next_bits_ALUOut),
    .io_next_bits_wbSel       (_lsu_io_next_bits_wbSel),
    .io_next_bits_wbDst       (_lsu_io_next_bits_wbDst),
    .io_next_bits_rd          (_lsu_io_next_bits_rd),
    .io_stall                 (_lsu_io_stall),
    .io_l1_Dst                (_lsu_io_l1_Dst),
    .io_l1_Sel                (_lsu_io_l1_Sel),
    .io_l1_ALU                (_lsu_io_l1_ALU),
    .io_l1_Mem                (_lsu_io_l1_Mem),
    .io_l2_Dst                (_lsu_io_l2_Dst),
    .io_l2_Sel                (_lsu_io_l2_Sel),
    .io_l2_ALU                (_lsu_io_l2_ALU),
    .io_l2_Mem                (_lsu_io_l2_Mem)
  );
  bru bru (	// core/src/core.scala:20:21
    .io_prev_valid         (_exu_bru_io_next_valid),	// core/src/core.scala:18:25
    .io_prev_bits_Zero     (_exu_bru_io_next_bits_Zero),	// core/src/core.scala:18:25
    .io_prev_bits_SLess    (_exu_bru_io_next_bits_SLess),	// core/src/core.scala:18:25
    .io_prev_bits_ULess    (_exu_bru_io_next_bits_ULess),	// core/src/core.scala:18:25
    .io_prev_bits_branchOp (_exu_bru_io_next_bits_branchOp),	// core/src/core.scala:18:25
    .io_prev_bits_pcadd4   (_exu_bru_io_next_bits_pcadd4),	// core/src/core.scala:18:25
    .io_prev_bits_pcoff    (_exu_bru_io_next_bits_pcoff),	// core/src/core.scala:18:25
    .io_prev_bits_jirlpc   (_exu_bru_io_next_bits_jirlpc),	// core/src/core.scala:18:25
    .io_prev_bits_pc       (_exu_bru_io_next_bits_pc),	// core/src/core.scala:18:25
    .io_prev_bits_npc      (_exu_bru_io_next_bits_npc),	// core/src/core.scala:18:25
    .io_stall              (_lsu_io_stall),	// core/src/core.scala:19:21
    .io_flush              (_bru_io_flush),
    .io_update             (_bru_io_update),
    .io_u_branch           (_bru_io_u_branch),
    .io_u_type             (_bru_io_u_type),
    .io_u_pc               (_bru_io_u_pc),
    .io_u_target           (_bru_io_u_target),
    .io_nextPC             (_bru_io_nextPC)
  );
  buffer_4 lsu_wbu (	// core/src/core.scala:21:25
    .clock               (clock),
    .reset               (reset),
    .io_prev_valid       (_lsu_io_next_valid),	// core/src/core.scala:19:21
    .io_prev_bits_MemOut (_lsu_io_next_bits_MemOut),	// core/src/core.scala:19:21
    .io_prev_bits_ALUOut (_lsu_io_next_bits_ALUOut),	// core/src/core.scala:19:21
    .io_prev_bits_wbSel  (_lsu_io_next_bits_wbSel),	// core/src/core.scala:19:21
    .io_prev_bits_wbDst  (_lsu_io_next_bits_wbDst),	// core/src/core.scala:19:21
    .io_prev_bits_rd     (_lsu_io_next_bits_rd),	// core/src/core.scala:19:21
    .io_next_valid       (_lsu_wbu_io_next_valid),
    .io_next_bits_MemOut (_lsu_wbu_io_next_bits_MemOut),
    .io_next_bits_ALUOut (_lsu_wbu_io_next_bits_ALUOut),
    .io_next_bits_wbSel  (_lsu_wbu_io_next_bits_wbSel),
    .io_next_bits_wbDst  (_lsu_wbu_io_next_bits_wbDst),
    .io_next_bits_rd     (_lsu_wbu_io_next_bits_rd)
  );
  wbu wbu (	// core/src/core.scala:22:21
    .io_prev_valid       (_lsu_wbu_io_next_valid),	// core/src/core.scala:21:25
    .io_prev_bits_MemOut (_lsu_wbu_io_next_bits_MemOut),	// core/src/core.scala:21:25
    .io_prev_bits_ALUOut (_lsu_wbu_io_next_bits_ALUOut),	// core/src/core.scala:21:25
    .io_prev_bits_wbSel  (_lsu_wbu_io_next_bits_wbSel),	// core/src/core.scala:21:25
    .io_prev_bits_wbDst  (_lsu_wbu_io_next_bits_wbDst),	// core/src/core.scala:21:25
    .io_prev_bits_rd     (_lsu_wbu_io_next_bits_rd),	// core/src/core.scala:21:25
    .io_wen              (_wbu_io_wen),
    .io_waddr            (_wbu_io_waddr),
    .io_wdata            (_wbu_io_wdata),
    .io_P                (_exu_io_P),	// core/src/core.scala:16:21
    .io_wb_Dst           (_wbu_io_wb_Dst),
    .io_wb_Sel           (_wbu_io_wb_Sel),
    .io_wb_ALU           (_wbu_io_wb_ALU),
    .io_wb_Mem           (_wbu_io_wb_Mem),
    .io_wb_Mul           (_wbu_io_wb_Mul)
  );
  forward forward (	// core/src/core.scala:29:25
    .io_RJ       (_idu_io_RJ),	// core/src/core.scala:14:21
    .io_RK       (_idu_io_RK),	// core/src/core.scala:14:21
    .io_RD       (_idu_io_RD),	// core/src/core.scala:14:21
    .io_ex_Dst   (_exu_io_ex_Dst),	// core/src/core.scala:16:21
    .io_l1_Dst   (_lsu_io_l1_Dst),	// core/src/core.scala:19:21
    .io_l2_Dst   (_lsu_io_l2_Dst),	// core/src/core.scala:19:21
    .io_wb_Dst   (_wbu_io_wb_Dst),	// core/src/core.scala:22:21
    .io_ex_Sel   (_exu_io_ex_Sel),	// core/src/core.scala:16:21
    .io_l1_Sel   (_lsu_io_l1_Sel),	// core/src/core.scala:19:21
    .io_l1_stall (_lsu_io_stall),	// core/src/core.scala:19:21
    .io_l2_Sel   (_lsu_io_l2_Sel),	// core/src/core.scala:19:21
    .io_wb_Sel   (_wbu_io_wb_Sel),	// core/src/core.scala:22:21
    .io_stall    (_forward_io_stall),
    .io_Fw_RJ    (_forward_io_Fw_RJ),
    .io_Fw_RK    (_forward_io_Fw_RK),
    .io_Fw_RD    (_forward_io_Fw_RD)
  );
endmodule

module sram_ctrl(	// core/src/sram_ctrl.scala:5:7
  input         io_in_valid,	// core/src/sram_ctrl.scala:6:16
                io_in_bits_data_wen,	// core/src/sram_ctrl.scala:6:16
  input  [31:0] io_in_bits_data_in,	// core/src/sram_ctrl.scala:6:16
                io_in_bits_addr,	// core/src/sram_ctrl.scala:6:16
  input  [3:0]  io_in_bits_be_n,	// core/src/sram_ctrl.scala:6:16
  input         io_in_bits_oe_n,	// core/src/sram_ctrl.scala:6:16
                io_in_bits_we_n,	// core/src/sram_ctrl.scala:6:16
  output [31:0] io_out_bits_data_out,	// core/src/sram_ctrl.scala:6:16
  output        io_sram_data_wen,	// core/src/sram_ctrl.scala:6:16
  output [31:0] io_sram_data_in,	// core/src/sram_ctrl.scala:6:16
  input  [31:0] io_sram_data_out,	// core/src/sram_ctrl.scala:6:16
  output [19:0] io_sram_addr,	// core/src/sram_ctrl.scala:6:16
  output [3:0]  io_sram_be_n,	// core/src/sram_ctrl.scala:6:16
  output        io_sram_ce_n,	// core/src/sram_ctrl.scala:6:16
                io_sram_oe_n,	// core/src/sram_ctrl.scala:6:16
                io_sram_we_n	// core/src/sram_ctrl.scala:6:16
);

  assign io_out_bits_data_out = io_in_valid ? io_sram_data_out : 32'h0;	// core/src/sram_ctrl.scala:5:7, :11:23, :19:30, :23:25, :29:30
  assign io_sram_data_wen = io_in_valid & io_in_bits_data_wen;	// core/src/sram_ctrl.scala:5:7, :11:23, :12:26, :22:26
  assign io_sram_data_in = io_in_valid ? io_in_bits_data_in : 32'h0;	// core/src/sram_ctrl.scala:5:7, :11:23, :13:25, :23:25
  assign io_sram_addr = io_in_valid ? io_in_bits_addr[21:2] : 20'h0;	// core/src/sram_ctrl.scala:5:7, :11:23, :14:{22,40}, :24:22
  assign io_sram_be_n = io_in_valid ? io_in_bits_be_n : 4'h0;	// core/src/sram_ctrl.scala:5:7, :11:23, :15:22, :25:22
  assign io_sram_ce_n = ~io_in_valid;	// core/src/sram_ctrl.scala:5:7, :6:16, :11:23, :16:22, :26:22
  assign io_sram_oe_n = ~io_in_valid | io_in_bits_oe_n;	// core/src/sram_ctrl.scala:5:7, :11:23, :17:22, :27:22
  assign io_sram_we_n = ~io_in_valid | io_in_bits_we_n;	// core/src/sram_ctrl.scala:5:7, :11:23, :17:22, :18:22, :27:22, :28:22
endmodule

// external module async_transmitter

// external module async_receiver

// VCS coverage exclude_file
module ram_16x8(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [3:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [7:0] R0_data,
  input  [3:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [7:0] W0_data
);

  reg [7:0] Memory[0:15];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [4:0] i = 5'h0; i < 5'h10; i += 5'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[3:0]] = _RANDOM_MEM[7:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 8'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue16_UInt8(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// src/main/scala/chisel3/util/Decoupled.scala:243:7
               reset,	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0] io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0] io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  [3:0] enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [3:0] deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire       do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    if (reset) begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      enq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][7:4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][8];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_16x8 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module uart_ctrl(	// core/src/uart_ctrl.scala:31:7
  input         clock,	// core/src/uart_ctrl.scala:31:7
                reset,	// core/src/uart_ctrl.scala:31:7
                io_in_valid,	// core/src/uart_ctrl.scala:32:16
  input  [31:0] io_in_bits_data_in,	// core/src/uart_ctrl.scala:32:16
                io_in_bits_addr,	// core/src/uart_ctrl.scala:32:16
  input         io_in_bits_oe_n,	// core/src/uart_ctrl.scala:32:16
                io_in_bits_we_n,	// core/src/uart_ctrl.scala:32:16
  output [31:0] io_out_bits_data_out,	// core/src/uart_ctrl.scala:32:16
  input         io_uart_rx,	// core/src/uart_ctrl.scala:32:16
  output        io_uart_tx	// core/src/uart_ctrl.scala:32:16
);

  wire       _recv_fifo_io_enq_ready;	// core/src/uart_ctrl.scala:47:27
  wire       _recv_fifo_io_deq_valid;	// core/src/uart_ctrl.scala:47:27
  wire [7:0] _recv_fifo_io_deq_bits;	// core/src/uart_ctrl.scala:47:27
  wire       _tran_fifo_io_enq_ready;	// core/src/uart_ctrl.scala:46:27
  wire       _tran_fifo_io_deq_valid;	// core/src/uart_ctrl.scala:46:27
  wire [7:0] _tran_fifo_io_deq_bits;	// core/src/uart_ctrl.scala:46:27
  wire       _recv_RxD_data_ready;	// core/src/uart_ctrl.scala:44:22
  wire [7:0] _recv_RxD_data;	// core/src/uart_ctrl.scala:44:22
  wire       _tran_TxD_busy;	// core/src/uart_ctrl.scala:43:22
  reg  [1:0] state;	// core/src/uart_ctrl.scala:38:24
  reg  [7:0] tx_data_buf;	// core/src/uart_ctrl.scala:39:30
  reg        tx_addr_buf;	// core/src/uart_ctrl.scala:40:30
  reg        uart_rd_buf;	// core/src/uart_ctrl.scala:41:30
  wire       _tran_io_TxD_start_T_1 = ~_tran_TxD_busy & _tran_fifo_io_deq_valid;	// core/src/uart_ctrl.scala:43:22, :46:27, :62:{26,44}
  wire       _GEN = state == 2'h2 & ~tx_addr_buf;	// core/src/uart_ctrl.scala:38:24, :40:30, :54:19, :78:{16,24,27}
  always @(posedge clock) begin	// core/src/uart_ctrl.scala:31:7
    if (reset) begin	// core/src/uart_ctrl.scala:31:7
      state <= 2'h0;	// core/src/uart_ctrl.scala:38:24
      tx_data_buf <= 8'h0;	// core/src/uart_ctrl.scala:39:30
      tx_addr_buf <= 1'h0;	// core/src/uart_ctrl.scala:31:7, :40:30
      uart_rd_buf <= 1'h0;	// core/src/uart_ctrl.scala:31:7, :41:30
    end
    else begin	// core/src/uart_ctrl.scala:31:7
      if (state == 2'h2)	// core/src/uart_ctrl.scala:38:24, :52:36, :54:19
        state <= {1'h0, io_in_valid};	// core/src/uart_ctrl.scala:31:7, :38:24, :52:36
      else if (state == 2'h1)	// core/src/uart_ctrl.scala:38:24, :52:36
        state <= {io_in_valid, 1'h0};	// core/src/uart_ctrl.scala:31:7, :38:24, :54:19
      else	// core/src/uart_ctrl.scala:52:36
        state <= {1'h0, state == 2'h0 & io_in_valid};	// core/src/uart_ctrl.scala:31:7, :38:24, :52:36
      tx_data_buf <= io_in_bits_data_in[7:0];	// core/src/uart_ctrl.scala:39:30, :57:38
      tx_addr_buf <= io_in_bits_addr[2];	// core/src/uart_ctrl.scala:40:30, :58:35
      uart_rd_buf <= io_in_bits_we_n & ~io_in_bits_oe_n;	// core/src/uart_ctrl.scala:41:30, :50:{58,60}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/uart_ctrl.scala:31:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/uart_ctrl.scala:31:7
      `FIRRTL_BEFORE_INITIAL	// core/src/uart_ctrl.scala:31:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/uart_ctrl.scala:31:7
      automatic logic [31:0] _RANDOM[0:0];	// core/src/uart_ctrl.scala:31:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/uart_ctrl.scala:31:7
        `INIT_RANDOM_PROLOG_	// core/src/uart_ctrl.scala:31:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/uart_ctrl.scala:31:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// core/src/uart_ctrl.scala:31:7
        state = _RANDOM[/*Zero width*/ 1'b0][1:0];	// core/src/uart_ctrl.scala:31:7, :38:24
        tx_data_buf = _RANDOM[/*Zero width*/ 1'b0][9:2];	// core/src/uart_ctrl.scala:31:7, :38:24, :39:30
        tx_addr_buf = _RANDOM[/*Zero width*/ 1'b0][10];	// core/src/uart_ctrl.scala:31:7, :38:24, :40:30
        uart_rd_buf = _RANDOM[/*Zero width*/ 1'b0][11];	// core/src/uart_ctrl.scala:31:7, :38:24, :41:30
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/uart_ctrl.scala:31:7
      `FIRRTL_AFTER_INITIAL	// core/src/uart_ctrl.scala:31:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  async_transmitter #(
    .Baud(9600),
    .ClkFrequency(105000000)
  ) tran_0 (	// core/src/uart_ctrl.scala:43:22
    .clk       (clock),
    .TxD_start (_tran_io_TxD_start_T_1),	// core/src/uart_ctrl.scala:62:44
    .TxD_data  (_tran_fifo_io_deq_bits),	// core/src/uart_ctrl.scala:46:27
    .TxD       (io_uart_tx),
    .TxD_busy  (_tran_TxD_busy)
  );
  async_receiver #(
    .Baud(9600),
    .ClkFrequency(105000000)
  ) recv (	// core/src/uart_ctrl.scala:44:22
    .clk            (clock),
    .RxD            (io_uart_rx),
    .RxD_data_ready (_recv_RxD_data_ready),
    .RxD_clear      (_recv_RxD_data_ready & _recv_fifo_io_enq_ready),	// core/src/uart_ctrl.scala:44:22, :47:27, :69:49
    .RxD_data       (_recv_RxD_data)
  );
  Queue16_UInt8 tran_fifo (	// core/src/uart_ctrl.scala:46:27
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_tran_fifo_io_enq_ready),
    .io_enq_valid (_GEN & ~uart_rd_buf & _tran_fifo_io_enq_ready),	// core/src/uart_ctrl.scala:41:30, :46:27, :78:{24,41}, :79:{32,35}, :83:32
    .io_enq_bits  (tx_data_buf),	// core/src/uart_ctrl.scala:39:30
    .io_deq_ready (_tran_io_TxD_start_T_1),	// core/src/uart_ctrl.scala:62:44
    .io_deq_valid (_tran_fifo_io_deq_valid),
    .io_deq_bits  (_tran_fifo_io_deq_bits)
  );
  Queue16_UInt8 recv_fifo (	// core/src/uart_ctrl.scala:47:27
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_recv_fifo_io_enq_ready),
    .io_enq_valid (_recv_RxD_data_ready),	// core/src/uart_ctrl.scala:44:22
    .io_enq_bits  (_recv_RxD_data),	// core/src/uart_ctrl.scala:44:22
    .io_deq_ready (_GEN & uart_rd_buf & _recv_fifo_io_deq_valid),	// core/src/uart_ctrl.scala:41:30, :47:27, :78:{24,41}, :80:32, :84:32
    .io_deq_valid (_recv_fifo_io_deq_valid),
    .io_deq_bits  (_recv_fifo_io_deq_bits)
  );
  assign io_out_bits_data_out =
    io_in_bits_addr[2]
      ? {30'h0, _recv_fifo_io_deq_valid, _tran_fifo_io_enq_ready}
      : {24'h0, _recv_fifo_io_deq_bits};	// core/src/uart_ctrl.scala:31:7, :46:27, :47:27, :58:35, :87:{24,29}, :88:{25,30}, :90:32
endmodule

module subtop(	// core/src/subtop.scala:5:7
  input         clock,	// core/src/subtop.scala:5:7
                reset,	// core/src/subtop.scala:5:7
  output        io_base_data_wen,	// core/src/subtop.scala:6:16
  output [31:0] io_base_data_in,	// core/src/subtop.scala:6:16
  input  [31:0] io_base_data_out,	// core/src/subtop.scala:6:16
  output [19:0] io_base_addr,	// core/src/subtop.scala:6:16
  output [3:0]  io_base_be_n,	// core/src/subtop.scala:6:16
  output        io_base_ce_n,	// core/src/subtop.scala:6:16
                io_base_oe_n,	// core/src/subtop.scala:6:16
                io_base_we_n,	// core/src/subtop.scala:6:16
                io_ext_data_wen,	// core/src/subtop.scala:6:16
  output [31:0] io_ext_data_in,	// core/src/subtop.scala:6:16
  input  [31:0] io_ext_data_out,	// core/src/subtop.scala:6:16
  output [19:0] io_ext_addr,	// core/src/subtop.scala:6:16
  output [3:0]  io_ext_be_n,	// core/src/subtop.scala:6:16
  output        io_ext_ce_n,	// core/src/subtop.scala:6:16
                io_ext_oe_n,	// core/src/subtop.scala:6:16
                io_ext_we_n,	// core/src/subtop.scala:6:16
  input         io_uart_rx,	// core/src/subtop.scala:6:16
  output        io_uart_tx	// core/src/subtop.scala:6:16
);

  wire [31:0] _uart_ctrl_io_out_bits_data_out;	// core/src/subtop.scala:19:27
  wire [31:0] _ext_ram_ctrl_io_out_bits_data_out;	// core/src/subtop.scala:18:30
  wire [31:0] _base_ram_ctrl_io_out_bits_data_out;	// core/src/subtop.scala:17:31
  wire        _core_io_ifu_out_valid;	// core/src/subtop.scala:11:22
  wire [31:0] _core_io_ifu_out_bits_addr;	// core/src/subtop.scala:11:22
  wire        _core_io_lsu_out_valid;	// core/src/subtop.scala:11:22
  wire        _core_io_lsu_out_bits_data_wen;	// core/src/subtop.scala:11:22
  wire [31:0] _core_io_lsu_out_bits_data_in;	// core/src/subtop.scala:11:22
  wire [31:0] _core_io_lsu_out_bits_addr;	// core/src/subtop.scala:11:22
  wire [3:0]  _core_io_lsu_out_bits_be_n;	// core/src/subtop.scala:11:22
  wire        _core_io_lsu_out_bits_oe_n;	// core/src/subtop.scala:11:22
  wire        _core_io_lsu_out_bits_we_n;	// core/src/subtop.scala:11:22
  wire        _GEN =
    _core_io_lsu_out_valid & _core_io_lsu_out_bits_addr[31]
    & _core_io_lsu_out_bits_addr < 32'h80400000;	// core/src/bundles.scala:14:{14,31}, core/src/subtop.scala:11:22, :22:32
  wire        _GEN_0 =
    _core_io_lsu_out_valid & _core_io_lsu_out_bits_addr > 32'h803FFFFF
    & _core_io_lsu_out_bits_addr < 32'h80800000;	// core/src/bundles.scala:14:{14,31}, core/src/subtop.scala:11:22, :43:32
  core core (	// core/src/subtop.scala:11:22
    .clock                    (clock),
    .reset                    (reset),
    .io_ifu_in_bits_data_out  (_base_ram_ctrl_io_out_bits_data_out),	// core/src/subtop.scala:17:31
    .io_ifu_out_ready         (~_GEN),	// core/src/subtop.scala:22:32, :23:56, :26:36, :29:30, :30:31, :39:31
    .io_ifu_out_valid         (_core_io_ifu_out_valid),
    .io_ifu_out_bits_addr     (_core_io_ifu_out_bits_addr),
    .io_lsu_in_bits_data_out
      (_GEN
         ? _base_ram_ctrl_io_out_bits_data_out
         : _GEN_0 ? _ext_ram_ctrl_io_out_bits_data_out : _uart_ctrl_io_out_bits_data_out),	// core/src/subtop.scala:17:31, :18:30, :19:27, :22:32, :43:32, :70:56, :71:29, :76:55, :77:29, :82:56
    .io_lsu_out_valid         (_core_io_lsu_out_valid),
    .io_lsu_out_bits_data_wen (_core_io_lsu_out_bits_data_wen),
    .io_lsu_out_bits_data_in  (_core_io_lsu_out_bits_data_in),
    .io_lsu_out_bits_addr     (_core_io_lsu_out_bits_addr),
    .io_lsu_out_bits_be_n     (_core_io_lsu_out_bits_be_n),
    .io_lsu_out_bits_oe_n     (_core_io_lsu_out_bits_oe_n),
    .io_lsu_out_bits_we_n     (_core_io_lsu_out_bits_we_n)
  );
  sram_ctrl base_ram_ctrl (	// core/src/subtop.scala:17:31
    .io_in_valid          (_GEN ? _core_io_lsu_out_valid : _core_io_ifu_out_valid),	// core/src/subtop.scala:11:22, :22:32, :23:56, :25:35, :34:35
    .io_in_bits_data_wen  (_GEN & _core_io_lsu_out_bits_data_wen),	// core/src/subtop.scala:11:22, :22:32, :23:56, :24:34, :33:34
    .io_in_bits_data_in   (_GEN ? _core_io_lsu_out_bits_data_in : 32'h0),	// core/src/subtop.scala:11:22, :22:32, :23:56, :24:34, :33:34
    .io_in_bits_addr
      (_GEN ? _core_io_lsu_out_bits_addr : _core_io_ifu_out_bits_addr),	// core/src/subtop.scala:11:22, :22:32, :23:56, :24:34, :33:34
    .io_in_bits_be_n      (_GEN ? _core_io_lsu_out_bits_be_n : 4'h0),	// core/src/subtop.scala:11:22, :22:32, :23:56, :24:34, :33:34
    .io_in_bits_oe_n      (_GEN & _core_io_lsu_out_bits_oe_n),	// core/src/subtop.scala:11:22, :22:32, :23:56, :24:34, :33:34
    .io_in_bits_we_n      (~_GEN | _core_io_lsu_out_bits_we_n),	// core/src/subtop.scala:11:22, :22:32, :23:56, :24:34, :33:34
    .io_out_bits_data_out (_base_ram_ctrl_io_out_bits_data_out),
    .io_sram_data_wen     (io_base_data_wen),
    .io_sram_data_in      (io_base_data_in),
    .io_sram_data_out     (io_base_data_out),
    .io_sram_addr         (io_base_addr),
    .io_sram_be_n         (io_base_be_n),
    .io_sram_ce_n         (io_base_ce_n),
    .io_sram_oe_n         (io_base_oe_n),
    .io_sram_we_n         (io_base_we_n)
  );
  sram_ctrl ext_ram_ctrl (	// core/src/subtop.scala:18:30
    .io_in_valid          (_GEN_0 & _core_io_lsu_out_valid),	// core/src/subtop.scala:11:22, :43:32, :44:55, :46:34, :51:34
    .io_in_bits_data_wen  (_core_io_lsu_out_bits_data_wen),	// core/src/subtop.scala:11:22
    .io_in_bits_data_in   (_core_io_lsu_out_bits_data_in),	// core/src/subtop.scala:11:22
    .io_in_bits_addr      (_core_io_lsu_out_bits_addr),	// core/src/subtop.scala:11:22
    .io_in_bits_be_n      (_core_io_lsu_out_bits_be_n),	// core/src/subtop.scala:11:22
    .io_in_bits_oe_n      (_core_io_lsu_out_bits_oe_n),	// core/src/subtop.scala:11:22
    .io_in_bits_we_n      (_core_io_lsu_out_bits_we_n),	// core/src/subtop.scala:11:22
    .io_out_bits_data_out (_ext_ram_ctrl_io_out_bits_data_out),
    .io_sram_data_wen     (io_ext_data_wen),
    .io_sram_data_in      (io_ext_data_in),
    .io_sram_data_out     (io_ext_data_out),
    .io_sram_addr         (io_ext_addr),
    .io_sram_be_n         (io_ext_be_n),
    .io_sram_ce_n         (io_ext_ce_n),
    .io_sram_oe_n         (io_ext_oe_n),
    .io_sram_we_n         (io_ext_we_n)
  );
  uart_ctrl uart_ctrl (	// core/src/subtop.scala:19:27
    .clock                (clock),
    .reset                (reset),
    .io_in_valid
      (_core_io_lsu_out_valid & _core_io_lsu_out_bits_addr > 32'hBFD003F7
       & _core_io_lsu_out_bits_addr < 32'hBFD003FD),	// core/src/bundles.scala:14:{14,31}, core/src/subtop.scala:11:22, :57:56, :59:31, :64:31
    .io_in_bits_data_in   (_core_io_lsu_out_bits_data_in),	// core/src/subtop.scala:11:22
    .io_in_bits_addr      (_core_io_lsu_out_bits_addr),	// core/src/subtop.scala:11:22
    .io_in_bits_oe_n      (_core_io_lsu_out_bits_oe_n),	// core/src/subtop.scala:11:22
    .io_in_bits_we_n      (_core_io_lsu_out_bits_we_n),	// core/src/subtop.scala:11:22
    .io_out_bits_data_out (_uart_ctrl_io_out_bits_data_out),
    .io_uart_rx           (io_uart_rx),
    .io_uart_tx           (io_uart_tx)
  );
endmodule

