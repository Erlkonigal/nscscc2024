// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module ifu(	// core/src/ifu.scala:5:7
  input  [31:0] io_base_in_bits_data_out,	// core/src/ifu.scala:6:16
  output        io_base_out_valid,	// core/src/ifu.scala:6:16
  output [31:0] io_base_out_bits_addr,	// core/src/ifu.scala:6:16
  output        io_base_out_bits_ce_n,	// core/src/ifu.scala:6:16
                io_base_out_bits_oe_n,	// core/src/ifu.scala:6:16
  input         io_InstFetch,	// core/src/ifu.scala:6:16
  input  [31:0] io_pc,	// core/src/ifu.scala:6:16
  output        io_next_valid,	// core/src/ifu.scala:6:16
  output [31:0] io_next_bits_pc,	// core/src/ifu.scala:6:16
                io_next_bits_inst	// core/src/ifu.scala:6:16
);

  assign io_base_out_valid = io_InstFetch;	// core/src/ifu.scala:5:7
  assign io_base_out_bits_addr = io_InstFetch ? io_pc : 32'h0;	// core/src/ifu.scala:5:7, :13:24, :14:31, :19:31
  assign io_base_out_bits_ce_n = ~io_InstFetch;	// core/src/ifu.scala:5:7, :13:24, :15:31, :20:31
  assign io_base_out_bits_oe_n = ~io_InstFetch;	// core/src/ifu.scala:5:7, :13:24, :15:31, :20:31
  assign io_next_valid = io_InstFetch;	// core/src/ifu.scala:5:7
  assign io_next_bits_pc = io_pc;	// core/src/ifu.scala:5:7
  assign io_next_bits_inst = io_base_in_bits_data_out;	// core/src/ifu.scala:5:7
endmodule

module buffer(	// core/src/core.scala:57:7
  input         clock,	// core/src/core.scala:57:7
                reset,	// core/src/core.scala:57:7
                io_prev_valid,	// core/src/core.scala:58:16
  input  [31:0] io_prev_bits_pc,	// core/src/core.scala:58:16
                io_prev_bits_inst,	// core/src/core.scala:58:16
  output        io_next_valid,	// core/src/core.scala:58:16
  output [31:0] io_next_bits_pc,	// core/src/core.scala:58:16
                io_next_bits_inst	// core/src/core.scala:58:16
);

  reg        state;	// core/src/core.scala:62:24
  reg [31:0] regs_pc;	// core/src/core.scala:65:19
  reg [31:0] regs_inst;	// core/src/core.scala:65:19
  always @(posedge clock) begin	// core/src/core.scala:57:7
    if (reset)	// core/src/core.scala:57:7
      state <= 1'h0;	// core/src/core.scala:62:24
    else	// core/src/core.scala:57:7
      state <= io_prev_valid;	// core/src/core.scala:62:24
    if (io_prev_valid) begin	// core/src/core.scala:58:16
      regs_pc <= io_prev_bits_pc;	// core/src/core.scala:65:19
      regs_inst <= io_prev_bits_inst;	// core/src/core.scala:65:19
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/core.scala:57:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/core.scala:57:7
      `FIRRTL_BEFORE_INITIAL	// core/src/core.scala:57:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/core.scala:57:7
      automatic logic [31:0] _RANDOM[0:2];	// core/src/core.scala:57:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/core.scala:57:7
        `INIT_RANDOM_PROLOG_	// core/src/core.scala:57:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/core.scala:57:7
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// core/src/core.scala:57:7
        end	// core/src/core.scala:57:7
        state = _RANDOM[2'h0][0];	// core/src/core.scala:57:7, :62:24
        regs_pc = {_RANDOM[2'h0][31:1], _RANDOM[2'h1][0]};	// core/src/core.scala:57:7, :62:24, :65:19
        regs_inst = {_RANDOM[2'h1][31:1], _RANDOM[2'h2][0]};	// core/src/core.scala:57:7, :65:19
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/core.scala:57:7
      `FIRRTL_AFTER_INITIAL	// core/src/core.scala:57:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_next_valid = state;	// core/src/core.scala:57:7, :62:24
  assign io_next_bits_pc = regs_pc;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_inst = regs_inst;	// core/src/core.scala:57:7, :65:19
endmodule

module ImmGen(	// core/src/idu.scala:171:7
  input  [25:0] io_inst26,	// core/src/idu.scala:172:16
  input  [3:0]  io_immType,	// core/src/idu.scala:172:16
  output [31:0] io_Imm	// core/src/idu.scala:172:16
);

  assign io_Imm =
    io_immType == 4'h8
      ? {{4{io_inst26[9]}}, io_inst26[9:0], io_inst26[25:10], 2'h0}
      : io_immType == 4'h7
          ? {{9{io_inst26[4]}}, io_inst26[4:0], io_inst26[25:10], 2'h0}
          : io_immType == 4'h6
              ? {io_inst26[24:5], 12'h0}
              : io_immType == 4'h5
                  ? {{14{io_inst26[25]}}, io_inst26[25:10], 2'h0}
                  : io_immType == 4'h4
                      ? {{16{io_inst26[23]}}, io_inst26[23:10], 2'h0}
                      : io_immType == 4'h3
                          ? {20'h0, io_inst26[21:10]}
                          : io_immType == 4'h2
                              ? {{20{io_inst26[21]}}, io_inst26[21:10]}
                              : io_immType == 4'h1
                                  ? {{24{io_inst26[17]}}, io_inst26[17:10]}
                                  : io_immType == 4'h0
                                      ? {27'h0, io_inst26[14:10]}
                                      : 32'h0;	// core/src/idu.scala:171:7, :178:42, :180:{37,42,62}, :181:{36,41,55,71}, :182:{37,42,56,72}, :183:38, :184:{37,42,56,72,86}, :185:{37,42,56,72}, :186:{37,47,60}, :187:{37,42,55,70}, :188:{35,40,53,68}
endmodule

module RegFile(	// core/src/idu.scala:149:7
  input         clock,	// core/src/idu.scala:149:7
                reset,	// core/src/idu.scala:149:7
  input  [4:0]  io_rd,	// core/src/idu.scala:150:16
                io_rj,	// core/src/idu.scala:150:16
                io_rk,	// core/src/idu.scala:150:16
  output [31:0] io_rd_data,	// core/src/idu.scala:150:16
                io_rj_data,	// core/src/idu.scala:150:16
                io_rk_data,	// core/src/idu.scala:150:16
  input         io_wen,	// core/src/idu.scala:150:16
  input  [4:0]  io_waddr,	// core/src/idu.scala:150:16
  input  [31:0] io_wdata	// core/src/idu.scala:150:16
);

  reg  [31:0]       reg_0;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_1;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_2;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_3;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_4;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_5;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_6;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_7;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_8;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_9;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_10;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_11;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_12;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_13;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_14;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_15;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_16;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_17;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_18;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_19;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_20;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_21;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_22;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_23;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_24;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_25;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_26;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_27;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_28;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_29;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_30;	// core/src/idu.scala:162:22
  reg  [31:0]       reg_31;	// core/src/idu.scala:162:22
  wire [31:0][31:0] _GEN =
    {{reg_31},
     {reg_30},
     {reg_29},
     {reg_28},
     {reg_27},
     {reg_26},
     {reg_25},
     {reg_24},
     {reg_23},
     {reg_22},
     {reg_21},
     {reg_20},
     {reg_19},
     {reg_18},
     {reg_17},
     {reg_16},
     {reg_15},
     {reg_14},
     {reg_13},
     {reg_12},
     {reg_11},
     {reg_10},
     {reg_9},
     {reg_8},
     {reg_7},
     {reg_6},
     {reg_5},
     {reg_4},
     {reg_3},
     {reg_2},
     {reg_1},
     {reg_0}};	// core/src/idu.scala:162:22, :164:22
  always @(posedge clock) begin	// core/src/idu.scala:149:7
    if (reset) begin	// core/src/idu.scala:149:7
      reg_0 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_1 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_2 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_3 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_4 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_5 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_6 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_7 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_8 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_9 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_10 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_11 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_12 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_13 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_14 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_15 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_16 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_17 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_18 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_19 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_20 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_21 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_22 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_23 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_24 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_25 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_26 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_27 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_28 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_29 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_30 <= 32'h0;	// core/src/idu.scala:162:{22,30}
      reg_31 <= 32'h0;	// core/src/idu.scala:162:{22,30}
    end
    else begin	// core/src/idu.scala:149:7
      if (io_waddr == 5'h0) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_0 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_0 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h1) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_1 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_1 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h2) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_2 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_2 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h3) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_3 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_3 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h4) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_4 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_4 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h5) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_5 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_5 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h6) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_6 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_6 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h7) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_7 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_7 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h8) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_8 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_8 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h9) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_9 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_9 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'hA) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_10 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_10 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'hB) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_11 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_11 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'hC) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_12 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_12 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'hD) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_13 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_13 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'hE) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_14 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_14 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'hF) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_15 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_15 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h10) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_16 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_16 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h11) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_17 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_17 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h12) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_18 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_18 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h13) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_19 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_19 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h14) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_20 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_20 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h15) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_21 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_21 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h16) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_22 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_22 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h17) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_23 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_23 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h18) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_24 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_24 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h19) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_25 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_25 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h1A) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_26 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_26 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h1B) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_27 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_27 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h1C) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_28 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_28 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h1D) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_29 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_29 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (io_waddr == 5'h1E) begin	// core/src/idu.scala:149:7, :168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_30 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_30 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
      if (&io_waddr) begin	// core/src/idu.scala:168:19
        if (io_wen)	// core/src/idu.scala:150:16
          reg_31 <= io_wdata;	// core/src/idu.scala:162:22
        else	// core/src/idu.scala:150:16
          reg_31 <= _GEN[io_waddr];	// core/src/idu.scala:162:22, :164:22, :168:25
      end
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/idu.scala:149:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/idu.scala:149:7
      `FIRRTL_BEFORE_INITIAL	// core/src/idu.scala:149:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/idu.scala:149:7
      automatic logic [31:0] _RANDOM[0:31];	// core/src/idu.scala:149:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/idu.scala:149:7
        `INIT_RANDOM_PROLOG_	// core/src/idu.scala:149:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/idu.scala:149:7
        for (logic [5:0] i = 6'h0; i < 6'h20; i += 6'h1) begin
          _RANDOM[i[4:0]] = `RANDOM;	// core/src/idu.scala:149:7
        end	// core/src/idu.scala:149:7
        reg_0 = _RANDOM[5'h0];	// core/src/idu.scala:149:7, :162:22
        reg_1 = _RANDOM[5'h1];	// core/src/idu.scala:149:7, :162:22
        reg_2 = _RANDOM[5'h2];	// core/src/idu.scala:149:7, :162:22
        reg_3 = _RANDOM[5'h3];	// core/src/idu.scala:149:7, :162:22
        reg_4 = _RANDOM[5'h4];	// core/src/idu.scala:149:7, :162:22
        reg_5 = _RANDOM[5'h5];	// core/src/idu.scala:149:7, :162:22
        reg_6 = _RANDOM[5'h6];	// core/src/idu.scala:149:7, :162:22
        reg_7 = _RANDOM[5'h7];	// core/src/idu.scala:149:7, :162:22
        reg_8 = _RANDOM[5'h8];	// core/src/idu.scala:149:7, :162:22
        reg_9 = _RANDOM[5'h9];	// core/src/idu.scala:149:7, :162:22
        reg_10 = _RANDOM[5'hA];	// core/src/idu.scala:149:7, :162:22
        reg_11 = _RANDOM[5'hB];	// core/src/idu.scala:149:7, :162:22
        reg_12 = _RANDOM[5'hC];	// core/src/idu.scala:149:7, :162:22
        reg_13 = _RANDOM[5'hD];	// core/src/idu.scala:149:7, :162:22
        reg_14 = _RANDOM[5'hE];	// core/src/idu.scala:149:7, :162:22
        reg_15 = _RANDOM[5'hF];	// core/src/idu.scala:149:7, :162:22
        reg_16 = _RANDOM[5'h10];	// core/src/idu.scala:149:7, :162:22
        reg_17 = _RANDOM[5'h11];	// core/src/idu.scala:149:7, :162:22
        reg_18 = _RANDOM[5'h12];	// core/src/idu.scala:149:7, :162:22
        reg_19 = _RANDOM[5'h13];	// core/src/idu.scala:149:7, :162:22
        reg_20 = _RANDOM[5'h14];	// core/src/idu.scala:149:7, :162:22
        reg_21 = _RANDOM[5'h15];	// core/src/idu.scala:149:7, :162:22
        reg_22 = _RANDOM[5'h16];	// core/src/idu.scala:149:7, :162:22
        reg_23 = _RANDOM[5'h17];	// core/src/idu.scala:149:7, :162:22
        reg_24 = _RANDOM[5'h18];	// core/src/idu.scala:149:7, :162:22
        reg_25 = _RANDOM[5'h19];	// core/src/idu.scala:149:7, :162:22
        reg_26 = _RANDOM[5'h1A];	// core/src/idu.scala:149:7, :162:22
        reg_27 = _RANDOM[5'h1B];	// core/src/idu.scala:149:7, :162:22
        reg_28 = _RANDOM[5'h1C];	// core/src/idu.scala:149:7, :162:22
        reg_29 = _RANDOM[5'h1D];	// core/src/idu.scala:149:7, :162:22
        reg_30 = _RANDOM[5'h1E];	// core/src/idu.scala:149:7, :162:22
        reg_31 = _RANDOM[5'h1F];	// core/src/idu.scala:149:7, :162:22
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/idu.scala:149:7
      `FIRRTL_AFTER_INITIAL	// core/src/idu.scala:149:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_rd_data = io_rd == 5'h0 ? 32'h0 : _GEN[io_rd];	// core/src/idu.scala:149:7, :162:30, :164:{22,29}
  assign io_rj_data = io_rj == 5'h0 ? 32'h0 : _GEN[io_rj];	// core/src/idu.scala:149:7, :162:30, :164:22, :165:{22,29}
  assign io_rk_data = io_rk == 5'h0 ? 32'h0 : _GEN[io_rk];	// core/src/idu.scala:149:7, :162:30, :164:22, :166:{22,29}
endmodule

module idu(	// core/src/idu.scala:5:7
  input         clock,	// core/src/idu.scala:5:7
                reset,	// core/src/idu.scala:5:7
                io_prev_valid,	// core/src/idu.scala:6:16
  input  [31:0] io_prev_bits_pc,	// core/src/idu.scala:6:16
                io_prev_bits_inst,	// core/src/idu.scala:6:16
  output        io_next_valid,	// core/src/idu.scala:6:16
  output [3:0]  io_next_bits_aluOp,	// core/src/idu.scala:6:16
  output [1:0]  io_next_bits_aluAsrc,	// core/src/idu.scala:6:16
  output [2:0]  io_next_bits_aluBsrc,	// core/src/idu.scala:6:16
  output [3:0]  io_next_bits_memOp,	// core/src/idu.scala:6:16
                io_next_bits_branch,	// core/src/idu.scala:6:16
  output [1:0]  io_next_bits_wbSel,	// core/src/idu.scala:6:16
                io_next_bits_wbDst,	// core/src/idu.scala:6:16
  output [31:0] io_next_bits_Imm,	// core/src/idu.scala:6:16
  output [4:0]  io_next_bits_rd,	// core/src/idu.scala:6:16
  output [31:0] io_next_bits_rd_data,	// core/src/idu.scala:6:16
                io_next_bits_rj_data,	// core/src/idu.scala:6:16
                io_next_bits_rk_data,	// core/src/idu.scala:6:16
                io_next_bits_pc,	// core/src/idu.scala:6:16
  input         io_wen,	// core/src/idu.scala:6:16
  input  [4:0]  io_waddr,	// core/src/idu.scala:6:16
  input  [31:0] io_wdata	// core/src/idu.scala:6:16
);

  wire _Decode_T_1 = io_prev_bits_inst[31:15] == 17'h20;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_3 = io_prev_bits_inst[31:15] == 17'h22;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_5 = io_prev_bits_inst[31:15] == 17'h24;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_7 = io_prev_bits_inst[31:15] == 17'h25;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_9 = io_prev_bits_inst[31:15] == 17'h28;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_11 = io_prev_bits_inst[31:15] == 17'h29;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_13 = io_prev_bits_inst[31:15] == 17'h2A;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_15 = io_prev_bits_inst[31:15] == 17'h2B;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_17 = io_prev_bits_inst[31:15] == 17'h2E;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_19 = io_prev_bits_inst[31:15] == 17'h2F;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_21 = io_prev_bits_inst[31:15] == 17'h30;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_23 = io_prev_bits_inst[31:15] == 17'h38;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_25 = io_prev_bits_inst[31:15] == 17'h39;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_27 = io_prev_bits_inst[31:15] == 17'h3A;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_29 = io_prev_bits_inst[31:15] == 17'h81;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_31 = io_prev_bits_inst[31:15] == 17'h89;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_33 = io_prev_bits_inst[31:15] == 17'h91;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_35 = io_prev_bits_inst[31:22] == 10'h8;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_37 = io_prev_bits_inst[31:22] == 10'h9;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_39 = io_prev_bits_inst[31:22] == 10'hA;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_41 = io_prev_bits_inst[31:22] == 10'hD;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_43 = io_prev_bits_inst[31:22] == 10'hE;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_45 = io_prev_bits_inst[31:22] == 10'hF;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_47 = io_prev_bits_inst[31:25] == 7'hA;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_49 = io_prev_bits_inst[31:25] == 7'hE;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_51 = io_prev_bits_inst[31:22] == 10'hA0;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_53 = io_prev_bits_inst[31:22] == 10'hA1;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_55 = io_prev_bits_inst[31:22] == 10'hA2;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_57 = io_prev_bits_inst[31:22] == 10'hA4;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_59 = io_prev_bits_inst[31:22] == 10'hA5;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_61 = io_prev_bits_inst[31:22] == 10'hA6;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_63 = io_prev_bits_inst[31:22] == 10'hA8;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_65 = io_prev_bits_inst[31:22] == 10'hA9;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_67 = io_prev_bits_inst[31:26] == 6'h13;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_69 = io_prev_bits_inst[31:26] == 6'h14;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_71 = io_prev_bits_inst[31:26] == 6'h15;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_73 = io_prev_bits_inst[31:26] == 6'h16;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_75 = io_prev_bits_inst[31:26] == 6'h17;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_77 = io_prev_bits_inst[31:26] == 6'h18;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_79 = io_prev_bits_inst[31:26] == 6'h19;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_81 = io_prev_bits_inst[31:26] == 6'h1A;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _Decode_T_83 = io_prev_bits_inst[31:26] == 6'h1B;	// src/main/scala/chisel3/util/Lookup.scala:31:38
  wire _GEN =
    _Decode_T_73 | _Decode_T_75 | _Decode_T_77 | _Decode_T_79 | _Decode_T_81
    | _Decode_T_83;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire _GEN_0 = _Decode_T_63 | _Decode_T_65 | _Decode_T_67;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire _GEN_1 = _Decode_T_63 | _Decode_T_65;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire _GEN_2 =
    _Decode_T_51 | _Decode_T_53 | _Decode_T_55 | _Decode_T_57 | _Decode_T_59
    | _Decode_T_61 | _GEN_1;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire _GEN_3 = _Decode_T_41 | _Decode_T_43 | _Decode_T_45;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire _GEN_4 =
    _Decode_T_29 | _Decode_T_31 | _Decode_T_33 | _Decode_T_35 | _Decode_T_37
    | _Decode_T_39 | _Decode_T_41 | _Decode_T_43 | _Decode_T_45 | _Decode_T_47
    | _Decode_T_49 | _GEN_2;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire _GEN_5 =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
    | _Decode_T_23 | _Decode_T_25 | _Decode_T_27;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire _GEN_6 = _Decode_T_47 | _Decode_T_49;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire _GEN_7 =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
    | _Decode_T_23 | _Decode_T_25 | _Decode_T_27 | _Decode_T_29 | _Decode_T_31
    | _Decode_T_33 | _Decode_T_35 | _Decode_T_37 | _Decode_T_39 | _Decode_T_41
    | _Decode_T_43 | _Decode_T_45 | _GEN_6;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire _GEN_8 = _Decode_T_57 | _Decode_T_59 | _Decode_T_61;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  wire _GEN_9 = _Decode_T_51 | _Decode_T_53 | _Decode_T_55;	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  ImmGen immGen (	// core/src/idu.scala:116:24
    .io_inst26  (io_prev_bits_inst[25:0]),	// core/src/idu.scala:117:42
    .io_immType
      (_GEN_5
         ? 4'h9
         : _Decode_T_29 | _Decode_T_31 | _Decode_T_33
             ? 4'h0
             : _Decode_T_35 | _Decode_T_37 | _Decode_T_39
                 ? 4'h2
                 : _GEN_3
                     ? 4'h3
                     : _GEN_6
                         ? 4'h6
                         : _GEN_2
                             ? 4'h2
                             : _Decode_T_67
                                 ? 4'h5
                                 : _Decode_T_69 | _Decode_T_71
                                     ? 4'h8
                                     : _GEN ? 4'h5 : 4'h9),	// src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
    .io_Imm     (io_next_bits_Imm)
  );
  RegFile regFile (	// core/src/idu.scala:120:25
    .clock      (clock),
    .reset      (reset),
    .io_rd      (io_prev_bits_inst[4:0]),	// core/src/idu.scala:121:39
    .io_rj      (io_prev_bits_inst[9:5]),	// core/src/idu.scala:122:39
    .io_rk      (io_prev_bits_inst[14:10]),	// core/src/idu.scala:123:39
    .io_rd_data (io_next_bits_rd_data),
    .io_rj_data (io_next_bits_rj_data),
    .io_rk_data (io_next_bits_rk_data),
    .io_wen     (io_wen),
    .io_waddr   (io_waddr),
    .io_wdata   (io_wdata)
  );
  assign io_next_valid = io_prev_valid;	// core/src/idu.scala:5:7
  assign io_next_bits_aluOp =
    _Decode_T_1
      ? 4'h0
      : _Decode_T_3
          ? 4'h1
          : _Decode_T_5
              ? 4'h2
              : _Decode_T_7
                  ? 4'h3
                  : _Decode_T_9
                      ? 4'h7
                      : _Decode_T_11
                          ? 4'h4
                          : _Decode_T_13
                              ? 4'h5
                              : _Decode_T_15
                                  ? 4'h6
                                  : _Decode_T_17
                                      ? 4'hB
                                      : _Decode_T_19
                                          ? 4'hC
                                          : _Decode_T_21
                                              ? 4'hD
                                              : _Decode_T_23
                                                  ? 4'h8
                                                  : _Decode_T_25
                                                      ? 4'h9
                                                      : _Decode_T_27
                                                          ? 4'hA
                                                          : _Decode_T_29
                                                              ? 4'hB
                                                              : _Decode_T_31
                                                                  ? 4'hC
                                                                  : _Decode_T_33
                                                                      ? 4'hD
                                                                      : _Decode_T_35
                                                                          ? 4'h2
                                                                          : _Decode_T_37
                                                                              ? 4'h3
                                                                              : _Decode_T_39
                                                                                  ? 4'h0
                                                                                  : _Decode_T_41
                                                                                      ? 4'h4
                                                                                      : _Decode_T_43
                                                                                          ? 4'h5
                                                                                          : _Decode_T_45
                                                                                              ? 4'h6
                                                                                              : _Decode_T_47
                                                                                                | _Decode_T_49
                                                                                                | _Decode_T_51
                                                                                                | _Decode_T_53
                                                                                                | _Decode_T_55
                                                                                                | _Decode_T_57
                                                                                                | _Decode_T_59
                                                                                                | _Decode_T_61
                                                                                                | _GEN_0
                                                                                                  ? 4'h0
                                                                                                  : _Decode_T_69
                                                                                                      ? 4'hE
                                                                                                      : _Decode_T_71
                                                                                                          ? 4'h0
                                                                                                          : _GEN
                                                                                                              ? 4'h1
                                                                                                              : 4'hE;	// core/src/idu.scala:5:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_aluAsrc =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
    | _Decode_T_23 | _Decode_T_25 | _Decode_T_27 | _Decode_T_29 | _Decode_T_31
    | _Decode_T_33 | _Decode_T_35 | _Decode_T_37 | _Decode_T_39 | _GEN_3
      ? 2'h0
      : _Decode_T_47
          ? 2'h2
          : _Decode_T_49
              ? 2'h1
              : _GEN_2
                  ? 2'h0
                  : _Decode_T_67
                      ? 2'h1
                      : _Decode_T_69 ? 2'h2 : _Decode_T_71 ? 2'h1 : {~_GEN, 1'h0};	// core/src/idu.scala:5:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_aluBsrc =
    _GEN_5
      ? 3'h0
      : _GEN_4
          ? 3'h2
          : _Decode_T_67
              ? 3'h3
              : _Decode_T_69 ? 3'h4 : _Decode_T_71 ? 3'h3 : _GEN ? 3'h1 : 3'h4;	// core/src/idu.scala:5:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_memOp =
    _GEN_7
      ? 4'h8
      : _Decode_T_51
          ? 4'h0
          : _Decode_T_53
              ? 4'h2
              : _Decode_T_55
                  ? 4'h4
                  : _Decode_T_57
                      ? 4'h5
                      : _Decode_T_59
                          ? 4'h6
                          : _Decode_T_61
                              ? 4'h7
                              : _Decode_T_63 ? 4'h1 : _Decode_T_65 ? 4'h3 : 4'h8;	// core/src/idu.scala:5:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_branch =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
    | _Decode_T_23 | _Decode_T_25 | _Decode_T_27 | _GEN_4
      ? 4'h9
      : _Decode_T_67
          ? 4'h8
          : _Decode_T_69
              ? 4'h6
              : _Decode_T_71
                  ? 4'h7
                  : _Decode_T_73
                      ? 4'h0
                      : _Decode_T_75
                          ? 4'h1
                          : _Decode_T_77
                              ? 4'h2
                              : _Decode_T_79
                                  ? 4'h3
                                  : _Decode_T_81 ? 4'h4 : _Decode_T_83 ? 4'h5 : 4'h9;	// core/src/idu.scala:5:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_wbSel =
    _GEN_7
      ? 2'h0
      : _GEN_9
          ? 2'h1
          : _GEN_8
              ? 2'h2
              : _GEN_1
                  ? 2'h1
                  : _Decode_T_67 ? 2'h0 : _Decode_T_69 ? 2'h2 : {~_Decode_T_71, 1'h0};	// core/src/idu.scala:5:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_wbDst =
    _Decode_T_1 | _Decode_T_3 | _Decode_T_5 | _Decode_T_7 | _Decode_T_9 | _Decode_T_11
    | _Decode_T_13 | _Decode_T_15 | _Decode_T_17 | _Decode_T_19 | _Decode_T_21
    | _Decode_T_23 | _Decode_T_25 | _Decode_T_27 | _Decode_T_29 | _Decode_T_31
    | _Decode_T_33 | _Decode_T_35 | _Decode_T_37 | _Decode_T_39 | _Decode_T_41
    | _Decode_T_43 | _Decode_T_45 | _Decode_T_47 | _Decode_T_49 | _GEN_9
      ? 2'h0
      : _GEN_8 ? 2'h2 : _GEN_0 ? 2'h0 : _Decode_T_69 | ~_Decode_T_71 ? 2'h2 : 2'h1;	// core/src/idu.scala:5:7, src/main/scala/chisel3/util/Lookup.scala:31:38, :34:39
  assign io_next_bits_rd = io_prev_bits_inst[4:0];	// core/src/idu.scala:5:7, :121:39
  assign io_next_bits_pc = io_prev_bits_pc;	// core/src/idu.scala:5:7
endmodule

module buffer_1(	// core/src/core.scala:57:7
  input         clock,	// core/src/core.scala:57:7
                reset,	// core/src/core.scala:57:7
                io_prev_valid,	// core/src/core.scala:58:16
  input  [3:0]  io_prev_bits_aluOp,	// core/src/core.scala:58:16
  input  [1:0]  io_prev_bits_aluAsrc,	// core/src/core.scala:58:16
  input  [2:0]  io_prev_bits_aluBsrc,	// core/src/core.scala:58:16
  input  [3:0]  io_prev_bits_memOp,	// core/src/core.scala:58:16
                io_prev_bits_branch,	// core/src/core.scala:58:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/core.scala:58:16
                io_prev_bits_wbDst,	// core/src/core.scala:58:16
  input  [31:0] io_prev_bits_Imm,	// core/src/core.scala:58:16
  input  [4:0]  io_prev_bits_rd,	// core/src/core.scala:58:16
  input  [31:0] io_prev_bits_rd_data,	// core/src/core.scala:58:16
                io_prev_bits_rj_data,	// core/src/core.scala:58:16
                io_prev_bits_rk_data,	// core/src/core.scala:58:16
                io_prev_bits_pc,	// core/src/core.scala:58:16
  output        io_next_valid,	// core/src/core.scala:58:16
  output [3:0]  io_next_bits_aluOp,	// core/src/core.scala:58:16
  output [1:0]  io_next_bits_aluAsrc,	// core/src/core.scala:58:16
  output [2:0]  io_next_bits_aluBsrc,	// core/src/core.scala:58:16
  output [3:0]  io_next_bits_memOp,	// core/src/core.scala:58:16
                io_next_bits_branch,	// core/src/core.scala:58:16
  output [1:0]  io_next_bits_wbSel,	// core/src/core.scala:58:16
                io_next_bits_wbDst,	// core/src/core.scala:58:16
  output [31:0] io_next_bits_Imm,	// core/src/core.scala:58:16
  output [4:0]  io_next_bits_rd,	// core/src/core.scala:58:16
  output [31:0] io_next_bits_rd_data,	// core/src/core.scala:58:16
                io_next_bits_rj_data,	// core/src/core.scala:58:16
                io_next_bits_rk_data,	// core/src/core.scala:58:16
                io_next_bits_pc	// core/src/core.scala:58:16
);

  reg        state;	// core/src/core.scala:62:24
  reg [3:0]  regs_aluOp;	// core/src/core.scala:65:19
  reg [1:0]  regs_aluAsrc;	// core/src/core.scala:65:19
  reg [2:0]  regs_aluBsrc;	// core/src/core.scala:65:19
  reg [3:0]  regs_memOp;	// core/src/core.scala:65:19
  reg [3:0]  regs_branch;	// core/src/core.scala:65:19
  reg [1:0]  regs_wbSel;	// core/src/core.scala:65:19
  reg [1:0]  regs_wbDst;	// core/src/core.scala:65:19
  reg [31:0] regs_Imm;	// core/src/core.scala:65:19
  reg [4:0]  regs_rd;	// core/src/core.scala:65:19
  reg [31:0] regs_rd_data;	// core/src/core.scala:65:19
  reg [31:0] regs_rj_data;	// core/src/core.scala:65:19
  reg [31:0] regs_rk_data;	// core/src/core.scala:65:19
  reg [31:0] regs_pc;	// core/src/core.scala:65:19
  always @(posedge clock) begin	// core/src/core.scala:57:7
    if (reset)	// core/src/core.scala:57:7
      state <= 1'h0;	// core/src/core.scala:62:24
    else	// core/src/core.scala:57:7
      state <= io_prev_valid;	// core/src/core.scala:62:24
    if (io_prev_valid) begin	// core/src/core.scala:58:16
      regs_aluOp <= io_prev_bits_aluOp;	// core/src/core.scala:65:19
      regs_aluAsrc <= io_prev_bits_aluAsrc;	// core/src/core.scala:65:19
      regs_aluBsrc <= io_prev_bits_aluBsrc;	// core/src/core.scala:65:19
      regs_memOp <= io_prev_bits_memOp;	// core/src/core.scala:65:19
      regs_branch <= io_prev_bits_branch;	// core/src/core.scala:65:19
      regs_wbSel <= io_prev_bits_wbSel;	// core/src/core.scala:65:19
      regs_wbDst <= io_prev_bits_wbDst;	// core/src/core.scala:65:19
      regs_Imm <= io_prev_bits_Imm;	// core/src/core.scala:65:19
      regs_rd <= io_prev_bits_rd;	// core/src/core.scala:65:19
      regs_rd_data <= io_prev_bits_rd_data;	// core/src/core.scala:65:19
      regs_rj_data <= io_prev_bits_rj_data;	// core/src/core.scala:65:19
      regs_rk_data <= io_prev_bits_rk_data;	// core/src/core.scala:65:19
      regs_pc <= io_prev_bits_pc;	// core/src/core.scala:65:19
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/core.scala:57:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/core.scala:57:7
      `FIRRTL_BEFORE_INITIAL	// core/src/core.scala:57:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/core.scala:57:7
      automatic logic [31:0] _RANDOM[0:5];	// core/src/core.scala:57:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/core.scala:57:7
        `INIT_RANDOM_PROLOG_	// core/src/core.scala:57:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/core.scala:57:7
        for (logic [2:0] i = 3'h0; i < 3'h6; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;	// core/src/core.scala:57:7
        end	// core/src/core.scala:57:7
        state = _RANDOM[3'h0][0];	// core/src/core.scala:57:7, :62:24
        regs_aluOp = _RANDOM[3'h0][4:1];	// core/src/core.scala:57:7, :62:24, :65:19
        regs_aluAsrc = _RANDOM[3'h0][6:5];	// core/src/core.scala:57:7, :62:24, :65:19
        regs_aluBsrc = _RANDOM[3'h0][9:7];	// core/src/core.scala:57:7, :62:24, :65:19
        regs_memOp = _RANDOM[3'h0][13:10];	// core/src/core.scala:57:7, :62:24, :65:19
        regs_branch = _RANDOM[3'h0][17:14];	// core/src/core.scala:57:7, :62:24, :65:19
        regs_wbSel = _RANDOM[3'h0][19:18];	// core/src/core.scala:57:7, :62:24, :65:19
        regs_wbDst = _RANDOM[3'h0][21:20];	// core/src/core.scala:57:7, :62:24, :65:19
        regs_Imm = {_RANDOM[3'h0][31:22], _RANDOM[3'h1][21:0]};	// core/src/core.scala:57:7, :62:24, :65:19
        regs_rd = _RANDOM[3'h1][26:22];	// core/src/core.scala:57:7, :65:19
        regs_rd_data = {_RANDOM[3'h1][31:27], _RANDOM[3'h2][26:0]};	// core/src/core.scala:57:7, :65:19
        regs_rj_data = {_RANDOM[3'h2][31:27], _RANDOM[3'h3][26:0]};	// core/src/core.scala:57:7, :65:19
        regs_rk_data = {_RANDOM[3'h3][31:27], _RANDOM[3'h4][26:0]};	// core/src/core.scala:57:7, :65:19
        regs_pc = {_RANDOM[3'h4][31:27], _RANDOM[3'h5][26:0]};	// core/src/core.scala:57:7, :65:19
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/core.scala:57:7
      `FIRRTL_AFTER_INITIAL	// core/src/core.scala:57:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_next_valid = state;	// core/src/core.scala:57:7, :62:24
  assign io_next_bits_aluOp = regs_aluOp;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_aluAsrc = regs_aluAsrc;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_aluBsrc = regs_aluBsrc;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_memOp = regs_memOp;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_branch = regs_branch;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_wbSel = regs_wbSel;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_wbDst = regs_wbDst;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_Imm = regs_Imm;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_rd = regs_rd;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_rd_data = regs_rd_data;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_rj_data = regs_rj_data;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_rk_data = regs_rk_data;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_pc = regs_pc;	// core/src/core.scala:57:7, :65:19
endmodule

module booth2(	// core/src/exu.scala:260:7
  input  [31:0] io_A,	// core/src/exu.scala:261:16
  input  [2:0]  io_B,	// core/src/exu.scala:261:16
  output [63:0] io_S	// core/src/exu.scala:261:16
);

  wire [31:0]      _SignExtA_T_1 = {32{io_A[31]}};	// core/src/exu.scala:266:{28,36}
  wire [64:0]      _GEN =
    {1'h0, io_B == 3'h2 | io_B == 3'h1 ? {_SignExtA_T_1, io_A} : 64'h0};	// core/src/exu.scala:266:{23,28}, :267:34, :271:31
  wire [64:0]      _GEN_0 = {1'h0, 64'h0 - {_SignExtA_T_1, io_A}};	// core/src/exu.scala:266:28, :267:34, :271:31, :272:21, :273:21
  wire [7:0][64:0] _GEN_1 =
    {{65'h0},
     {_GEN_0},
     {_GEN_0},
     {65'h0 - {_SignExtA_T_1, io_A, 1'h0}},
     {{_SignExtA_T_1, io_A, 1'h0}},
     {_GEN},
     {_GEN},
     {_GEN}};	// core/src/exu.scala:266:28, :267:34, :271:31, :272:21
  assign io_S = _GEN_1[io_B][63:0];	// core/src/exu.scala:260:7, :267:{10,34}
endmodule

module csa(	// core/src/exu.scala:279:7
  input  [63:0] io_A,	// core/src/exu.scala:280:16
                io_B,	// core/src/exu.scala:280:16
                io_Cin,	// core/src/exu.scala:280:16
  output [63:0] io_S,	// core/src/exu.scala:280:16
                io_Cout	// core/src/exu.scala:280:16
);

  assign io_S =
    {io_A[63] ^ io_B[63] ^ io_Cin[63],
     io_A[62] ^ io_B[62] ^ io_Cin[62],
     io_A[61] ^ io_B[61] ^ io_Cin[61],
     io_A[60] ^ io_B[60] ^ io_Cin[60],
     io_A[59] ^ io_B[59] ^ io_Cin[59],
     io_A[58] ^ io_B[58] ^ io_Cin[58],
     io_A[57] ^ io_B[57] ^ io_Cin[57],
     io_A[56] ^ io_B[56] ^ io_Cin[56],
     io_A[55] ^ io_B[55] ^ io_Cin[55],
     io_A[54] ^ io_B[54] ^ io_Cin[54],
     io_A[53] ^ io_B[53] ^ io_Cin[53],
     io_A[52] ^ io_B[52] ^ io_Cin[52],
     io_A[51] ^ io_B[51] ^ io_Cin[51],
     io_A[50] ^ io_B[50] ^ io_Cin[50],
     io_A[49] ^ io_B[49] ^ io_Cin[49],
     io_A[48] ^ io_B[48] ^ io_Cin[48],
     io_A[47] ^ io_B[47] ^ io_Cin[47],
     io_A[46] ^ io_B[46] ^ io_Cin[46],
     io_A[45] ^ io_B[45] ^ io_Cin[45],
     io_A[44] ^ io_B[44] ^ io_Cin[44],
     io_A[43] ^ io_B[43] ^ io_Cin[43],
     io_A[42] ^ io_B[42] ^ io_Cin[42],
     io_A[41] ^ io_B[41] ^ io_Cin[41],
     io_A[40] ^ io_B[40] ^ io_Cin[40],
     io_A[39] ^ io_B[39] ^ io_Cin[39],
     io_A[38] ^ io_B[38] ^ io_Cin[38],
     io_A[37] ^ io_B[37] ^ io_Cin[37],
     io_A[36] ^ io_B[36] ^ io_Cin[36],
     io_A[35] ^ io_B[35] ^ io_Cin[35],
     io_A[34] ^ io_B[34] ^ io_Cin[34],
     io_A[33] ^ io_B[33] ^ io_Cin[33],
     io_A[32] ^ io_B[32] ^ io_Cin[32],
     io_A[31] ^ io_B[31] ^ io_Cin[31],
     io_A[30] ^ io_B[30] ^ io_Cin[30],
     io_A[29] ^ io_B[29] ^ io_Cin[29],
     io_A[28] ^ io_B[28] ^ io_Cin[28],
     io_A[27] ^ io_B[27] ^ io_Cin[27],
     io_A[26] ^ io_B[26] ^ io_Cin[26],
     io_A[25] ^ io_B[25] ^ io_Cin[25],
     io_A[24] ^ io_B[24] ^ io_Cin[24],
     io_A[23] ^ io_B[23] ^ io_Cin[23],
     io_A[22] ^ io_B[22] ^ io_Cin[22],
     io_A[21] ^ io_B[21] ^ io_Cin[21],
     io_A[20] ^ io_B[20] ^ io_Cin[20],
     io_A[19] ^ io_B[19] ^ io_Cin[19],
     io_A[18] ^ io_B[18] ^ io_Cin[18],
     io_A[17] ^ io_B[17] ^ io_Cin[17],
     io_A[16] ^ io_B[16] ^ io_Cin[16],
     io_A[15] ^ io_B[15] ^ io_Cin[15],
     io_A[14] ^ io_B[14] ^ io_Cin[14],
     io_A[13] ^ io_B[13] ^ io_Cin[13],
     io_A[12] ^ io_B[12] ^ io_Cin[12],
     io_A[11] ^ io_B[11] ^ io_Cin[11],
     io_A[10] ^ io_B[10] ^ io_Cin[10],
     io_A[9] ^ io_B[9] ^ io_Cin[9],
     io_A[8] ^ io_B[8] ^ io_Cin[8],
     io_A[7] ^ io_B[7] ^ io_Cin[7],
     io_A[6] ^ io_B[6] ^ io_Cin[6],
     io_A[5] ^ io_B[5] ^ io_Cin[5],
     io_A[4] ^ io_B[4] ^ io_Cin[4],
     io_A[3] ^ io_B[3] ^ io_Cin[3],
     io_A[2] ^ io_B[2] ^ io_Cin[2],
     io_A[1] ^ io_B[1] ^ io_Cin[1],
     io_A[0] ^ io_B[0] ^ io_Cin[0]};	// core/src/exu.scala:279:7, :290:{21,31,35,43}, :293:15
  assign io_Cout =
    {io_A[63] & io_B[63] | io_A[63] & io_Cin[63] | io_B[63] & io_Cin[63],
     io_A[62] & io_B[62] | io_A[62] & io_Cin[62] | io_B[62] & io_Cin[62],
     io_A[61] & io_B[61] | io_A[61] & io_Cin[61] | io_B[61] & io_Cin[61],
     io_A[60] & io_B[60] | io_A[60] & io_Cin[60] | io_B[60] & io_Cin[60],
     io_A[59] & io_B[59] | io_A[59] & io_Cin[59] | io_B[59] & io_Cin[59],
     io_A[58] & io_B[58] | io_A[58] & io_Cin[58] | io_B[58] & io_Cin[58],
     io_A[57] & io_B[57] | io_A[57] & io_Cin[57] | io_B[57] & io_Cin[57],
     io_A[56] & io_B[56] | io_A[56] & io_Cin[56] | io_B[56] & io_Cin[56],
     io_A[55] & io_B[55] | io_A[55] & io_Cin[55] | io_B[55] & io_Cin[55],
     io_A[54] & io_B[54] | io_A[54] & io_Cin[54] | io_B[54] & io_Cin[54],
     io_A[53] & io_B[53] | io_A[53] & io_Cin[53] | io_B[53] & io_Cin[53],
     io_A[52] & io_B[52] | io_A[52] & io_Cin[52] | io_B[52] & io_Cin[52],
     io_A[51] & io_B[51] | io_A[51] & io_Cin[51] | io_B[51] & io_Cin[51],
     io_A[50] & io_B[50] | io_A[50] & io_Cin[50] | io_B[50] & io_Cin[50],
     io_A[49] & io_B[49] | io_A[49] & io_Cin[49] | io_B[49] & io_Cin[49],
     io_A[48] & io_B[48] | io_A[48] & io_Cin[48] | io_B[48] & io_Cin[48],
     io_A[47] & io_B[47] | io_A[47] & io_Cin[47] | io_B[47] & io_Cin[47],
     io_A[46] & io_B[46] | io_A[46] & io_Cin[46] | io_B[46] & io_Cin[46],
     io_A[45] & io_B[45] | io_A[45] & io_Cin[45] | io_B[45] & io_Cin[45],
     io_A[44] & io_B[44] | io_A[44] & io_Cin[44] | io_B[44] & io_Cin[44],
     io_A[43] & io_B[43] | io_A[43] & io_Cin[43] | io_B[43] & io_Cin[43],
     io_A[42] & io_B[42] | io_A[42] & io_Cin[42] | io_B[42] & io_Cin[42],
     io_A[41] & io_B[41] | io_A[41] & io_Cin[41] | io_B[41] & io_Cin[41],
     io_A[40] & io_B[40] | io_A[40] & io_Cin[40] | io_B[40] & io_Cin[40],
     io_A[39] & io_B[39] | io_A[39] & io_Cin[39] | io_B[39] & io_Cin[39],
     io_A[38] & io_B[38] | io_A[38] & io_Cin[38] | io_B[38] & io_Cin[38],
     io_A[37] & io_B[37] | io_A[37] & io_Cin[37] | io_B[37] & io_Cin[37],
     io_A[36] & io_B[36] | io_A[36] & io_Cin[36] | io_B[36] & io_Cin[36],
     io_A[35] & io_B[35] | io_A[35] & io_Cin[35] | io_B[35] & io_Cin[35],
     io_A[34] & io_B[34] | io_A[34] & io_Cin[34] | io_B[34] & io_Cin[34],
     io_A[33] & io_B[33] | io_A[33] & io_Cin[33] | io_B[33] & io_Cin[33],
     io_A[32] & io_B[32] | io_A[32] & io_Cin[32] | io_B[32] & io_Cin[32],
     io_A[31] & io_B[31] | io_A[31] & io_Cin[31] | io_B[31] & io_Cin[31],
     io_A[30] & io_B[30] | io_A[30] & io_Cin[30] | io_B[30] & io_Cin[30],
     io_A[29] & io_B[29] | io_A[29] & io_Cin[29] | io_B[29] & io_Cin[29],
     io_A[28] & io_B[28] | io_A[28] & io_Cin[28] | io_B[28] & io_Cin[28],
     io_A[27] & io_B[27] | io_A[27] & io_Cin[27] | io_B[27] & io_Cin[27],
     io_A[26] & io_B[26] | io_A[26] & io_Cin[26] | io_B[26] & io_Cin[26],
     io_A[25] & io_B[25] | io_A[25] & io_Cin[25] | io_B[25] & io_Cin[25],
     io_A[24] & io_B[24] | io_A[24] & io_Cin[24] | io_B[24] & io_Cin[24],
     io_A[23] & io_B[23] | io_A[23] & io_Cin[23] | io_B[23] & io_Cin[23],
     io_A[22] & io_B[22] | io_A[22] & io_Cin[22] | io_B[22] & io_Cin[22],
     io_A[21] & io_B[21] | io_A[21] & io_Cin[21] | io_B[21] & io_Cin[21],
     io_A[20] & io_B[20] | io_A[20] & io_Cin[20] | io_B[20] & io_Cin[20],
     io_A[19] & io_B[19] | io_A[19] & io_Cin[19] | io_B[19] & io_Cin[19],
     io_A[18] & io_B[18] | io_A[18] & io_Cin[18] | io_B[18] & io_Cin[18],
     io_A[17] & io_B[17] | io_A[17] & io_Cin[17] | io_B[17] & io_Cin[17],
     io_A[16] & io_B[16] | io_A[16] & io_Cin[16] | io_B[16] & io_Cin[16],
     io_A[15] & io_B[15] | io_A[15] & io_Cin[15] | io_B[15] & io_Cin[15],
     io_A[14] & io_B[14] | io_A[14] & io_Cin[14] | io_B[14] & io_Cin[14],
     io_A[13] & io_B[13] | io_A[13] & io_Cin[13] | io_B[13] & io_Cin[13],
     io_A[12] & io_B[12] | io_A[12] & io_Cin[12] | io_B[12] & io_Cin[12],
     io_A[11] & io_B[11] | io_A[11] & io_Cin[11] | io_B[11] & io_Cin[11],
     io_A[10] & io_B[10] | io_A[10] & io_Cin[10] | io_B[10] & io_Cin[10],
     io_A[9] & io_B[9] | io_A[9] & io_Cin[9] | io_B[9] & io_Cin[9],
     io_A[8] & io_B[8] | io_A[8] & io_Cin[8] | io_B[8] & io_Cin[8],
     io_A[7] & io_B[7] | io_A[7] & io_Cin[7] | io_B[7] & io_Cin[7],
     io_A[6] & io_B[6] | io_A[6] & io_Cin[6] | io_B[6] & io_Cin[6],
     io_A[5] & io_B[5] | io_A[5] & io_Cin[5] | io_B[5] & io_Cin[5],
     io_A[4] & io_B[4] | io_A[4] & io_Cin[4] | io_B[4] & io_Cin[4],
     io_A[3] & io_B[3] | io_A[3] & io_Cin[3] | io_B[3] & io_Cin[3],
     io_A[2] & io_B[2] | io_A[2] & io_Cin[2] | io_B[2] & io_Cin[2],
     io_A[1] & io_B[1] | io_A[1] & io_Cin[1] | io_B[1] & io_Cin[1],
     io_A[0] & io_B[0] | io_A[0] & io_Cin[0] | io_B[0] & io_Cin[0]};	// core/src/exu.scala:279:7, :290:{21,31,43}, :291:{29,51,64,75}, :294:21
endmodule

module wallace(	// core/src/exu.scala:202:7
  input  [31:0] io_A,	// core/src/exu.scala:203:16
                io_B,	// core/src/exu.scala:203:16
  output [63:0] io_S1,	// core/src/exu.scala:203:16
                io_S2	// core/src/exu.scala:203:16
);

  wire [63:0] _csas_0_5_io_Cout;	// core/src/exu.scala:235:47
  wire [63:0] _csas_0_4_io_S;	// core/src/exu.scala:235:47
  wire [63:0] _csas_0_4_io_Cout;	// core/src/exu.scala:235:47
  wire [63:0] _csas_1_3_io_S;	// core/src/exu.scala:235:47
  wire [63:0] _csas_1_3_io_Cout;	// core/src/exu.scala:235:47
  wire [63:0] _csas_0_3_io_S;	// core/src/exu.scala:235:47
  wire [63:0] _csas_0_3_io_Cout;	// core/src/exu.scala:235:47
  wire [63:0] _csas_1_2_io_S;	// core/src/exu.scala:235:47
  wire [63:0] _csas_1_2_io_Cout;	// core/src/exu.scala:235:47
  wire [63:0] _csas_0_2_io_S;	// core/src/exu.scala:235:47
  wire [63:0] _csas_0_2_io_Cout;	// core/src/exu.scala:235:47
  wire [63:0] _csas_2_1_io_S;	// core/src/exu.scala:235:47
  wire [63:0] _csas_2_1_io_Cout;	// core/src/exu.scala:235:47
  wire [63:0] _csas_1_1_io_S;	// core/src/exu.scala:235:47
  wire [63:0] _csas_1_1_io_Cout;	// core/src/exu.scala:235:47
  wire [63:0] _csas_0_1_io_S;	// core/src/exu.scala:235:47
  wire [63:0] _csas_0_1_io_Cout;	// core/src/exu.scala:235:47
  wire [63:0] _csas_4_io_S;	// core/src/exu.scala:235:47
  wire [63:0] _csas_4_io_Cout;	// core/src/exu.scala:235:47
  wire [63:0] _csas_3_io_S;	// core/src/exu.scala:235:47
  wire [63:0] _csas_3_io_Cout;	// core/src/exu.scala:235:47
  wire [63:0] _csas_2_io_S;	// core/src/exu.scala:235:47
  wire [63:0] _csas_2_io_Cout;	// core/src/exu.scala:235:47
  wire [63:0] _csas_1_io_S;	// core/src/exu.scala:235:47
  wire [63:0] _csas_1_io_Cout;	// core/src/exu.scala:235:47
  wire [63:0] _csas_0_io_S;	// core/src/exu.scala:235:47
  wire [63:0] _csas_0_io_Cout;	// core/src/exu.scala:235:47
  wire [63:0] _booths_15_io_S;	// core/src/exu.scala:210:40
  wire [63:0] _booths_14_io_S;	// core/src/exu.scala:210:40
  wire [63:0] _booths_13_io_S;	// core/src/exu.scala:210:40
  wire [63:0] _booths_12_io_S;	// core/src/exu.scala:210:40
  wire [63:0] _booths_11_io_S;	// core/src/exu.scala:210:40
  wire [63:0] _booths_10_io_S;	// core/src/exu.scala:210:40
  wire [63:0] _booths_9_io_S;	// core/src/exu.scala:210:40
  wire [63:0] _booths_8_io_S;	// core/src/exu.scala:210:40
  wire [63:0] _booths_7_io_S;	// core/src/exu.scala:210:40
  wire [63:0] _booths_6_io_S;	// core/src/exu.scala:210:40
  wire [63:0] _booths_5_io_S;	// core/src/exu.scala:210:40
  wire [63:0] _booths_4_io_S;	// core/src/exu.scala:210:40
  wire [63:0] _booths_3_io_S;	// core/src/exu.scala:210:40
  wire [63:0] _booths_2_io_S;	// core/src/exu.scala:210:40
  wire [63:0] _booths_1_io_S;	// core/src/exu.scala:210:40
  wire [63:0] _booths_0_io_S;	// core/src/exu.scala:210:40
  booth2 booths_0 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B ({io_B[1:0], 1'h0}),	// core/src/exu.scala:218:{30,35}
    .io_S (_booths_0_io_S)
  );
  booth2 booths_1 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[3:1]),	// core/src/exu.scala:214:41
    .io_S (_booths_1_io_S)
  );
  booth2 booths_2 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[5:3]),	// core/src/exu.scala:214:41
    .io_S (_booths_2_io_S)
  );
  booth2 booths_3 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[7:5]),	// core/src/exu.scala:214:41
    .io_S (_booths_3_io_S)
  );
  booth2 booths_4 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[9:7]),	// core/src/exu.scala:214:41
    .io_S (_booths_4_io_S)
  );
  booth2 booths_5 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[11:9]),	// core/src/exu.scala:214:41
    .io_S (_booths_5_io_S)
  );
  booth2 booths_6 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[13:11]),	// core/src/exu.scala:214:41
    .io_S (_booths_6_io_S)
  );
  booth2 booths_7 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[15:13]),	// core/src/exu.scala:214:41
    .io_S (_booths_7_io_S)
  );
  booth2 booths_8 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[17:15]),	// core/src/exu.scala:214:41
    .io_S (_booths_8_io_S)
  );
  booth2 booths_9 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[19:17]),	// core/src/exu.scala:214:41
    .io_S (_booths_9_io_S)
  );
  booth2 booths_10 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[21:19]),	// core/src/exu.scala:214:41
    .io_S (_booths_10_io_S)
  );
  booth2 booths_11 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[23:21]),	// core/src/exu.scala:214:41
    .io_S (_booths_11_io_S)
  );
  booth2 booths_12 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[25:23]),	// core/src/exu.scala:214:41
    .io_S (_booths_12_io_S)
  );
  booth2 booths_13 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[27:25]),	// core/src/exu.scala:214:41
    .io_S (_booths_13_io_S)
  );
  booth2 booths_14 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[29:27]),	// core/src/exu.scala:214:41
    .io_S (_booths_14_io_S)
  );
  booth2 booths_15 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[31:29]),	// core/src/exu.scala:214:41
    .io_S (_booths_15_io_S)
  );
  csa csas_0 (	// core/src/exu.scala:235:47
    .io_A    (_booths_0_io_S),	// core/src/exu.scala:210:40
    .io_B    ({_booths_1_io_S[61:0], 2'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_Cin  ({_booths_2_io_S[59:0], 4'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_S    (_csas_0_io_S),
    .io_Cout (_csas_0_io_Cout)
  );
  csa csas_1 (	// core/src/exu.scala:235:47
    .io_A    ({_booths_3_io_S[57:0], 6'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_B    ({_booths_4_io_S[55:0], 8'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_Cin  ({_booths_5_io_S[53:0], 10'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_S    (_csas_1_io_S),
    .io_Cout (_csas_1_io_Cout)
  );
  csa csas_2 (	// core/src/exu.scala:235:47
    .io_A    ({_booths_6_io_S[51:0], 12'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_B    ({_booths_7_io_S[49:0], 14'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_Cin  ({_booths_8_io_S[47:0], 16'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_S    (_csas_2_io_S),
    .io_Cout (_csas_2_io_Cout)
  );
  csa csas_3 (	// core/src/exu.scala:235:47
    .io_A    ({_booths_9_io_S[45:0], 18'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_B    ({_booths_10_io_S[43:0], 20'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_Cin  ({_booths_11_io_S[41:0], 22'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_S    (_csas_3_io_S),
    .io_Cout (_csas_3_io_Cout)
  );
  csa csas_4 (	// core/src/exu.scala:235:47
    .io_A    ({_booths_12_io_S[39:0], 24'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_B    ({_booths_13_io_S[37:0], 26'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_Cin  ({_booths_14_io_S[35:0], 28'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_S    (_csas_4_io_S),
    .io_Cout (_csas_4_io_Cout)
  );
  csa csas_0_1 (	// core/src/exu.scala:235:47
    .io_A    (_csas_0_io_S),	// core/src/exu.scala:235:47
    .io_B    ({_csas_0_io_Cout[62:0], 1'h0}),	// core/src/exu.scala:218:30, :235:47, :243:34
    .io_Cin  (_csas_1_io_S),	// core/src/exu.scala:235:47
    .io_S    (_csas_0_1_io_S),
    .io_Cout (_csas_0_1_io_Cout)
  );
  csa csas_1_1 (	// core/src/exu.scala:235:47
    .io_A    ({_csas_1_io_Cout[62:0], 1'h0}),	// core/src/exu.scala:218:30, :235:47, :243:34
    .io_B    (_csas_2_io_S),	// core/src/exu.scala:235:47
    .io_Cin  ({_csas_2_io_Cout[62:0], 1'h0}),	// core/src/exu.scala:218:30, :235:47, :243:34
    .io_S    (_csas_1_1_io_S),
    .io_Cout (_csas_1_1_io_Cout)
  );
  csa csas_2_1 (	// core/src/exu.scala:235:47
    .io_A    (_csas_3_io_S),	// core/src/exu.scala:235:47
    .io_B    ({_csas_3_io_Cout[62:0], 1'h0}),	// core/src/exu.scala:218:30, :235:47, :243:34
    .io_Cin  (_csas_4_io_S),	// core/src/exu.scala:235:47
    .io_S    (_csas_2_1_io_S),
    .io_Cout (_csas_2_1_io_Cout)
  );
  csa csas_0_2 (	// core/src/exu.scala:235:47
    .io_A    (_csas_0_1_io_S),	// core/src/exu.scala:235:47
    .io_B    ({_csas_0_1_io_Cout[62:0], 1'h0}),	// core/src/exu.scala:218:30, :235:47, :243:34
    .io_Cin  (_csas_1_1_io_S),	// core/src/exu.scala:235:47
    .io_S    (_csas_0_2_io_S),
    .io_Cout (_csas_0_2_io_Cout)
  );
  csa csas_1_2 (	// core/src/exu.scala:235:47
    .io_A    ({_csas_1_1_io_Cout[62:0], 1'h0}),	// core/src/exu.scala:218:30, :235:47, :243:34
    .io_B    (_csas_2_1_io_S),	// core/src/exu.scala:235:47
    .io_Cin  ({_csas_2_1_io_Cout[62:0], 1'h0}),	// core/src/exu.scala:218:30, :235:47, :243:34
    .io_S    (_csas_1_2_io_S),
    .io_Cout (_csas_1_2_io_Cout)
  );
  csa csas_0_3 (	// core/src/exu.scala:235:47
    .io_A    (_csas_0_2_io_S),	// core/src/exu.scala:235:47
    .io_B    ({_csas_0_2_io_Cout[62:0], 1'h0}),	// core/src/exu.scala:218:30, :235:47, :243:34
    .io_Cin  (_csas_1_2_io_S),	// core/src/exu.scala:235:47
    .io_S    (_csas_0_3_io_S),
    .io_Cout (_csas_0_3_io_Cout)
  );
  csa csas_1_3 (	// core/src/exu.scala:235:47
    .io_A    ({_csas_1_2_io_Cout[62:0], 1'h0}),	// core/src/exu.scala:218:30, :235:47, :243:34
    .io_B    ({_csas_4_io_Cout[62:0], 1'h0}),	// core/src/exu.scala:218:30, :235:47, :243:34
    .io_Cin  ({_booths_15_io_S[33:0], 30'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_S    (_csas_1_3_io_S),
    .io_Cout (_csas_1_3_io_Cout)
  );
  csa csas_0_4 (	// core/src/exu.scala:235:47
    .io_A    (_csas_0_3_io_S),	// core/src/exu.scala:235:47
    .io_B    ({_csas_0_3_io_Cout[62:0], 1'h0}),	// core/src/exu.scala:218:30, :235:47, :243:34
    .io_Cin  (_csas_1_3_io_S),	// core/src/exu.scala:235:47
    .io_S    (_csas_0_4_io_S),
    .io_Cout (_csas_0_4_io_Cout)
  );
  csa csas_0_5 (	// core/src/exu.scala:235:47
    .io_A    (_csas_0_4_io_S),	// core/src/exu.scala:235:47
    .io_B    ({_csas_0_4_io_Cout[62:0], 1'h0}),	// core/src/exu.scala:218:30, :235:47, :243:34
    .io_Cin  ({_csas_1_3_io_Cout[62:0], 1'h0}),	// core/src/exu.scala:218:30, :235:47, :243:34
    .io_S    (io_S1),
    .io_Cout (_csas_0_5_io_Cout)
  );
  assign io_S2 = {_csas_0_5_io_Cout[62:0], 1'h0};	// core/src/exu.scala:202:7, :218:30, :235:47, :243:34
endmodule

module booth2_16(	// core/src/exu.scala:260:7
  input  [32:0] io_A,	// core/src/exu.scala:261:16
  input  [2:0]  io_B,	// core/src/exu.scala:261:16
  output [65:0] io_S	// core/src/exu.scala:261:16
);

  wire [32:0]      _SignExtA_T_1 = {33{io_A[32]}};	// core/src/exu.scala:266:{28,36}
  wire [66:0]      _GEN =
    {1'h0, io_B == 3'h2 | io_B == 3'h1 ? {_SignExtA_T_1, io_A} : 66'h0};	// core/src/exu.scala:266:{23,28}, :267:34, :271:31
  wire [66:0]      _GEN_0 = {1'h0, 66'h0 - {_SignExtA_T_1, io_A}};	// core/src/exu.scala:266:28, :267:34, :271:31, :272:21, :273:21
  wire [7:0][66:0] _GEN_1 =
    {{67'h0},
     {_GEN_0},
     {_GEN_0},
     {67'h0 - {_SignExtA_T_1, io_A, 1'h0}},
     {{_SignExtA_T_1, io_A, 1'h0}},
     {_GEN},
     {_GEN},
     {_GEN}};	// core/src/exu.scala:266:28, :267:34, :271:31, :272:21
  assign io_S = _GEN_1[io_B][65:0];	// core/src/exu.scala:260:7, :267:{10,34}
endmodule

module csa_14(	// core/src/exu.scala:279:7
  input  [65:0] io_A,	// core/src/exu.scala:280:16
                io_B,	// core/src/exu.scala:280:16
                io_Cin,	// core/src/exu.scala:280:16
  output [65:0] io_S,	// core/src/exu.scala:280:16
                io_Cout	// core/src/exu.scala:280:16
);

  assign io_S =
    {io_A[65] ^ io_B[65] ^ io_Cin[65],
     io_A[64] ^ io_B[64] ^ io_Cin[64],
     io_A[63] ^ io_B[63] ^ io_Cin[63],
     io_A[62] ^ io_B[62] ^ io_Cin[62],
     io_A[61] ^ io_B[61] ^ io_Cin[61],
     io_A[60] ^ io_B[60] ^ io_Cin[60],
     io_A[59] ^ io_B[59] ^ io_Cin[59],
     io_A[58] ^ io_B[58] ^ io_Cin[58],
     io_A[57] ^ io_B[57] ^ io_Cin[57],
     io_A[56] ^ io_B[56] ^ io_Cin[56],
     io_A[55] ^ io_B[55] ^ io_Cin[55],
     io_A[54] ^ io_B[54] ^ io_Cin[54],
     io_A[53] ^ io_B[53] ^ io_Cin[53],
     io_A[52] ^ io_B[52] ^ io_Cin[52],
     io_A[51] ^ io_B[51] ^ io_Cin[51],
     io_A[50] ^ io_B[50] ^ io_Cin[50],
     io_A[49] ^ io_B[49] ^ io_Cin[49],
     io_A[48] ^ io_B[48] ^ io_Cin[48],
     io_A[47] ^ io_B[47] ^ io_Cin[47],
     io_A[46] ^ io_B[46] ^ io_Cin[46],
     io_A[45] ^ io_B[45] ^ io_Cin[45],
     io_A[44] ^ io_B[44] ^ io_Cin[44],
     io_A[43] ^ io_B[43] ^ io_Cin[43],
     io_A[42] ^ io_B[42] ^ io_Cin[42],
     io_A[41] ^ io_B[41] ^ io_Cin[41],
     io_A[40] ^ io_B[40] ^ io_Cin[40],
     io_A[39] ^ io_B[39] ^ io_Cin[39],
     io_A[38] ^ io_B[38] ^ io_Cin[38],
     io_A[37] ^ io_B[37] ^ io_Cin[37],
     io_A[36] ^ io_B[36] ^ io_Cin[36],
     io_A[35] ^ io_B[35] ^ io_Cin[35],
     io_A[34] ^ io_B[34] ^ io_Cin[34],
     io_A[33] ^ io_B[33] ^ io_Cin[33],
     io_A[32] ^ io_B[32] ^ io_Cin[32],
     io_A[31] ^ io_B[31] ^ io_Cin[31],
     io_A[30] ^ io_B[30] ^ io_Cin[30],
     io_A[29] ^ io_B[29] ^ io_Cin[29],
     io_A[28] ^ io_B[28] ^ io_Cin[28],
     io_A[27] ^ io_B[27] ^ io_Cin[27],
     io_A[26] ^ io_B[26] ^ io_Cin[26],
     io_A[25] ^ io_B[25] ^ io_Cin[25],
     io_A[24] ^ io_B[24] ^ io_Cin[24],
     io_A[23] ^ io_B[23] ^ io_Cin[23],
     io_A[22] ^ io_B[22] ^ io_Cin[22],
     io_A[21] ^ io_B[21] ^ io_Cin[21],
     io_A[20] ^ io_B[20] ^ io_Cin[20],
     io_A[19] ^ io_B[19] ^ io_Cin[19],
     io_A[18] ^ io_B[18] ^ io_Cin[18],
     io_A[17] ^ io_B[17] ^ io_Cin[17],
     io_A[16] ^ io_B[16] ^ io_Cin[16],
     io_A[15] ^ io_B[15] ^ io_Cin[15],
     io_A[14] ^ io_B[14] ^ io_Cin[14],
     io_A[13] ^ io_B[13] ^ io_Cin[13],
     io_A[12] ^ io_B[12] ^ io_Cin[12],
     io_A[11] ^ io_B[11] ^ io_Cin[11],
     io_A[10] ^ io_B[10] ^ io_Cin[10],
     io_A[9] ^ io_B[9] ^ io_Cin[9],
     io_A[8] ^ io_B[8] ^ io_Cin[8],
     io_A[7] ^ io_B[7] ^ io_Cin[7],
     io_A[6] ^ io_B[6] ^ io_Cin[6],
     io_A[5] ^ io_B[5] ^ io_Cin[5],
     io_A[4] ^ io_B[4] ^ io_Cin[4],
     io_A[3] ^ io_B[3] ^ io_Cin[3],
     io_A[2] ^ io_B[2] ^ io_Cin[2],
     io_A[1] ^ io_B[1] ^ io_Cin[1],
     io_A[0] ^ io_B[0] ^ io_Cin[0]};	// core/src/exu.scala:279:7, :290:{21,31,35,43}, :293:15
  assign io_Cout =
    {io_A[65] & io_B[65] | io_A[65] & io_Cin[65] | io_B[65] & io_Cin[65],
     io_A[64] & io_B[64] | io_A[64] & io_Cin[64] | io_B[64] & io_Cin[64],
     io_A[63] & io_B[63] | io_A[63] & io_Cin[63] | io_B[63] & io_Cin[63],
     io_A[62] & io_B[62] | io_A[62] & io_Cin[62] | io_B[62] & io_Cin[62],
     io_A[61] & io_B[61] | io_A[61] & io_Cin[61] | io_B[61] & io_Cin[61],
     io_A[60] & io_B[60] | io_A[60] & io_Cin[60] | io_B[60] & io_Cin[60],
     io_A[59] & io_B[59] | io_A[59] & io_Cin[59] | io_B[59] & io_Cin[59],
     io_A[58] & io_B[58] | io_A[58] & io_Cin[58] | io_B[58] & io_Cin[58],
     io_A[57] & io_B[57] | io_A[57] & io_Cin[57] | io_B[57] & io_Cin[57],
     io_A[56] & io_B[56] | io_A[56] & io_Cin[56] | io_B[56] & io_Cin[56],
     io_A[55] & io_B[55] | io_A[55] & io_Cin[55] | io_B[55] & io_Cin[55],
     io_A[54] & io_B[54] | io_A[54] & io_Cin[54] | io_B[54] & io_Cin[54],
     io_A[53] & io_B[53] | io_A[53] & io_Cin[53] | io_B[53] & io_Cin[53],
     io_A[52] & io_B[52] | io_A[52] & io_Cin[52] | io_B[52] & io_Cin[52],
     io_A[51] & io_B[51] | io_A[51] & io_Cin[51] | io_B[51] & io_Cin[51],
     io_A[50] & io_B[50] | io_A[50] & io_Cin[50] | io_B[50] & io_Cin[50],
     io_A[49] & io_B[49] | io_A[49] & io_Cin[49] | io_B[49] & io_Cin[49],
     io_A[48] & io_B[48] | io_A[48] & io_Cin[48] | io_B[48] & io_Cin[48],
     io_A[47] & io_B[47] | io_A[47] & io_Cin[47] | io_B[47] & io_Cin[47],
     io_A[46] & io_B[46] | io_A[46] & io_Cin[46] | io_B[46] & io_Cin[46],
     io_A[45] & io_B[45] | io_A[45] & io_Cin[45] | io_B[45] & io_Cin[45],
     io_A[44] & io_B[44] | io_A[44] & io_Cin[44] | io_B[44] & io_Cin[44],
     io_A[43] & io_B[43] | io_A[43] & io_Cin[43] | io_B[43] & io_Cin[43],
     io_A[42] & io_B[42] | io_A[42] & io_Cin[42] | io_B[42] & io_Cin[42],
     io_A[41] & io_B[41] | io_A[41] & io_Cin[41] | io_B[41] & io_Cin[41],
     io_A[40] & io_B[40] | io_A[40] & io_Cin[40] | io_B[40] & io_Cin[40],
     io_A[39] & io_B[39] | io_A[39] & io_Cin[39] | io_B[39] & io_Cin[39],
     io_A[38] & io_B[38] | io_A[38] & io_Cin[38] | io_B[38] & io_Cin[38],
     io_A[37] & io_B[37] | io_A[37] & io_Cin[37] | io_B[37] & io_Cin[37],
     io_A[36] & io_B[36] | io_A[36] & io_Cin[36] | io_B[36] & io_Cin[36],
     io_A[35] & io_B[35] | io_A[35] & io_Cin[35] | io_B[35] & io_Cin[35],
     io_A[34] & io_B[34] | io_A[34] & io_Cin[34] | io_B[34] & io_Cin[34],
     io_A[33] & io_B[33] | io_A[33] & io_Cin[33] | io_B[33] & io_Cin[33],
     io_A[32] & io_B[32] | io_A[32] & io_Cin[32] | io_B[32] & io_Cin[32],
     io_A[31] & io_B[31] | io_A[31] & io_Cin[31] | io_B[31] & io_Cin[31],
     io_A[30] & io_B[30] | io_A[30] & io_Cin[30] | io_B[30] & io_Cin[30],
     io_A[29] & io_B[29] | io_A[29] & io_Cin[29] | io_B[29] & io_Cin[29],
     io_A[28] & io_B[28] | io_A[28] & io_Cin[28] | io_B[28] & io_Cin[28],
     io_A[27] & io_B[27] | io_A[27] & io_Cin[27] | io_B[27] & io_Cin[27],
     io_A[26] & io_B[26] | io_A[26] & io_Cin[26] | io_B[26] & io_Cin[26],
     io_A[25] & io_B[25] | io_A[25] & io_Cin[25] | io_B[25] & io_Cin[25],
     io_A[24] & io_B[24] | io_A[24] & io_Cin[24] | io_B[24] & io_Cin[24],
     io_A[23] & io_B[23] | io_A[23] & io_Cin[23] | io_B[23] & io_Cin[23],
     io_A[22] & io_B[22] | io_A[22] & io_Cin[22] | io_B[22] & io_Cin[22],
     io_A[21] & io_B[21] | io_A[21] & io_Cin[21] | io_B[21] & io_Cin[21],
     io_A[20] & io_B[20] | io_A[20] & io_Cin[20] | io_B[20] & io_Cin[20],
     io_A[19] & io_B[19] | io_A[19] & io_Cin[19] | io_B[19] & io_Cin[19],
     io_A[18] & io_B[18] | io_A[18] & io_Cin[18] | io_B[18] & io_Cin[18],
     io_A[17] & io_B[17] | io_A[17] & io_Cin[17] | io_B[17] & io_Cin[17],
     io_A[16] & io_B[16] | io_A[16] & io_Cin[16] | io_B[16] & io_Cin[16],
     io_A[15] & io_B[15] | io_A[15] & io_Cin[15] | io_B[15] & io_Cin[15],
     io_A[14] & io_B[14] | io_A[14] & io_Cin[14] | io_B[14] & io_Cin[14],
     io_A[13] & io_B[13] | io_A[13] & io_Cin[13] | io_B[13] & io_Cin[13],
     io_A[12] & io_B[12] | io_A[12] & io_Cin[12] | io_B[12] & io_Cin[12],
     io_A[11] & io_B[11] | io_A[11] & io_Cin[11] | io_B[11] & io_Cin[11],
     io_A[10] & io_B[10] | io_A[10] & io_Cin[10] | io_B[10] & io_Cin[10],
     io_A[9] & io_B[9] | io_A[9] & io_Cin[9] | io_B[9] & io_Cin[9],
     io_A[8] & io_B[8] | io_A[8] & io_Cin[8] | io_B[8] & io_Cin[8],
     io_A[7] & io_B[7] | io_A[7] & io_Cin[7] | io_B[7] & io_Cin[7],
     io_A[6] & io_B[6] | io_A[6] & io_Cin[6] | io_B[6] & io_Cin[6],
     io_A[5] & io_B[5] | io_A[5] & io_Cin[5] | io_B[5] & io_Cin[5],
     io_A[4] & io_B[4] | io_A[4] & io_Cin[4] | io_B[4] & io_Cin[4],
     io_A[3] & io_B[3] | io_A[3] & io_Cin[3] | io_B[3] & io_Cin[3],
     io_A[2] & io_B[2] | io_A[2] & io_Cin[2] | io_B[2] & io_Cin[2],
     io_A[1] & io_B[1] | io_A[1] & io_Cin[1] | io_B[1] & io_Cin[1],
     io_A[0] & io_B[0] | io_A[0] & io_Cin[0] | io_B[0] & io_Cin[0]};	// core/src/exu.scala:279:7, :290:{21,31,43}, :291:{29,51,64,75}, :294:21
endmodule

module wallace_1(	// core/src/exu.scala:202:7
  input  [32:0] io_A,	// core/src/exu.scala:203:16
                io_B,	// core/src/exu.scala:203:16
  output [65:0] io_S1,	// core/src/exu.scala:203:16
                io_S2	// core/src/exu.scala:203:16
);

  wire [65:0] _csas_0_5_io_Cout;	// core/src/exu.scala:235:47
  wire [65:0] _csas_0_4_io_S;	// core/src/exu.scala:235:47
  wire [65:0] _csas_0_4_io_Cout;	// core/src/exu.scala:235:47
  wire [65:0] _csas_1_3_io_S;	// core/src/exu.scala:235:47
  wire [65:0] _csas_1_3_io_Cout;	// core/src/exu.scala:235:47
  wire [65:0] _csas_0_3_io_S;	// core/src/exu.scala:235:47
  wire [65:0] _csas_0_3_io_Cout;	// core/src/exu.scala:235:47
  wire [65:0] _csas_1_2_io_S;	// core/src/exu.scala:235:47
  wire [65:0] _csas_1_2_io_Cout;	// core/src/exu.scala:235:47
  wire [65:0] _csas_0_2_io_S;	// core/src/exu.scala:235:47
  wire [65:0] _csas_0_2_io_Cout;	// core/src/exu.scala:235:47
  wire [65:0] _csas_3_1_io_S;	// core/src/exu.scala:235:47
  wire [65:0] _csas_3_1_io_Cout;	// core/src/exu.scala:235:47
  wire [65:0] _csas_2_1_io_S;	// core/src/exu.scala:235:47
  wire [65:0] _csas_2_1_io_Cout;	// core/src/exu.scala:235:47
  wire [65:0] _csas_1_1_io_S;	// core/src/exu.scala:235:47
  wire [65:0] _csas_1_1_io_Cout;	// core/src/exu.scala:235:47
  wire [65:0] _csas_0_1_io_S;	// core/src/exu.scala:235:47
  wire [65:0] _csas_0_1_io_Cout;	// core/src/exu.scala:235:47
  wire [65:0] _csas_4_io_S;	// core/src/exu.scala:235:47
  wire [65:0] _csas_4_io_Cout;	// core/src/exu.scala:235:47
  wire [65:0] _csas_3_io_S;	// core/src/exu.scala:235:47
  wire [65:0] _csas_3_io_Cout;	// core/src/exu.scala:235:47
  wire [65:0] _csas_2_io_S;	// core/src/exu.scala:235:47
  wire [65:0] _csas_2_io_Cout;	// core/src/exu.scala:235:47
  wire [65:0] _csas_1_io_S;	// core/src/exu.scala:235:47
  wire [65:0] _csas_1_io_Cout;	// core/src/exu.scala:235:47
  wire [65:0] _csas_0_io_S;	// core/src/exu.scala:235:47
  wire [65:0] _csas_0_io_Cout;	// core/src/exu.scala:235:47
  wire [65:0] _booths_15_io_S;	// core/src/exu.scala:210:40
  wire [65:0] _booths_14_io_S;	// core/src/exu.scala:210:40
  wire [65:0] _booths_13_io_S;	// core/src/exu.scala:210:40
  wire [65:0] _booths_12_io_S;	// core/src/exu.scala:210:40
  wire [65:0] _booths_11_io_S;	// core/src/exu.scala:210:40
  wire [65:0] _booths_10_io_S;	// core/src/exu.scala:210:40
  wire [65:0] _booths_9_io_S;	// core/src/exu.scala:210:40
  wire [65:0] _booths_8_io_S;	// core/src/exu.scala:210:40
  wire [65:0] _booths_7_io_S;	// core/src/exu.scala:210:40
  wire [65:0] _booths_6_io_S;	// core/src/exu.scala:210:40
  wire [65:0] _booths_5_io_S;	// core/src/exu.scala:210:40
  wire [65:0] _booths_4_io_S;	// core/src/exu.scala:210:40
  wire [65:0] _booths_3_io_S;	// core/src/exu.scala:210:40
  wire [65:0] _booths_2_io_S;	// core/src/exu.scala:210:40
  wire [65:0] _booths_1_io_S;	// core/src/exu.scala:210:40
  wire [65:0] _booths_0_io_S;	// core/src/exu.scala:210:40
  booth2_16 booths_0 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[2:0]),	// core/src/exu.scala:214:41
    .io_S (_booths_0_io_S)
  );
  booth2_16 booths_1 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[4:2]),	// core/src/exu.scala:214:41
    .io_S (_booths_1_io_S)
  );
  booth2_16 booths_2 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[6:4]),	// core/src/exu.scala:214:41
    .io_S (_booths_2_io_S)
  );
  booth2_16 booths_3 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[8:6]),	// core/src/exu.scala:214:41
    .io_S (_booths_3_io_S)
  );
  booth2_16 booths_4 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[10:8]),	// core/src/exu.scala:214:41
    .io_S (_booths_4_io_S)
  );
  booth2_16 booths_5 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[12:10]),	// core/src/exu.scala:214:41
    .io_S (_booths_5_io_S)
  );
  booth2_16 booths_6 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[14:12]),	// core/src/exu.scala:214:41
    .io_S (_booths_6_io_S)
  );
  booth2_16 booths_7 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[16:14]),	// core/src/exu.scala:214:41
    .io_S (_booths_7_io_S)
  );
  booth2_16 booths_8 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[18:16]),	// core/src/exu.scala:214:41
    .io_S (_booths_8_io_S)
  );
  booth2_16 booths_9 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[20:18]),	// core/src/exu.scala:214:41
    .io_S (_booths_9_io_S)
  );
  booth2_16 booths_10 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[22:20]),	// core/src/exu.scala:214:41
    .io_S (_booths_10_io_S)
  );
  booth2_16 booths_11 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[24:22]),	// core/src/exu.scala:214:41
    .io_S (_booths_11_io_S)
  );
  booth2_16 booths_12 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[26:24]),	// core/src/exu.scala:214:41
    .io_S (_booths_12_io_S)
  );
  booth2_16 booths_13 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[28:26]),	// core/src/exu.scala:214:41
    .io_S (_booths_13_io_S)
  );
  booth2_16 booths_14 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[30:28]),	// core/src/exu.scala:214:41
    .io_S (_booths_14_io_S)
  );
  booth2_16 booths_15 (	// core/src/exu.scala:210:40
    .io_A (io_A),
    .io_B (io_B[32:30]),	// core/src/exu.scala:214:41
    .io_S (_booths_15_io_S)
  );
  csa_14 csas_0 (	// core/src/exu.scala:235:47
    .io_A    ({_booths_0_io_S[64:0], 1'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_B    ({_booths_1_io_S[62:0], 3'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_Cin  ({_booths_2_io_S[60:0], 5'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_S    (_csas_0_io_S),
    .io_Cout (_csas_0_io_Cout)
  );
  csa_14 csas_1 (	// core/src/exu.scala:235:47
    .io_A    ({_booths_3_io_S[58:0], 7'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_B    ({_booths_4_io_S[56:0], 9'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_Cin  ({_booths_5_io_S[54:0], 11'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_S    (_csas_1_io_S),
    .io_Cout (_csas_1_io_Cout)
  );
  csa_14 csas_2 (	// core/src/exu.scala:235:47
    .io_A    ({_booths_6_io_S[52:0], 13'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_B    ({_booths_7_io_S[50:0], 15'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_Cin  ({_booths_8_io_S[48:0], 17'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_S    (_csas_2_io_S),
    .io_Cout (_csas_2_io_Cout)
  );
  csa_14 csas_3 (	// core/src/exu.scala:235:47
    .io_A    ({_booths_9_io_S[46:0], 19'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_B    ({_booths_10_io_S[44:0], 21'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_Cin  ({_booths_11_io_S[42:0], 23'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_S    (_csas_3_io_S),
    .io_Cout (_csas_3_io_Cout)
  );
  csa_14 csas_4 (	// core/src/exu.scala:235:47
    .io_A    ({_booths_12_io_S[40:0], 25'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_B    ({_booths_13_io_S[38:0], 27'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_Cin  ({_booths_14_io_S[36:0], 29'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_S    (_csas_4_io_S),
    .io_Cout (_csas_4_io_Cout)
  );
  csa_14 csas_0_1 (	// core/src/exu.scala:235:47
    .io_A    (_csas_0_io_S),	// core/src/exu.scala:235:47
    .io_B    ({_csas_0_io_Cout[64:0], 1'h0}),	// core/src/exu.scala:223:37, :235:47, :243:34
    .io_Cin  (_csas_1_io_S),	// core/src/exu.scala:235:47
    .io_S    (_csas_0_1_io_S),
    .io_Cout (_csas_0_1_io_Cout)
  );
  csa_14 csas_1_1 (	// core/src/exu.scala:235:47
    .io_A    ({_csas_1_io_Cout[64:0], 1'h0}),	// core/src/exu.scala:223:37, :235:47, :243:34
    .io_B    (_csas_2_io_S),	// core/src/exu.scala:235:47
    .io_Cin  ({_csas_2_io_Cout[64:0], 1'h0}),	// core/src/exu.scala:223:37, :235:47, :243:34
    .io_S    (_csas_1_1_io_S),
    .io_Cout (_csas_1_1_io_Cout)
  );
  csa_14 csas_2_1 (	// core/src/exu.scala:235:47
    .io_A    (_csas_3_io_S),	// core/src/exu.scala:235:47
    .io_B    ({_csas_3_io_Cout[64:0], 1'h0}),	// core/src/exu.scala:223:37, :235:47, :243:34
    .io_Cin  (_csas_4_io_S),	// core/src/exu.scala:235:47
    .io_S    (_csas_2_1_io_S),
    .io_Cout (_csas_2_1_io_Cout)
  );
  csa_14 csas_3_1 (	// core/src/exu.scala:235:47
    .io_A    ({_csas_4_io_Cout[64:0], 1'h0}),	// core/src/exu.scala:223:37, :235:47, :243:34
    .io_B    ({_booths_15_io_S[34:0], 31'h0}),	// core/src/exu.scala:210:40, :223:{19,37}
    .io_Cin  (io_B[0] ? 66'h0 - {{33{io_A[32]}}, io_A} : 66'h0),	// core/src/exu.scala:226:{29,34,39,48,56}
    .io_S    (_csas_3_1_io_S),
    .io_Cout (_csas_3_1_io_Cout)
  );
  csa_14 csas_0_2 (	// core/src/exu.scala:235:47
    .io_A    (_csas_0_1_io_S),	// core/src/exu.scala:235:47
    .io_B    ({_csas_0_1_io_Cout[64:0], 1'h0}),	// core/src/exu.scala:223:37, :235:47, :243:34
    .io_Cin  (_csas_1_1_io_S),	// core/src/exu.scala:235:47
    .io_S    (_csas_0_2_io_S),
    .io_Cout (_csas_0_2_io_Cout)
  );
  csa_14 csas_1_2 (	// core/src/exu.scala:235:47
    .io_A    ({_csas_1_1_io_Cout[64:0], 1'h0}),	// core/src/exu.scala:223:37, :235:47, :243:34
    .io_B    (_csas_2_1_io_S),	// core/src/exu.scala:235:47
    .io_Cin  ({_csas_2_1_io_Cout[64:0], 1'h0}),	// core/src/exu.scala:223:37, :235:47, :243:34
    .io_S    (_csas_1_2_io_S),
    .io_Cout (_csas_1_2_io_Cout)
  );
  csa_14 csas_0_3 (	// core/src/exu.scala:235:47
    .io_A    (_csas_0_2_io_S),	// core/src/exu.scala:235:47
    .io_B    ({_csas_0_2_io_Cout[64:0], 1'h0}),	// core/src/exu.scala:223:37, :235:47, :243:34
    .io_Cin  (_csas_1_2_io_S),	// core/src/exu.scala:235:47
    .io_S    (_csas_0_3_io_S),
    .io_Cout (_csas_0_3_io_Cout)
  );
  csa_14 csas_1_3 (	// core/src/exu.scala:235:47
    .io_A    ({_csas_1_2_io_Cout[64:0], 1'h0}),	// core/src/exu.scala:223:37, :235:47, :243:34
    .io_B    (_csas_3_1_io_S),	// core/src/exu.scala:235:47
    .io_Cin  ({_csas_3_1_io_Cout[64:0], 1'h0}),	// core/src/exu.scala:223:37, :235:47, :243:34
    .io_S    (_csas_1_3_io_S),
    .io_Cout (_csas_1_3_io_Cout)
  );
  csa_14 csas_0_4 (	// core/src/exu.scala:235:47
    .io_A    (_csas_0_3_io_S),	// core/src/exu.scala:235:47
    .io_B    ({_csas_0_3_io_Cout[64:0], 1'h0}),	// core/src/exu.scala:223:37, :235:47, :243:34
    .io_Cin  (_csas_1_3_io_S),	// core/src/exu.scala:235:47
    .io_S    (_csas_0_4_io_S),
    .io_Cout (_csas_0_4_io_Cout)
  );
  csa_14 csas_0_5 (	// core/src/exu.scala:235:47
    .io_A    (_csas_0_4_io_S),	// core/src/exu.scala:235:47
    .io_B    ({_csas_0_4_io_Cout[64:0], 1'h0}),	// core/src/exu.scala:223:37, :235:47, :243:34
    .io_Cin  ({_csas_1_3_io_Cout[64:0], 1'h0}),	// core/src/exu.scala:223:37, :235:47, :243:34
    .io_S    (io_S1),
    .io_Cout (_csas_0_5_io_Cout)
  );
  assign io_S2 = {_csas_0_5_io_Cout[64:0], 1'h0};	// core/src/exu.scala:202:7, :223:37, :235:47, :243:34
endmodule

module exu1(	// core/src/exu.scala:5:7
  input         io_prev_valid,	// core/src/exu.scala:6:16
  input  [3:0]  io_prev_bits_aluOp,	// core/src/exu.scala:6:16
  input  [1:0]  io_prev_bits_aluAsrc,	// core/src/exu.scala:6:16
  input  [2:0]  io_prev_bits_aluBsrc,	// core/src/exu.scala:6:16
  input  [3:0]  io_prev_bits_memOp,	// core/src/exu.scala:6:16
                io_prev_bits_branch,	// core/src/exu.scala:6:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/exu.scala:6:16
                io_prev_bits_wbDst,	// core/src/exu.scala:6:16
  input  [31:0] io_prev_bits_Imm,	// core/src/exu.scala:6:16
  input  [4:0]  io_prev_bits_rd,	// core/src/exu.scala:6:16
  input  [31:0] io_prev_bits_rd_data,	// core/src/exu.scala:6:16
                io_prev_bits_rj_data,	// core/src/exu.scala:6:16
                io_prev_bits_rk_data,	// core/src/exu.scala:6:16
                io_prev_bits_pc,	// core/src/exu.scala:6:16
  output        io_next_valid,	// core/src/exu.scala:6:16
  output [3:0]  io_next_bits_aluOp,	// core/src/exu.scala:6:16
                io_next_bits_memOp,	// core/src/exu.scala:6:16
                io_next_bits_branch,	// core/src/exu.scala:6:16
  output [1:0]  io_next_bits_wbSel,	// core/src/exu.scala:6:16
                io_next_bits_wbDst,	// core/src/exu.scala:6:16
  output [31:0] io_next_bits_Imm,	// core/src/exu.scala:6:16
  output [4:0]  io_next_bits_rd,	// core/src/exu.scala:6:16
  output [31:0] io_next_bits_rd_data,	// core/src/exu.scala:6:16
                io_next_bits_rj_data,	// core/src/exu.scala:6:16
                io_next_bits_pc,	// core/src/exu.scala:6:16
                io_next_bits_ALUA,	// core/src/exu.scala:6:16
                io_next_bits_ALUB,	// core/src/exu.scala:6:16
  output [63:0] io_next_bits_MulA,	// core/src/exu.scala:6:16
                io_next_bits_MulB	// core/src/exu.scala:6:16
);

  wire [65:0] _Wallace33_io_S1;	// core/src/exu.scala:23:27
  wire [65:0] _Wallace33_io_S2;	// core/src/exu.scala:23:27
  wire [63:0] _Wallace32_io_S1;	// core/src/exu.scala:22:27
  wire [63:0] _Wallace32_io_S2;	// core/src/exu.scala:22:27
  wire [31:0] ALUA =
    io_prev_bits_aluAsrc == 2'h1
      ? io_prev_bits_pc
      : io_prev_bits_aluAsrc == 2'h0 ? io_prev_bits_rj_data : 32'h0;	// core/src/exu.scala:11:53
  wire [31:0] ALUB =
    io_prev_bits_aluBsrc == 3'h3
      ? 32'h4
      : io_prev_bits_aluBsrc == 3'h2
          ? io_prev_bits_Imm
          : io_prev_bits_aluBsrc == 3'h1
              ? io_prev_bits_rd_data
              : io_prev_bits_aluBsrc == 3'h0 ? io_prev_bits_rk_data : 32'h0;	// core/src/exu.scala:11:53, :15:53
  wallace Wallace32 (	// core/src/exu.scala:22:27
    .io_A  (ALUA),	// core/src/exu.scala:11:53
    .io_B  (ALUB),	// core/src/exu.scala:15:53
    .io_S1 (_Wallace32_io_S1),
    .io_S2 (_Wallace32_io_S2)
  );
  wallace_1 Wallace33 (	// core/src/exu.scala:23:27
    .io_A  ({1'h0, ALUA}),	// core/src/exu.scala:11:53, :27:27
    .io_B  ({1'h0, ALUB}),	// core/src/exu.scala:11:53, :15:53, :28:27
    .io_S1 (_Wallace33_io_S1),
    .io_S2 (_Wallace33_io_S2)
  );
  assign io_next_valid = io_prev_valid;	// core/src/exu.scala:5:7
  assign io_next_bits_aluOp = io_prev_bits_aluOp;	// core/src/exu.scala:5:7
  assign io_next_bits_memOp = io_prev_bits_memOp;	// core/src/exu.scala:5:7
  assign io_next_bits_branch = io_prev_bits_branch;	// core/src/exu.scala:5:7
  assign io_next_bits_wbSel = io_prev_bits_wbSel;	// core/src/exu.scala:5:7
  assign io_next_bits_wbDst = io_prev_bits_wbDst;	// core/src/exu.scala:5:7
  assign io_next_bits_Imm = io_prev_bits_Imm;	// core/src/exu.scala:5:7
  assign io_next_bits_rd = io_prev_bits_rd;	// core/src/exu.scala:5:7
  assign io_next_bits_rd_data = io_prev_bits_rd_data;	// core/src/exu.scala:5:7
  assign io_next_bits_rj_data = io_prev_bits_rj_data;	// core/src/exu.scala:5:7
  assign io_next_bits_pc = io_prev_bits_pc;	// core/src/exu.scala:5:7
  assign io_next_bits_ALUA = ALUA;	// core/src/exu.scala:5:7, :11:53
  assign io_next_bits_ALUB = ALUB;	// core/src/exu.scala:5:7, :15:53
  assign io_next_bits_MulA =
    io_prev_bits_aluOp == 4'hA ? _Wallace33_io_S1[63:0] : _Wallace32_io_S1;	// core/src/exu.scala:5:7, :22:27, :23:27, :30:63
  assign io_next_bits_MulB =
    io_prev_bits_aluOp == 4'hA ? _Wallace33_io_S2[63:0] : _Wallace32_io_S2;	// core/src/exu.scala:5:7, :22:27, :23:27, :30:63, :33:63
endmodule

module buffer_2(	// core/src/core.scala:57:7
  input         clock,	// core/src/core.scala:57:7
                reset,	// core/src/core.scala:57:7
                io_prev_valid,	// core/src/core.scala:58:16
  input  [3:0]  io_prev_bits_aluOp,	// core/src/core.scala:58:16
                io_prev_bits_memOp,	// core/src/core.scala:58:16
                io_prev_bits_branch,	// core/src/core.scala:58:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/core.scala:58:16
                io_prev_bits_wbDst,	// core/src/core.scala:58:16
  input  [31:0] io_prev_bits_Imm,	// core/src/core.scala:58:16
  input  [4:0]  io_prev_bits_rd,	// core/src/core.scala:58:16
  input  [31:0] io_prev_bits_rd_data,	// core/src/core.scala:58:16
                io_prev_bits_rj_data,	// core/src/core.scala:58:16
                io_prev_bits_pc,	// core/src/core.scala:58:16
                io_prev_bits_ALUA,	// core/src/core.scala:58:16
                io_prev_bits_ALUB,	// core/src/core.scala:58:16
  input  [63:0] io_prev_bits_MulA,	// core/src/core.scala:58:16
                io_prev_bits_MulB,	// core/src/core.scala:58:16
  output        io_next_valid,	// core/src/core.scala:58:16
  output [3:0]  io_next_bits_aluOp,	// core/src/core.scala:58:16
                io_next_bits_memOp,	// core/src/core.scala:58:16
                io_next_bits_branch,	// core/src/core.scala:58:16
  output [1:0]  io_next_bits_wbSel,	// core/src/core.scala:58:16
                io_next_bits_wbDst,	// core/src/core.scala:58:16
  output [31:0] io_next_bits_Imm,	// core/src/core.scala:58:16
  output [4:0]  io_next_bits_rd,	// core/src/core.scala:58:16
  output [31:0] io_next_bits_rd_data,	// core/src/core.scala:58:16
                io_next_bits_rj_data,	// core/src/core.scala:58:16
                io_next_bits_pc,	// core/src/core.scala:58:16
                io_next_bits_ALUA,	// core/src/core.scala:58:16
                io_next_bits_ALUB,	// core/src/core.scala:58:16
  output [63:0] io_next_bits_MulA,	// core/src/core.scala:58:16
                io_next_bits_MulB	// core/src/core.scala:58:16
);

  reg        state;	// core/src/core.scala:62:24
  reg [3:0]  regs_aluOp;	// core/src/core.scala:65:19
  reg [3:0]  regs_memOp;	// core/src/core.scala:65:19
  reg [3:0]  regs_branch;	// core/src/core.scala:65:19
  reg [1:0]  regs_wbSel;	// core/src/core.scala:65:19
  reg [1:0]  regs_wbDst;	// core/src/core.scala:65:19
  reg [31:0] regs_Imm;	// core/src/core.scala:65:19
  reg [4:0]  regs_rd;	// core/src/core.scala:65:19
  reg [31:0] regs_rd_data;	// core/src/core.scala:65:19
  reg [31:0] regs_rj_data;	// core/src/core.scala:65:19
  reg [31:0] regs_pc;	// core/src/core.scala:65:19
  reg [31:0] regs_ALUA;	// core/src/core.scala:65:19
  reg [31:0] regs_ALUB;	// core/src/core.scala:65:19
  reg [63:0] regs_MulA;	// core/src/core.scala:65:19
  reg [63:0] regs_MulB;	// core/src/core.scala:65:19
  always @(posedge clock) begin	// core/src/core.scala:57:7
    if (reset)	// core/src/core.scala:57:7
      state <= 1'h0;	// core/src/core.scala:62:24
    else	// core/src/core.scala:57:7
      state <= io_prev_valid;	// core/src/core.scala:62:24
    if (io_prev_valid) begin	// core/src/core.scala:58:16
      regs_aluOp <= io_prev_bits_aluOp;	// core/src/core.scala:65:19
      regs_memOp <= io_prev_bits_memOp;	// core/src/core.scala:65:19
      regs_branch <= io_prev_bits_branch;	// core/src/core.scala:65:19
      regs_wbSel <= io_prev_bits_wbSel;	// core/src/core.scala:65:19
      regs_wbDst <= io_prev_bits_wbDst;	// core/src/core.scala:65:19
      regs_Imm <= io_prev_bits_Imm;	// core/src/core.scala:65:19
      regs_rd <= io_prev_bits_rd;	// core/src/core.scala:65:19
      regs_rd_data <= io_prev_bits_rd_data;	// core/src/core.scala:65:19
      regs_rj_data <= io_prev_bits_rj_data;	// core/src/core.scala:65:19
      regs_pc <= io_prev_bits_pc;	// core/src/core.scala:65:19
      regs_ALUA <= io_prev_bits_ALUA;	// core/src/core.scala:65:19
      regs_ALUB <= io_prev_bits_ALUB;	// core/src/core.scala:65:19
      regs_MulA <= io_prev_bits_MulA;	// core/src/core.scala:65:19
      regs_MulB <= io_prev_bits_MulB;	// core/src/core.scala:65:19
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/core.scala:57:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/core.scala:57:7
      `FIRRTL_BEFORE_INITIAL	// core/src/core.scala:57:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/core.scala:57:7
      automatic logic [31:0] _RANDOM[0:10];	// core/src/core.scala:57:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/core.scala:57:7
        `INIT_RANDOM_PROLOG_	// core/src/core.scala:57:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/core.scala:57:7
        for (logic [3:0] i = 4'h0; i < 4'hB; i += 4'h1) begin
          _RANDOM[i] = `RANDOM;	// core/src/core.scala:57:7
        end	// core/src/core.scala:57:7
        state = _RANDOM[4'h0][0];	// core/src/core.scala:57:7, :62:24
        regs_aluOp = _RANDOM[4'h0][4:1];	// core/src/core.scala:57:7, :62:24, :65:19
        regs_memOp = _RANDOM[4'h0][8:5];	// core/src/core.scala:57:7, :62:24, :65:19
        regs_branch = _RANDOM[4'h0][12:9];	// core/src/core.scala:57:7, :62:24, :65:19
        regs_wbSel = _RANDOM[4'h0][14:13];	// core/src/core.scala:57:7, :62:24, :65:19
        regs_wbDst = _RANDOM[4'h0][16:15];	// core/src/core.scala:57:7, :62:24, :65:19
        regs_Imm = {_RANDOM[4'h0][31:17], _RANDOM[4'h1][16:0]};	// core/src/core.scala:57:7, :62:24, :65:19
        regs_rd = _RANDOM[4'h1][21:17];	// core/src/core.scala:57:7, :65:19
        regs_rd_data = {_RANDOM[4'h1][31:22], _RANDOM[4'h2][21:0]};	// core/src/core.scala:57:7, :65:19
        regs_rj_data = {_RANDOM[4'h2][31:22], _RANDOM[4'h3][21:0]};	// core/src/core.scala:57:7, :65:19
        regs_pc = {_RANDOM[4'h3][31:22], _RANDOM[4'h4][21:0]};	// core/src/core.scala:57:7, :65:19
        regs_ALUA = {_RANDOM[4'h4][31:22], _RANDOM[4'h5][21:0]};	// core/src/core.scala:57:7, :65:19
        regs_ALUB = {_RANDOM[4'h5][31:22], _RANDOM[4'h6][21:0]};	// core/src/core.scala:57:7, :65:19
        regs_MulA = {_RANDOM[4'h6][31:22], _RANDOM[4'h7], _RANDOM[4'h8][21:0]};	// core/src/core.scala:57:7, :65:19
        regs_MulB = {_RANDOM[4'h8][31:22], _RANDOM[4'h9], _RANDOM[4'hA][21:0]};	// core/src/core.scala:57:7, :65:19
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/core.scala:57:7
      `FIRRTL_AFTER_INITIAL	// core/src/core.scala:57:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_next_valid = state;	// core/src/core.scala:57:7, :62:24
  assign io_next_bits_aluOp = regs_aluOp;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_memOp = regs_memOp;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_branch = regs_branch;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_wbSel = regs_wbSel;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_wbDst = regs_wbDst;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_Imm = regs_Imm;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_rd = regs_rd;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_rd_data = regs_rd_data;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_rj_data = regs_rj_data;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_pc = regs_pc;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_ALUA = regs_ALUA;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_ALUB = regs_ALUB;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_MulA = regs_MulA;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_MulB = regs_MulB;	// core/src/core.scala:57:7, :65:19
endmodule

module bshifter(	// core/src/exu.scala:143:7
  input  [31:0] io_A,	// core/src/exu.scala:144:16
  input  [4:0]  io_B,	// core/src/exu.scala:144:16
  input  [3:0]  io_Op,	// core/src/exu.scala:144:16
  output [31:0] io_Out	// core/src/exu.scala:144:16
);

  wire _GEN = io_Op != 4'hB;	// core/src/exu.scala:157:53
  wire Shifter_1_0 =
    io_B[0] ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[1] : _GEN & io_A[0]) : io_A[0];	// core/src/exu.scala:152:24, :156:{37,43}, :157:53
  wire Shifter_1_1 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[2] : io_Op == 4'hB ? io_A[0] : io_A[1])
      : io_A[1];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_2 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[3] : io_Op == 4'hB ? io_A[1] : io_A[2])
      : io_A[2];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_3 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[4] : io_Op == 4'hB ? io_A[2] : io_A[3])
      : io_A[3];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_4 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[5] : io_Op == 4'hB ? io_A[3] : io_A[4])
      : io_A[4];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_5 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[6] : io_Op == 4'hB ? io_A[4] : io_A[5])
      : io_A[5];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_6 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[7] : io_Op == 4'hB ? io_A[5] : io_A[6])
      : io_A[6];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_7 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[8] : io_Op == 4'hB ? io_A[6] : io_A[7])
      : io_A[7];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_8 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[9] : io_Op == 4'hB ? io_A[7] : io_A[8])
      : io_A[8];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_9 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[10] : io_Op == 4'hB ? io_A[8] : io_A[9])
      : io_A[9];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_10 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[11] : io_Op == 4'hB ? io_A[9] : io_A[10])
      : io_A[10];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_11 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[12] : io_Op == 4'hB ? io_A[10] : io_A[11])
      : io_A[11];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_12 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[13] : io_Op == 4'hB ? io_A[11] : io_A[12])
      : io_A[12];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_13 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[14] : io_Op == 4'hB ? io_A[12] : io_A[13])
      : io_A[13];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_14 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[15] : io_Op == 4'hB ? io_A[13] : io_A[14])
      : io_A[14];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_15 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[16] : io_Op == 4'hB ? io_A[14] : io_A[15])
      : io_A[15];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_16 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[17] : io_Op == 4'hB ? io_A[15] : io_A[16])
      : io_A[16];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_17 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[18] : io_Op == 4'hB ? io_A[16] : io_A[17])
      : io_A[17];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_18 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[19] : io_Op == 4'hB ? io_A[17] : io_A[18])
      : io_A[18];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_19 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[20] : io_Op == 4'hB ? io_A[18] : io_A[19])
      : io_A[19];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_20 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[21] : io_Op == 4'hB ? io_A[19] : io_A[20])
      : io_A[20];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_21 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[22] : io_Op == 4'hB ? io_A[20] : io_A[21])
      : io_A[21];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_22 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[23] : io_Op == 4'hB ? io_A[21] : io_A[22])
      : io_A[22];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_23 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[24] : io_Op == 4'hB ? io_A[22] : io_A[23])
      : io_A[23];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_24 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[25] : io_Op == 4'hB ? io_A[23] : io_A[24])
      : io_A[24];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_25 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[26] : io_Op == 4'hB ? io_A[24] : io_A[25])
      : io_A[25];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_26 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[27] : io_Op == 4'hB ? io_A[25] : io_A[26])
      : io_A[26];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_27 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[28] : io_Op == 4'hB ? io_A[26] : io_A[27])
      : io_A[27];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_28 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[29] : io_Op == 4'hB ? io_A[27] : io_A[28])
      : io_A[28];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_29 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[30] : io_Op == 4'hB ? io_A[28] : io_A[29])
      : io_A[29];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire Shifter_1_30 =
    io_B[0]
      ? (io_Op == 4'hD | io_Op == 4'hC ? io_A[31] : io_Op == 4'hB ? io_A[29] : io_A[30])
      : io_A[30];	// core/src/exu.scala:152:24, :156:43, :157:53, :172:37, :173:53
  wire _GEN_0 = io_Op != 4'hC;	// core/src/exu.scala:157:53, :165:53
  wire Shifter_1_31 =
    ~(io_B[0]) | io_Op == 4'hD
      ? io_A[31]
      : _GEN_0 & (io_Op == 4'hB ? io_A[30] : io_A[31]);	// core/src/exu.scala:152:24, :156:43, :157:53, :164:37, :165:53
  wire Shifter_2_0 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_1_2 : _GEN & Shifter_1_0)
      : Shifter_1_0;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37
  wire Shifter_2_1 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_1_3 : _GEN & Shifter_1_1)
      : Shifter_1_1;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37
  wire Shifter_2_2 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_4
           : io_Op == 4'hB ? Shifter_1_0 : Shifter_1_2)
      : Shifter_1_2;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37, :173:53
  wire Shifter_2_3 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_5
           : io_Op == 4'hB ? Shifter_1_1 : Shifter_1_3)
      : Shifter_1_3;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_4 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_6
           : io_Op == 4'hB ? Shifter_1_2 : Shifter_1_4)
      : Shifter_1_4;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_5 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_7
           : io_Op == 4'hB ? Shifter_1_3 : Shifter_1_5)
      : Shifter_1_5;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_6 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_8
           : io_Op == 4'hB ? Shifter_1_4 : Shifter_1_6)
      : Shifter_1_6;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_7 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_9
           : io_Op == 4'hB ? Shifter_1_5 : Shifter_1_7)
      : Shifter_1_7;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_8 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_10
           : io_Op == 4'hB ? Shifter_1_6 : Shifter_1_8)
      : Shifter_1_8;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_9 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_11
           : io_Op == 4'hB ? Shifter_1_7 : Shifter_1_9)
      : Shifter_1_9;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_10 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_12
           : io_Op == 4'hB ? Shifter_1_8 : Shifter_1_10)
      : Shifter_1_10;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_11 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_13
           : io_Op == 4'hB ? Shifter_1_9 : Shifter_1_11)
      : Shifter_1_11;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_12 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_14
           : io_Op == 4'hB ? Shifter_1_10 : Shifter_1_12)
      : Shifter_1_12;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_13 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_15
           : io_Op == 4'hB ? Shifter_1_11 : Shifter_1_13)
      : Shifter_1_13;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_14 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_16
           : io_Op == 4'hB ? Shifter_1_12 : Shifter_1_14)
      : Shifter_1_14;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_15 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_17
           : io_Op == 4'hB ? Shifter_1_13 : Shifter_1_15)
      : Shifter_1_15;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_16 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_18
           : io_Op == 4'hB ? Shifter_1_14 : Shifter_1_16)
      : Shifter_1_16;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_17 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_19
           : io_Op == 4'hB ? Shifter_1_15 : Shifter_1_17)
      : Shifter_1_17;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_18 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_20
           : io_Op == 4'hB ? Shifter_1_16 : Shifter_1_18)
      : Shifter_1_18;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_19 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_21
           : io_Op == 4'hB ? Shifter_1_17 : Shifter_1_19)
      : Shifter_1_19;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_20 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_22
           : io_Op == 4'hB ? Shifter_1_18 : Shifter_1_20)
      : Shifter_1_20;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_21 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_23
           : io_Op == 4'hB ? Shifter_1_19 : Shifter_1_21)
      : Shifter_1_21;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_22 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_24
           : io_Op == 4'hB ? Shifter_1_20 : Shifter_1_22)
      : Shifter_1_22;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_23 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_25
           : io_Op == 4'hB ? Shifter_1_21 : Shifter_1_23)
      : Shifter_1_23;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_24 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_26
           : io_Op == 4'hB ? Shifter_1_22 : Shifter_1_24)
      : Shifter_1_24;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_25 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_27
           : io_Op == 4'hB ? Shifter_1_23 : Shifter_1_25)
      : Shifter_1_25;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_26 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_28
           : io_Op == 4'hB ? Shifter_1_24 : Shifter_1_26)
      : Shifter_1_26;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_27 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_29
           : io_Op == 4'hB ? Shifter_1_25 : Shifter_1_27)
      : Shifter_1_27;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_28 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_30
           : io_Op == 4'hB ? Shifter_1_26 : Shifter_1_28)
      : Shifter_1_28;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_2_29 =
    io_B[1]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_1_31
           : io_Op == 4'hB ? Shifter_1_27 : Shifter_1_29)
      : Shifter_1_29;	// core/src/exu.scala:156:43, :157:53, :164:37, :172:37, :173:53
  wire Shifter_2_30 =
    io_B[1]
      ? (io_Op == 4'hD
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'hB ? Shifter_1_28 : Shifter_1_30))
      : Shifter_1_30;	// core/src/exu.scala:152:24, :156:43, :157:53, :164:37, :165:53, :172:37
  wire Shifter_2_31 =
    io_B[1]
      ? (io_Op == 4'hD
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'hB ? Shifter_1_29 : Shifter_1_31))
      : Shifter_1_31;	// core/src/exu.scala:152:24, :156:43, :157:53, :164:37, :165:53, :172:37
  wire Shifter_3_0 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_2_4 : _GEN & Shifter_2_0)
      : Shifter_2_0;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37
  wire Shifter_3_1 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_2_5 : _GEN & Shifter_2_1)
      : Shifter_2_1;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37
  wire Shifter_3_2 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_2_6 : _GEN & Shifter_2_2)
      : Shifter_2_2;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37
  wire Shifter_3_3 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_2_7 : _GEN & Shifter_2_3)
      : Shifter_2_3;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37
  wire Shifter_3_4 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_8
           : io_Op == 4'hB ? Shifter_2_0 : Shifter_2_4)
      : Shifter_2_4;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37, :173:53
  wire Shifter_3_5 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_9
           : io_Op == 4'hB ? Shifter_2_1 : Shifter_2_5)
      : Shifter_2_5;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37, :173:53
  wire Shifter_3_6 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_10
           : io_Op == 4'hB ? Shifter_2_2 : Shifter_2_6)
      : Shifter_2_6;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_7 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_11
           : io_Op == 4'hB ? Shifter_2_3 : Shifter_2_7)
      : Shifter_2_7;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_8 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_12
           : io_Op == 4'hB ? Shifter_2_4 : Shifter_2_8)
      : Shifter_2_8;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_9 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_13
           : io_Op == 4'hB ? Shifter_2_5 : Shifter_2_9)
      : Shifter_2_9;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_10 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_14
           : io_Op == 4'hB ? Shifter_2_6 : Shifter_2_10)
      : Shifter_2_10;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_11 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_15
           : io_Op == 4'hB ? Shifter_2_7 : Shifter_2_11)
      : Shifter_2_11;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_12 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_16
           : io_Op == 4'hB ? Shifter_2_8 : Shifter_2_12)
      : Shifter_2_12;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_13 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_17
           : io_Op == 4'hB ? Shifter_2_9 : Shifter_2_13)
      : Shifter_2_13;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_14 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_18
           : io_Op == 4'hB ? Shifter_2_10 : Shifter_2_14)
      : Shifter_2_14;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_15 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_19
           : io_Op == 4'hB ? Shifter_2_11 : Shifter_2_15)
      : Shifter_2_15;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_16 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_20
           : io_Op == 4'hB ? Shifter_2_12 : Shifter_2_16)
      : Shifter_2_16;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_17 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_21
           : io_Op == 4'hB ? Shifter_2_13 : Shifter_2_17)
      : Shifter_2_17;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_18 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_22
           : io_Op == 4'hB ? Shifter_2_14 : Shifter_2_18)
      : Shifter_2_18;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_19 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_23
           : io_Op == 4'hB ? Shifter_2_15 : Shifter_2_19)
      : Shifter_2_19;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_20 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_24
           : io_Op == 4'hB ? Shifter_2_16 : Shifter_2_20)
      : Shifter_2_20;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_21 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_25
           : io_Op == 4'hB ? Shifter_2_17 : Shifter_2_21)
      : Shifter_2_21;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_22 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_26
           : io_Op == 4'hB ? Shifter_2_18 : Shifter_2_22)
      : Shifter_2_22;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_23 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_27
           : io_Op == 4'hB ? Shifter_2_19 : Shifter_2_23)
      : Shifter_2_23;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_24 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_28
           : io_Op == 4'hB ? Shifter_2_20 : Shifter_2_24)
      : Shifter_2_24;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_25 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_29
           : io_Op == 4'hB ? Shifter_2_21 : Shifter_2_25)
      : Shifter_2_25;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_3_26 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_30
           : io_Op == 4'hB ? Shifter_2_22 : Shifter_2_26)
      : Shifter_2_26;	// core/src/exu.scala:156:43, :157:53, :164:37, :172:37, :173:53
  wire Shifter_3_27 =
    io_B[2]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_2_31
           : io_Op == 4'hB ? Shifter_2_23 : Shifter_2_27)
      : Shifter_2_27;	// core/src/exu.scala:156:43, :157:53, :164:37, :172:37, :173:53
  wire Shifter_3_28 =
    io_B[2]
      ? (io_Op == 4'hD
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'hB ? Shifter_2_24 : Shifter_2_28))
      : Shifter_2_28;	// core/src/exu.scala:152:24, :156:43, :157:53, :164:37, :165:53, :172:37
  wire Shifter_3_29 =
    io_B[2]
      ? (io_Op == 4'hD
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'hB ? Shifter_2_25 : Shifter_2_29))
      : Shifter_2_29;	// core/src/exu.scala:152:24, :156:43, :157:53, :164:37, :165:53, :172:37
  wire Shifter_3_30 =
    io_B[2]
      ? (io_Op == 4'hD
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'hB ? Shifter_2_26 : Shifter_2_30))
      : Shifter_2_30;	// core/src/exu.scala:152:24, :156:43, :157:53, :164:37, :165:53, :172:37
  wire Shifter_3_31 =
    io_B[2]
      ? (io_Op == 4'hD
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'hB ? Shifter_2_27 : Shifter_2_31))
      : Shifter_2_31;	// core/src/exu.scala:152:24, :156:43, :157:53, :164:37, :165:53, :172:37
  wire Shifter_4_0 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_3_8 : _GEN & Shifter_3_0)
      : Shifter_3_0;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37
  wire Shifter_4_1 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_3_9 : _GEN & Shifter_3_1)
      : Shifter_3_1;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37
  wire Shifter_4_2 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_3_10 : _GEN & Shifter_3_2)
      : Shifter_3_2;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37
  wire Shifter_4_3 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_3_11 : _GEN & Shifter_3_3)
      : Shifter_3_3;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37
  wire Shifter_4_4 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_3_12 : _GEN & Shifter_3_4)
      : Shifter_3_4;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37
  wire Shifter_4_5 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_3_13 : _GEN & Shifter_3_5)
      : Shifter_3_5;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37
  wire Shifter_4_6 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_3_14 : _GEN & Shifter_3_6)
      : Shifter_3_6;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37
  wire Shifter_4_7 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_3_15 : _GEN & Shifter_3_7)
      : Shifter_3_7;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37
  wire Shifter_4_8 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_16
           : io_Op == 4'hB ? Shifter_3_0 : Shifter_3_8)
      : Shifter_3_8;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37, :173:53
  wire Shifter_4_9 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_17
           : io_Op == 4'hB ? Shifter_3_1 : Shifter_3_9)
      : Shifter_3_9;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37, :173:53
  wire Shifter_4_10 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_18
           : io_Op == 4'hB ? Shifter_3_2 : Shifter_3_10)
      : Shifter_3_10;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37, :173:53
  wire Shifter_4_11 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_19
           : io_Op == 4'hB ? Shifter_3_3 : Shifter_3_11)
      : Shifter_3_11;	// core/src/exu.scala:156:{37,43}, :157:53, :172:37, :173:53
  wire Shifter_4_12 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_20
           : io_Op == 4'hB ? Shifter_3_4 : Shifter_3_12)
      : Shifter_3_12;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_4_13 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_21
           : io_Op == 4'hB ? Shifter_3_5 : Shifter_3_13)
      : Shifter_3_13;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_4_14 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_22
           : io_Op == 4'hB ? Shifter_3_6 : Shifter_3_14)
      : Shifter_3_14;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_4_15 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_23
           : io_Op == 4'hB ? Shifter_3_7 : Shifter_3_15)
      : Shifter_3_15;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_4_16 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_24
           : io_Op == 4'hB ? Shifter_3_8 : Shifter_3_16)
      : Shifter_3_16;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_4_17 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_25
           : io_Op == 4'hB ? Shifter_3_9 : Shifter_3_17)
      : Shifter_3_17;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_4_18 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_26
           : io_Op == 4'hB ? Shifter_3_10 : Shifter_3_18)
      : Shifter_3_18;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_4_19 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_27
           : io_Op == 4'hB ? Shifter_3_11 : Shifter_3_19)
      : Shifter_3_19;	// core/src/exu.scala:156:43, :157:53, :172:37, :173:53
  wire Shifter_4_20 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_28
           : io_Op == 4'hB ? Shifter_3_12 : Shifter_3_20)
      : Shifter_3_20;	// core/src/exu.scala:156:43, :157:53, :164:37, :172:37, :173:53
  wire Shifter_4_21 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_29
           : io_Op == 4'hB ? Shifter_3_13 : Shifter_3_21)
      : Shifter_3_21;	// core/src/exu.scala:156:43, :157:53, :164:37, :172:37, :173:53
  wire Shifter_4_22 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_30
           : io_Op == 4'hB ? Shifter_3_14 : Shifter_3_22)
      : Shifter_3_22;	// core/src/exu.scala:156:43, :157:53, :164:37, :172:37, :173:53
  wire Shifter_4_23 =
    io_B[3]
      ? (io_Op == 4'hD | io_Op == 4'hC
           ? Shifter_3_31
           : io_Op == 4'hB ? Shifter_3_15 : Shifter_3_23)
      : Shifter_3_23;	// core/src/exu.scala:156:43, :157:53, :164:37, :172:37, :173:53
  wire Shifter_4_24 =
    io_B[3]
      ? (io_Op == 4'hD
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'hB ? Shifter_3_16 : Shifter_3_24))
      : Shifter_3_24;	// core/src/exu.scala:152:24, :156:43, :157:53, :164:37, :165:53, :172:37
  wire Shifter_4_25 =
    io_B[3]
      ? (io_Op == 4'hD
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'hB ? Shifter_3_17 : Shifter_3_25))
      : Shifter_3_25;	// core/src/exu.scala:152:24, :156:43, :157:53, :164:37, :165:53, :172:37
  wire Shifter_4_26 =
    io_B[3]
      ? (io_Op == 4'hD
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'hB ? Shifter_3_18 : Shifter_3_26))
      : Shifter_3_26;	// core/src/exu.scala:152:24, :156:43, :157:53, :164:37, :165:53, :172:37
  wire Shifter_4_27 =
    io_B[3]
      ? (io_Op == 4'hD
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'hB ? Shifter_3_19 : Shifter_3_27))
      : Shifter_3_27;	// core/src/exu.scala:152:24, :156:43, :157:53, :164:37, :165:53, :172:37
  wire Shifter_4_28 =
    io_B[3]
      ? (io_Op == 4'hD
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'hB ? Shifter_3_20 : Shifter_3_28))
      : Shifter_3_28;	// core/src/exu.scala:152:24, :156:43, :157:53, :164:37, :165:53, :172:37
  wire Shifter_4_29 =
    io_B[3]
      ? (io_Op == 4'hD
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'hB ? Shifter_3_21 : Shifter_3_29))
      : Shifter_3_29;	// core/src/exu.scala:152:24, :156:43, :157:53, :164:37, :165:53, :172:37
  wire Shifter_4_30 =
    io_B[3]
      ? (io_Op == 4'hD
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'hB ? Shifter_3_22 : Shifter_3_30))
      : Shifter_3_30;	// core/src/exu.scala:152:24, :156:43, :157:53, :164:37, :165:53, :172:37
  wire Shifter_4_31 =
    io_B[3]
      ? (io_Op == 4'hD
           ? io_A[31]
           : _GEN_0 & (io_Op == 4'hB ? Shifter_3_23 : Shifter_3_31))
      : Shifter_3_31;	// core/src/exu.scala:152:24, :156:43, :157:53, :164:37, :165:53, :172:37
  assign io_Out =
    {io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_15 : Shifter_4_31))
       : Shifter_4_31,
     io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_14 : Shifter_4_30))
       : Shifter_4_30,
     io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_13 : Shifter_4_29))
       : Shifter_4_29,
     io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_12 : Shifter_4_28))
       : Shifter_4_28,
     io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_11 : Shifter_4_27))
       : Shifter_4_27,
     io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_10 : Shifter_4_26))
       : Shifter_4_26,
     io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_9 : Shifter_4_25))
       : Shifter_4_25,
     io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_8 : Shifter_4_24))
       : Shifter_4_24,
     io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_7 : Shifter_4_23))
       : Shifter_4_23,
     io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_6 : Shifter_4_22))
       : Shifter_4_22,
     io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_5 : Shifter_4_21))
       : Shifter_4_21,
     io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_4 : Shifter_4_20))
       : Shifter_4_20,
     io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_3 : Shifter_4_19))
       : Shifter_4_19,
     io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_2 : Shifter_4_18))
       : Shifter_4_18,
     io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_1 : Shifter_4_17))
       : Shifter_4_17,
     io_B[4]
       ? (io_Op == 4'hD
            ? io_A[31]
            : _GEN_0 & (io_Op == 4'hB ? Shifter_4_0 : Shifter_4_16))
       : Shifter_4_16,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_31 : _GEN & Shifter_4_15)
       : Shifter_4_15,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_30 : _GEN & Shifter_4_14)
       : Shifter_4_14,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_29 : _GEN & Shifter_4_13)
       : Shifter_4_13,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_28 : _GEN & Shifter_4_12)
       : Shifter_4_12,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_27 : _GEN & Shifter_4_11)
       : Shifter_4_11,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_26 : _GEN & Shifter_4_10)
       : Shifter_4_10,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_25 : _GEN & Shifter_4_9)
       : Shifter_4_9,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_24 : _GEN & Shifter_4_8)
       : Shifter_4_8,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_23 : _GEN & Shifter_4_7)
       : Shifter_4_7,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_22 : _GEN & Shifter_4_6)
       : Shifter_4_6,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_21 : _GEN & Shifter_4_5)
       : Shifter_4_5,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_20 : _GEN & Shifter_4_4)
       : Shifter_4_4,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_19 : _GEN & Shifter_4_3)
       : Shifter_4_3,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_18 : _GEN & Shifter_4_2)
       : Shifter_4_2,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_17 : _GEN & Shifter_4_1)
       : Shifter_4_1,
     io_B[4]
       ? (io_Op == 4'hD | io_Op == 4'hC ? Shifter_4_16 : _GEN & Shifter_4_0)
       : Shifter_4_0};	// core/src/exu.scala:143:7, :152:24, :156:{37,43}, :157:53, :164:37, :165:53, :172:37, :181:26
endmodule

module alu(	// core/src/exu.scala:93:7
  input  [31:0] io_A,	// core/src/exu.scala:94:16
                io_B,	// core/src/exu.scala:94:16
  input  [3:0]  io_Op,	// core/src/exu.scala:94:16
  output [31:0] io_Out,	// core/src/exu.scala:94:16
  output        io_SLess,	// core/src/exu.scala:94:16
                io_ULess,	// core/src/exu.scala:94:16
                io_Zero	// core/src/exu.scala:94:16
);

  wire [31:0]       _Shifter_io_Out;	// core/src/exu.scala:119:25
  wire              Sub = io_Op == 4'h3 | io_Op == 4'h2 | io_Op == 4'h1;	// core/src/exu.scala:104:37
  wire [31:0]       FixB = io_B ^ {32{Sub}};	// core/src/exu.scala:104:37, :112:{21,27}
  wire [33:0]       FixSum = {1'h0, {1'h0, io_A} + {1'h0, FixB}} + {33'h0, Sub};	// core/src/exu.scala:104:37, :112:21, :113:{23,31}
  wire              SLess = FixSum[31] ^ io_A[31] == FixB[31] & FixSum[31] != io_A[31];	// core/src/exu.scala:112:21, :113:31, :114:{19,24,32,38,48,53}, :116:29
  wire [31:0]       _io_Out_T_5 = io_A | io_B;	// core/src/exu.scala:130:27
  wire [33:0]       _GEN = {2'h0, _Shifter_io_Out};	// core/src/exu.scala:104:37, :119:25, :124:37
  wire [15:0][33:0] _GEN_0 =
    {{34'h0},
     {34'h0},
     {_GEN},
     {_GEN},
     {_GEN},
     {34'h0},
     {34'h0},
     {34'h0},
     {{2'h0, ~_io_Out_T_5}},
     {{2'h0, io_A ^ io_B}},
     {{2'h0, _io_Out_T_5}},
     {{2'h0, io_A & io_B}},
     {{33'h0, ~(FixSum[32])}},
     {{33'h0, SLess}},
     {FixSum},
     {FixSum}};	// core/src/exu.scala:104:37, :113:31, :116:29, :117:{17,24}, :124:37, :129:28, :130:27, :131:28, :132:22
  bshifter Shifter (	// core/src/exu.scala:119:25
    .io_A   (io_A),
    .io_B   (io_B[4:0]),	// core/src/exu.scala:121:25
    .io_Op  (io_Op),
    .io_Out (_Shifter_io_Out)
  );
  assign io_Out = _GEN_0[io_Op][31:0];	// core/src/exu.scala:93:7, :124:{12,37}
  assign io_SLess = SLess;	// core/src/exu.scala:93:7, :116:29
  assign io_ULess = ~(FixSum[32]);	// core/src/exu.scala:93:7, :113:31, :117:{17,24}
  assign io_Zero = FixSum[31:0] == 32'h0;	// core/src/exu.scala:93:7, :112:27, :113:31, :115:{21,29}
endmodule

module exu2(	// core/src/exu.scala:56:7
  input         io_prev_valid,	// core/src/exu.scala:57:16
  input  [3:0]  io_prev_bits_aluOp,	// core/src/exu.scala:57:16
                io_prev_bits_memOp,	// core/src/exu.scala:57:16
                io_prev_bits_branch,	// core/src/exu.scala:57:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/exu.scala:57:16
                io_prev_bits_wbDst,	// core/src/exu.scala:57:16
  input  [31:0] io_prev_bits_Imm,	// core/src/exu.scala:57:16
  input  [4:0]  io_prev_bits_rd,	// core/src/exu.scala:57:16
  input  [31:0] io_prev_bits_rd_data,	// core/src/exu.scala:57:16
                io_prev_bits_rj_data,	// core/src/exu.scala:57:16
                io_prev_bits_pc,	// core/src/exu.scala:57:16
                io_prev_bits_ALUA,	// core/src/exu.scala:57:16
                io_prev_bits_ALUB,	// core/src/exu.scala:57:16
  input  [63:0] io_prev_bits_MulA,	// core/src/exu.scala:57:16
                io_prev_bits_MulB,	// core/src/exu.scala:57:16
  output        io_next_valid,	// core/src/exu.scala:57:16
  output [31:0] io_next_bits_ALUOut,	// core/src/exu.scala:57:16
  output        io_next_bits_SLess,	// core/src/exu.scala:57:16
                io_next_bits_ULess,	// core/src/exu.scala:57:16
                io_next_bits_Zero,	// core/src/exu.scala:57:16
  output [3:0]  io_next_bits_memOp,	// core/src/exu.scala:57:16
                io_next_bits_branch,	// core/src/exu.scala:57:16
  output [1:0]  io_next_bits_wbSel,	// core/src/exu.scala:57:16
                io_next_bits_wbDst,	// core/src/exu.scala:57:16
  output [31:0] io_next_bits_Imm,	// core/src/exu.scala:57:16
  output [4:0]  io_next_bits_rd,	// core/src/exu.scala:57:16
  output [31:0] io_next_bits_rd_data,	// core/src/exu.scala:57:16
                io_next_bits_rj_data,	// core/src/exu.scala:57:16
                io_next_bits_pc	// core/src/exu.scala:57:16
);

  wire [31:0] _ALU_io_Out;	// core/src/exu.scala:62:21
  wire [63:0] _WallaceOut_T = io_prev_bits_MulA + io_prev_bits_MulB;	// core/src/exu.scala:67:40
  alu ALU (	// core/src/exu.scala:62:21
    .io_A     (io_prev_bits_ALUA),
    .io_B     (io_prev_bits_ALUB),
    .io_Op    (io_prev_bits_aluOp),
    .io_Out   (_ALU_io_Out),
    .io_SLess (io_next_bits_SLess),
    .io_ULess (io_next_bits_ULess),
    .io_Zero  (io_next_bits_Zero)
  );
  assign io_next_valid = io_prev_valid;	// core/src/exu.scala:56:7
  assign io_next_bits_ALUOut =
    io_prev_bits_aluOp == 4'hA | io_prev_bits_aluOp == 4'h9
      ? _WallaceOut_T[63:32]
      : io_prev_bits_aluOp == 4'h8 ? _WallaceOut_T[31:0] : _ALU_io_Out;	// core/src/exu.scala:56:7, :62:21, :67:40, :69:60, :70:32, :71:33
  assign io_next_bits_memOp = io_prev_bits_memOp;	// core/src/exu.scala:56:7
  assign io_next_bits_branch = io_prev_bits_branch;	// core/src/exu.scala:56:7
  assign io_next_bits_wbSel = io_prev_bits_wbSel;	// core/src/exu.scala:56:7
  assign io_next_bits_wbDst = io_prev_bits_wbDst;	// core/src/exu.scala:56:7
  assign io_next_bits_Imm = io_prev_bits_Imm;	// core/src/exu.scala:56:7
  assign io_next_bits_rd = io_prev_bits_rd;	// core/src/exu.scala:56:7
  assign io_next_bits_rd_data = io_prev_bits_rd_data;	// core/src/exu.scala:56:7
  assign io_next_bits_rj_data = io_prev_bits_rj_data;	// core/src/exu.scala:56:7
  assign io_next_bits_pc = io_prev_bits_pc;	// core/src/exu.scala:56:7
endmodule

module buffer_3(	// core/src/core.scala:57:7
  input         clock,	// core/src/core.scala:57:7
                reset,	// core/src/core.scala:57:7
                io_prev_valid,	// core/src/core.scala:58:16
  input  [31:0] io_prev_bits_ALUOut,	// core/src/core.scala:58:16
  input         io_prev_bits_SLess,	// core/src/core.scala:58:16
                io_prev_bits_ULess,	// core/src/core.scala:58:16
                io_prev_bits_Zero,	// core/src/core.scala:58:16
  input  [3:0]  io_prev_bits_memOp,	// core/src/core.scala:58:16
                io_prev_bits_branch,	// core/src/core.scala:58:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/core.scala:58:16
                io_prev_bits_wbDst,	// core/src/core.scala:58:16
  input  [31:0] io_prev_bits_Imm,	// core/src/core.scala:58:16
  input  [4:0]  io_prev_bits_rd,	// core/src/core.scala:58:16
  input  [31:0] io_prev_bits_rd_data,	// core/src/core.scala:58:16
                io_prev_bits_rj_data,	// core/src/core.scala:58:16
                io_prev_bits_pc,	// core/src/core.scala:58:16
  output        io_next_valid,	// core/src/core.scala:58:16
  output [31:0] io_next_bits_ALUOut,	// core/src/core.scala:58:16
  output        io_next_bits_SLess,	// core/src/core.scala:58:16
                io_next_bits_ULess,	// core/src/core.scala:58:16
                io_next_bits_Zero,	// core/src/core.scala:58:16
  output [3:0]  io_next_bits_memOp,	// core/src/core.scala:58:16
                io_next_bits_branch,	// core/src/core.scala:58:16
  output [1:0]  io_next_bits_wbSel,	// core/src/core.scala:58:16
                io_next_bits_wbDst,	// core/src/core.scala:58:16
  output [31:0] io_next_bits_Imm,	// core/src/core.scala:58:16
  output [4:0]  io_next_bits_rd,	// core/src/core.scala:58:16
  output [31:0] io_next_bits_rd_data,	// core/src/core.scala:58:16
                io_next_bits_rj_data,	// core/src/core.scala:58:16
                io_next_bits_pc	// core/src/core.scala:58:16
);

  reg        state;	// core/src/core.scala:62:24
  reg [31:0] regs_ALUOut;	// core/src/core.scala:65:19
  reg        regs_SLess;	// core/src/core.scala:65:19
  reg        regs_ULess;	// core/src/core.scala:65:19
  reg        regs_Zero;	// core/src/core.scala:65:19
  reg [3:0]  regs_memOp;	// core/src/core.scala:65:19
  reg [3:0]  regs_branch;	// core/src/core.scala:65:19
  reg [1:0]  regs_wbSel;	// core/src/core.scala:65:19
  reg [1:0]  regs_wbDst;	// core/src/core.scala:65:19
  reg [31:0] regs_Imm;	// core/src/core.scala:65:19
  reg [4:0]  regs_rd;	// core/src/core.scala:65:19
  reg [31:0] regs_rd_data;	// core/src/core.scala:65:19
  reg [31:0] regs_rj_data;	// core/src/core.scala:65:19
  reg [31:0] regs_pc;	// core/src/core.scala:65:19
  always @(posedge clock) begin	// core/src/core.scala:57:7
    if (reset)	// core/src/core.scala:57:7
      state <= 1'h0;	// core/src/core.scala:62:24
    else	// core/src/core.scala:57:7
      state <= io_prev_valid;	// core/src/core.scala:62:24
    if (io_prev_valid) begin	// core/src/core.scala:58:16
      regs_ALUOut <= io_prev_bits_ALUOut;	// core/src/core.scala:65:19
      regs_SLess <= io_prev_bits_SLess;	// core/src/core.scala:65:19
      regs_ULess <= io_prev_bits_ULess;	// core/src/core.scala:65:19
      regs_Zero <= io_prev_bits_Zero;	// core/src/core.scala:65:19
      regs_memOp <= io_prev_bits_memOp;	// core/src/core.scala:65:19
      regs_branch <= io_prev_bits_branch;	// core/src/core.scala:65:19
      regs_wbSel <= io_prev_bits_wbSel;	// core/src/core.scala:65:19
      regs_wbDst <= io_prev_bits_wbDst;	// core/src/core.scala:65:19
      regs_Imm <= io_prev_bits_Imm;	// core/src/core.scala:65:19
      regs_rd <= io_prev_bits_rd;	// core/src/core.scala:65:19
      regs_rd_data <= io_prev_bits_rd_data;	// core/src/core.scala:65:19
      regs_rj_data <= io_prev_bits_rj_data;	// core/src/core.scala:65:19
      regs_pc <= io_prev_bits_pc;	// core/src/core.scala:65:19
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/core.scala:57:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/core.scala:57:7
      `FIRRTL_BEFORE_INITIAL	// core/src/core.scala:57:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/core.scala:57:7
      automatic logic [31:0] _RANDOM[0:5];	// core/src/core.scala:57:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/core.scala:57:7
        `INIT_RANDOM_PROLOG_	// core/src/core.scala:57:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/core.scala:57:7
        for (logic [2:0] i = 3'h0; i < 3'h6; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;	// core/src/core.scala:57:7
        end	// core/src/core.scala:57:7
        state = _RANDOM[3'h0][0];	// core/src/core.scala:57:7, :62:24
        regs_ALUOut = {_RANDOM[3'h0][31:1], _RANDOM[3'h1][0]};	// core/src/core.scala:57:7, :62:24, :65:19
        regs_SLess = _RANDOM[3'h1][1];	// core/src/core.scala:57:7, :65:19
        regs_ULess = _RANDOM[3'h1][2];	// core/src/core.scala:57:7, :65:19
        regs_Zero = _RANDOM[3'h1][3];	// core/src/core.scala:57:7, :65:19
        regs_memOp = _RANDOM[3'h1][7:4];	// core/src/core.scala:57:7, :65:19
        regs_branch = _RANDOM[3'h1][11:8];	// core/src/core.scala:57:7, :65:19
        regs_wbSel = _RANDOM[3'h1][13:12];	// core/src/core.scala:57:7, :65:19
        regs_wbDst = _RANDOM[3'h1][15:14];	// core/src/core.scala:57:7, :65:19
        regs_Imm = {_RANDOM[3'h1][31:16], _RANDOM[3'h2][15:0]};	// core/src/core.scala:57:7, :65:19
        regs_rd = _RANDOM[3'h2][20:16];	// core/src/core.scala:57:7, :65:19
        regs_rd_data = {_RANDOM[3'h2][31:21], _RANDOM[3'h3][20:0]};	// core/src/core.scala:57:7, :65:19
        regs_rj_data = {_RANDOM[3'h3][31:21], _RANDOM[3'h4][20:0]};	// core/src/core.scala:57:7, :65:19
        regs_pc = {_RANDOM[3'h4][31:21], _RANDOM[3'h5][20:0]};	// core/src/core.scala:57:7, :65:19
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/core.scala:57:7
      `FIRRTL_AFTER_INITIAL	// core/src/core.scala:57:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_next_valid = state;	// core/src/core.scala:57:7, :62:24
  assign io_next_bits_ALUOut = regs_ALUOut;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_SLess = regs_SLess;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_ULess = regs_ULess;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_Zero = regs_Zero;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_memOp = regs_memOp;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_branch = regs_branch;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_wbSel = regs_wbSel;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_wbDst = regs_wbDst;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_Imm = regs_Imm;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_rd = regs_rd;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_rd_data = regs_rd_data;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_rj_data = regs_rj_data;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_pc = regs_pc;	// core/src/core.scala:57:7, :65:19
endmodule

module lsu(	// core/src/lsu.scala:5:7
  input  [31:0] io_ext_in_bits_data_out,	// core/src/lsu.scala:6:16
  output        io_ext_out_valid,	// core/src/lsu.scala:6:16
                io_ext_out_bits_data_wen,	// core/src/lsu.scala:6:16
  output [31:0] io_ext_out_bits_data_in,	// core/src/lsu.scala:6:16
                io_ext_out_bits_addr,	// core/src/lsu.scala:6:16
  output [3:0]  io_ext_out_bits_be_n,	// core/src/lsu.scala:6:16
  output        io_ext_out_bits_ce_n,	// core/src/lsu.scala:6:16
                io_ext_out_bits_oe_n,	// core/src/lsu.scala:6:16
                io_ext_out_bits_we_n,	// core/src/lsu.scala:6:16
  input         io_prev_valid,	// core/src/lsu.scala:6:16
  input  [31:0] io_prev_bits_ALUOut,	// core/src/lsu.scala:6:16
  input         io_prev_bits_SLess,	// core/src/lsu.scala:6:16
                io_prev_bits_ULess,	// core/src/lsu.scala:6:16
                io_prev_bits_Zero,	// core/src/lsu.scala:6:16
  input  [3:0]  io_prev_bits_memOp,	// core/src/lsu.scala:6:16
                io_prev_bits_branch,	// core/src/lsu.scala:6:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/lsu.scala:6:16
                io_prev_bits_wbDst,	// core/src/lsu.scala:6:16
  input  [31:0] io_prev_bits_Imm,	// core/src/lsu.scala:6:16
  input  [4:0]  io_prev_bits_rd,	// core/src/lsu.scala:6:16
  input  [31:0] io_prev_bits_rd_data,	// core/src/lsu.scala:6:16
                io_prev_bits_rj_data,	// core/src/lsu.scala:6:16
                io_prev_bits_pc,	// core/src/lsu.scala:6:16
  output        io_next_valid,	// core/src/lsu.scala:6:16
  output [31:0] io_next_bits_MemOut,	// core/src/lsu.scala:6:16
                io_next_bits_ALUOut,	// core/src/lsu.scala:6:16
  output        io_next_bits_SLess,	// core/src/lsu.scala:6:16
                io_next_bits_ULess,	// core/src/lsu.scala:6:16
                io_next_bits_Zero,	// core/src/lsu.scala:6:16
  output [3:0]  io_next_bits_branch,	// core/src/lsu.scala:6:16
  output [1:0]  io_next_bits_wbSel,	// core/src/lsu.scala:6:16
                io_next_bits_wbDst,	// core/src/lsu.scala:6:16
  output [31:0] io_next_bits_Imm,	// core/src/lsu.scala:6:16
  output [4:0]  io_next_bits_rd,	// core/src/lsu.scala:6:16
  output [31:0] io_next_bits_rj_data,	// core/src/lsu.scala:6:16
                io_next_bits_pc	// core/src/lsu.scala:6:16
);

  wire [3:0][3:0]  _GEN = '{4'h7, 4'hB, 4'hD, 4'hE};	// core/src/lsu.scala:36:50
  wire [3:0][7:0]  _GEN_0 =
    {{io_ext_in_bits_data_out[31:24]},
     {io_ext_in_bits_data_out[23:16]},
     {io_ext_in_bits_data_out[15:8]},
     {io_ext_in_bits_data_out[7:0]}};	// core/src/lsu.scala:17:51, :18:24, :19:24, :20:24, :21:24
  wire [7:0]       FetchByte = _GEN_0[io_prev_bits_ALUOut[1:0]];	// core/src/lsu.scala:17:{38,51}
  wire [15:0]      FetchHalf =
    io_prev_bits_ALUOut[1]
      ? io_ext_in_bits_data_out[31:16]
      : io_ext_in_bits_data_out[15:0];	// core/src/lsu.scala:23:{38,48}, :24:24, :25:24
  wire [3:0][31:0] _GEN_1 =
    {{{io_prev_bits_rd_data[7:0], 24'h0}},
     {{8'h0, io_prev_bits_rd_data[7:0], 16'h0}},
     {{16'h0, io_prev_bits_rd_data[7:0], 8'h0}},
     {{24'h0, io_prev_bits_rd_data[7:0]}}};	// core/src/lsu.scala:29:31, :31:31, :53:50, :54:{19,44}, :55:{19,56}, :56:19, :57:19
  assign io_ext_out_valid = io_prev_valid;	// core/src/lsu.scala:5:7
  assign io_ext_out_bits_data_wen =
    io_prev_valid
    & (io_prev_bits_memOp == 4'h7 | io_prev_bits_memOp == 4'h6
       | io_prev_bits_memOp == 4'h5);	// core/src/lsu.scala:5:7, :36:50, :47:38, :70:25, :94:{34,56}, :116:34
  assign io_ext_out_bits_data_in =
    io_prev_valid
    & (io_prev_bits_memOp == 4'h7 | io_prev_bits_memOp == 4'h6
       | io_prev_bits_memOp == 4'h5)
      ? (io_prev_bits_memOp == 4'h7
           ? io_prev_bits_rd_data
           : io_prev_bits_memOp == 4'h6
               ? (io_prev_bits_ALUOut[1]
                    ? {io_prev_bits_rd_data[15:0], 16'h0}
                    : {16'h0, io_prev_bits_rd_data[15:0]})
               : io_prev_bits_memOp == 4'h5 ? _GEN_1[io_prev_bits_ALUOut[1:0]] : 32'h0)
      : 32'h0;	// core/src/lsu.scala:5:7, :17:38, :23:38, :28:38, :31:31, :36:50, :47:38, :53:50, :59:47, :60:{19,44}, :61:19, :64:38, :70:25, :99:{33,55}, :117:33
  assign io_ext_out_bits_addr = io_prev_valid ? io_prev_bits_ALUOut : 32'h0;	// core/src/lsu.scala:5:7, :28:38, :70:25, :71:30, :112:30
  assign io_ext_out_bits_be_n =
    ~(io_prev_valid
      & (io_prev_bits_memOp == 4'h7 | io_prev_bits_memOp == 4'h6
         | io_prev_bits_memOp == 4'h5)) | io_prev_bits_memOp == 4'h7
      ? 4'h0
      : io_prev_bits_memOp == 4'h6
          ? (io_prev_bits_ALUOut[1] ? 4'h3 : 4'hC)
          : io_prev_bits_memOp == 4'h5 ? _GEN[io_prev_bits_ALUOut[1:0]] : 4'h0;	// core/src/lsu.scala:5:7, :17:38, :23:38, :36:50, :42:47, :47:38, :70:25, :104:{30,52}, :118:30
  assign io_ext_out_bits_ce_n =
    ~io_prev_valid
    | ~(io_prev_bits_memOp == 4'h7 | io_prev_bits_memOp == 4'h6
        | io_prev_bits_memOp == 4'h5 | io_prev_bits_memOp == 4'h4
        | io_prev_bits_memOp == 4'h3 | io_prev_bits_memOp == 4'h2
        | io_prev_bits_memOp == 4'h1) & (|io_prev_bits_memOp);	// core/src/lsu.scala:5:7, :28:38, :36:50, :42:47, :47:38, :70:25, :72:{30,52}, :113:30
  assign io_ext_out_bits_oe_n =
    ~io_prev_valid
    | ~(io_prev_bits_memOp == 4'h4 | io_prev_bits_memOp == 4'h3
        | io_prev_bits_memOp == 4'h2 | io_prev_bits_memOp == 4'h1)
    & (|io_prev_bits_memOp);	// core/src/lsu.scala:5:7, :28:38, :42:47, :70:25, :72:30, :82:{30,52}, :113:30, :114:30
  assign io_ext_out_bits_we_n =
    ~io_prev_valid | ~(io_prev_bits_memOp == 4'h7 | io_prev_bits_memOp == 4'h6)
    & io_prev_bits_memOp != 4'h5;	// core/src/lsu.scala:5:7, :36:50, :47:38, :70:25, :72:30, :89:{30,52}, :113:30, :115:30
  assign io_next_valid = io_prev_valid;	// core/src/lsu.scala:5:7
  assign io_next_bits_MemOut =
    io_prev_valid
      ? (io_prev_bits_memOp == 4'h4
           ? io_ext_in_bits_data_out
           : io_prev_bits_memOp == 4'h3
               ? {16'h0, FetchHalf}
               : io_prev_bits_memOp == 4'h2
                   ? {{16{FetchHalf[15]}}, FetchHalf}
                   : io_prev_bits_memOp == 4'h1
                       ? {24'h0, FetchByte}
                       : io_prev_bits_memOp == 4'h0
                           ? {{24{FetchByte[7]}}, FetchByte}
                           : 32'h0)
      : 32'h0;	// core/src/lsu.scala:5:7, :17:51, :23:48, :28:38, :29:{26,31,45}, :30:26, :31:{26,31,45}, :32:26, :42:47, :47:38, :70:25, :109:29, :119:29
  assign io_next_bits_ALUOut = io_prev_bits_ALUOut;	// core/src/lsu.scala:5:7
  assign io_next_bits_SLess = io_prev_bits_SLess;	// core/src/lsu.scala:5:7
  assign io_next_bits_ULess = io_prev_bits_ULess;	// core/src/lsu.scala:5:7
  assign io_next_bits_Zero = io_prev_bits_Zero;	// core/src/lsu.scala:5:7
  assign io_next_bits_branch = io_prev_bits_branch;	// core/src/lsu.scala:5:7
  assign io_next_bits_wbSel = io_prev_bits_wbSel;	// core/src/lsu.scala:5:7
  assign io_next_bits_wbDst = io_prev_bits_wbDst;	// core/src/lsu.scala:5:7
  assign io_next_bits_Imm = io_prev_bits_Imm;	// core/src/lsu.scala:5:7
  assign io_next_bits_rd = io_prev_bits_rd;	// core/src/lsu.scala:5:7
  assign io_next_bits_rj_data = io_prev_bits_rj_data;	// core/src/lsu.scala:5:7
  assign io_next_bits_pc = io_prev_bits_pc;	// core/src/lsu.scala:5:7
endmodule

module buffer_4(	// core/src/core.scala:57:7
  input         clock,	// core/src/core.scala:57:7
                reset,	// core/src/core.scala:57:7
                io_prev_valid,	// core/src/core.scala:58:16
  input  [31:0] io_prev_bits_MemOut,	// core/src/core.scala:58:16
                io_prev_bits_ALUOut,	// core/src/core.scala:58:16
  input         io_prev_bits_SLess,	// core/src/core.scala:58:16
                io_prev_bits_ULess,	// core/src/core.scala:58:16
                io_prev_bits_Zero,	// core/src/core.scala:58:16
  input  [3:0]  io_prev_bits_branch,	// core/src/core.scala:58:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/core.scala:58:16
                io_prev_bits_wbDst,	// core/src/core.scala:58:16
  input  [31:0] io_prev_bits_Imm,	// core/src/core.scala:58:16
  input  [4:0]  io_prev_bits_rd,	// core/src/core.scala:58:16
  input  [31:0] io_prev_bits_rj_data,	// core/src/core.scala:58:16
                io_prev_bits_pc,	// core/src/core.scala:58:16
  output        io_next_valid,	// core/src/core.scala:58:16
  output [31:0] io_next_bits_MemOut,	// core/src/core.scala:58:16
                io_next_bits_ALUOut,	// core/src/core.scala:58:16
  output        io_next_bits_SLess,	// core/src/core.scala:58:16
                io_next_bits_ULess,	// core/src/core.scala:58:16
                io_next_bits_Zero,	// core/src/core.scala:58:16
  output [3:0]  io_next_bits_branch,	// core/src/core.scala:58:16
  output [1:0]  io_next_bits_wbSel,	// core/src/core.scala:58:16
                io_next_bits_wbDst,	// core/src/core.scala:58:16
  output [31:0] io_next_bits_Imm,	// core/src/core.scala:58:16
  output [4:0]  io_next_bits_rd,	// core/src/core.scala:58:16
  output [31:0] io_next_bits_rj_data,	// core/src/core.scala:58:16
                io_next_bits_pc	// core/src/core.scala:58:16
);

  reg        state;	// core/src/core.scala:62:24
  reg [31:0] regs_MemOut;	// core/src/core.scala:65:19
  reg [31:0] regs_ALUOut;	// core/src/core.scala:65:19
  reg        regs_SLess;	// core/src/core.scala:65:19
  reg        regs_ULess;	// core/src/core.scala:65:19
  reg        regs_Zero;	// core/src/core.scala:65:19
  reg [3:0]  regs_branch;	// core/src/core.scala:65:19
  reg [1:0]  regs_wbSel;	// core/src/core.scala:65:19
  reg [1:0]  regs_wbDst;	// core/src/core.scala:65:19
  reg [31:0] regs_Imm;	// core/src/core.scala:65:19
  reg [4:0]  regs_rd;	// core/src/core.scala:65:19
  reg [31:0] regs_rj_data;	// core/src/core.scala:65:19
  reg [31:0] regs_pc;	// core/src/core.scala:65:19
  always @(posedge clock) begin	// core/src/core.scala:57:7
    if (reset)	// core/src/core.scala:57:7
      state <= 1'h0;	// core/src/core.scala:62:24
    else	// core/src/core.scala:57:7
      state <= io_prev_valid;	// core/src/core.scala:62:24
    if (io_prev_valid) begin	// core/src/core.scala:58:16
      regs_MemOut <= io_prev_bits_MemOut;	// core/src/core.scala:65:19
      regs_ALUOut <= io_prev_bits_ALUOut;	// core/src/core.scala:65:19
      regs_SLess <= io_prev_bits_SLess;	// core/src/core.scala:65:19
      regs_ULess <= io_prev_bits_ULess;	// core/src/core.scala:65:19
      regs_Zero <= io_prev_bits_Zero;	// core/src/core.scala:65:19
      regs_branch <= io_prev_bits_branch;	// core/src/core.scala:65:19
      regs_wbSel <= io_prev_bits_wbSel;	// core/src/core.scala:65:19
      regs_wbDst <= io_prev_bits_wbDst;	// core/src/core.scala:65:19
      regs_Imm <= io_prev_bits_Imm;	// core/src/core.scala:65:19
      regs_rd <= io_prev_bits_rd;	// core/src/core.scala:65:19
      regs_rj_data <= io_prev_bits_rj_data;	// core/src/core.scala:65:19
      regs_pc <= io_prev_bits_pc;	// core/src/core.scala:65:19
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/core.scala:57:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/core.scala:57:7
      `FIRRTL_BEFORE_INITIAL	// core/src/core.scala:57:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/core.scala:57:7
      automatic logic [31:0] _RANDOM[0:5];	// core/src/core.scala:57:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/core.scala:57:7
        `INIT_RANDOM_PROLOG_	// core/src/core.scala:57:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/core.scala:57:7
        for (logic [2:0] i = 3'h0; i < 3'h6; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;	// core/src/core.scala:57:7
        end	// core/src/core.scala:57:7
        state = _RANDOM[3'h0][0];	// core/src/core.scala:57:7, :62:24
        regs_MemOut = {_RANDOM[3'h0][31:1], _RANDOM[3'h1][0]};	// core/src/core.scala:57:7, :62:24, :65:19
        regs_ALUOut = {_RANDOM[3'h1][31:1], _RANDOM[3'h2][0]};	// core/src/core.scala:57:7, :65:19
        regs_SLess = _RANDOM[3'h2][1];	// core/src/core.scala:57:7, :65:19
        regs_ULess = _RANDOM[3'h2][2];	// core/src/core.scala:57:7, :65:19
        regs_Zero = _RANDOM[3'h2][3];	// core/src/core.scala:57:7, :65:19
        regs_branch = _RANDOM[3'h2][7:4];	// core/src/core.scala:57:7, :65:19
        regs_wbSel = _RANDOM[3'h2][9:8];	// core/src/core.scala:57:7, :65:19
        regs_wbDst = _RANDOM[3'h2][11:10];	// core/src/core.scala:57:7, :65:19
        regs_Imm = {_RANDOM[3'h2][31:12], _RANDOM[3'h3][11:0]};	// core/src/core.scala:57:7, :65:19
        regs_rd = _RANDOM[3'h3][16:12];	// core/src/core.scala:57:7, :65:19
        regs_rj_data = {_RANDOM[3'h3][31:17], _RANDOM[3'h4][16:0]};	// core/src/core.scala:57:7, :65:19
        regs_pc = {_RANDOM[3'h4][31:17], _RANDOM[3'h5][16:0]};	// core/src/core.scala:57:7, :65:19
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/core.scala:57:7
      `FIRRTL_AFTER_INITIAL	// core/src/core.scala:57:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_next_valid = state;	// core/src/core.scala:57:7, :62:24
  assign io_next_bits_MemOut = regs_MemOut;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_ALUOut = regs_ALUOut;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_SLess = regs_SLess;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_ULess = regs_ULess;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_Zero = regs_Zero;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_branch = regs_branch;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_wbSel = regs_wbSel;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_wbDst = regs_wbDst;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_Imm = regs_Imm;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_rd = regs_rd;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_rj_data = regs_rj_data;	// core/src/core.scala:57:7, :65:19
  assign io_next_bits_pc = regs_pc;	// core/src/core.scala:57:7, :65:19
endmodule

module branchContr(	// core/src/wbu.scala:47:7
  input  [31:0] io_pc,	// core/src/wbu.scala:48:16
                io_rj_data,	// core/src/wbu.scala:48:16
                io_offset,	// core/src/wbu.scala:48:16
  input  [3:0]  io_branchOp,	// core/src/wbu.scala:48:16
  input         io_SLess,	// core/src/wbu.scala:48:16
                io_ULess,	// core/src/wbu.scala:48:16
                io_Zero,	// core/src/wbu.scala:48:16
  output [31:0] io_nextPC	// core/src/wbu.scala:48:16
);

  assign io_nextPC =
    (io_branchOp == 4'h8 ? io_rj_data : io_pc)
    + (io_branchOp == 4'h8 | io_branchOp == 4'h7 | io_branchOp == 4'h6
         ? io_offset
         : io_branchOp == 4'h5
             ? (io_ULess ? 32'h4 : io_offset)
             : io_branchOp == 4'h4
                 ? (io_ULess ? io_offset : 32'h4)
                 : io_branchOp == 4'h3
                     ? (io_SLess ? 32'h4 : io_offset)
                     : io_branchOp == 4'h2
                         ? (io_SLess ? io_offset : 32'h4)
                         : io_branchOp == 4'h1
                             ? (io_Zero ? 32'h4 : io_offset)
                             : io_branchOp == 4'h0 & io_Zero ? io_offset : 32'h4);	// core/src/wbu.scala:47:7, :59:48, :63:46, :64:26, :65:26, :66:26, :67:26, :68:27, :69:27, :75:25
endmodule

module pc(	// core/src/wbu.scala:78:7
  input         clock,	// core/src/wbu.scala:78:7
                reset,	// core/src/wbu.scala:78:7
  input  [31:0] io_nextPC,	// core/src/wbu.scala:79:16
  input         io_PCInc,	// core/src/wbu.scala:79:16
  output [31:0] io_PC	// core/src/wbu.scala:79:16
);

  reg [31:0] pc;	// core/src/wbu.scala:84:21
  always @(posedge clock) begin	// core/src/wbu.scala:78:7
    if (reset)	// core/src/wbu.scala:78:7
      pc <= 32'h80000000;	// core/src/wbu.scala:84:21
    else if (io_PCInc)	// core/src/wbu.scala:79:16
      pc <= io_nextPC;	// core/src/wbu.scala:84:21
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/wbu.scala:78:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/wbu.scala:78:7
      `FIRRTL_BEFORE_INITIAL	// core/src/wbu.scala:78:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/wbu.scala:78:7
      automatic logic [31:0] _RANDOM[0:0];	// core/src/wbu.scala:78:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/wbu.scala:78:7
        `INIT_RANDOM_PROLOG_	// core/src/wbu.scala:78:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/wbu.scala:78:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// core/src/wbu.scala:78:7
        pc = _RANDOM[/*Zero width*/ 1'b0];	// core/src/wbu.scala:78:7, :84:21
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/wbu.scala:78:7
      `FIRRTL_AFTER_INITIAL	// core/src/wbu.scala:78:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_PC = pc;	// core/src/wbu.scala:78:7, :84:21
endmodule

module wbu(	// core/src/wbu.scala:5:7
  input         clock,	// core/src/wbu.scala:5:7
                reset,	// core/src/wbu.scala:5:7
                io_prev_valid,	// core/src/wbu.scala:6:16
  input  [31:0] io_prev_bits_MemOut,	// core/src/wbu.scala:6:16
                io_prev_bits_ALUOut,	// core/src/wbu.scala:6:16
  input         io_prev_bits_SLess,	// core/src/wbu.scala:6:16
                io_prev_bits_ULess,	// core/src/wbu.scala:6:16
                io_prev_bits_Zero,	// core/src/wbu.scala:6:16
  input  [3:0]  io_prev_bits_branch,	// core/src/wbu.scala:6:16
  input  [1:0]  io_prev_bits_wbSel,	// core/src/wbu.scala:6:16
                io_prev_bits_wbDst,	// core/src/wbu.scala:6:16
  input  [31:0] io_prev_bits_Imm,	// core/src/wbu.scala:6:16
  input  [4:0]  io_prev_bits_rd,	// core/src/wbu.scala:6:16
  input  [31:0] io_prev_bits_rj_data,	// core/src/wbu.scala:6:16
                io_prev_bits_pc,	// core/src/wbu.scala:6:16
  output        io_InstFetch,	// core/src/wbu.scala:6:16
  output [31:0] io_pc,	// core/src/wbu.scala:6:16
  output        io_wen,	// core/src/wbu.scala:6:16
  output [4:0]  io_waddr,	// core/src/wbu.scala:6:16
  output [31:0] io_wdata	// core/src/wbu.scala:6:16
);

  wire [31:0] _BranchContr_io_nextPC;	// core/src/wbu.scala:18:29
  branchContr BranchContr (	// core/src/wbu.scala:18:29
    .io_pc       (io_prev_bits_pc),
    .io_rj_data  (io_prev_bits_rj_data),
    .io_offset   (io_prev_bits_Imm),
    .io_branchOp (io_prev_bits_branch),
    .io_SLess    (io_prev_bits_SLess),
    .io_ULess    (io_prev_bits_ULess),
    .io_Zero     (io_prev_bits_Zero),
    .io_nextPC   (_BranchContr_io_nextPC)
  );
  pc PC (	// core/src/wbu.scala:27:20
    .clock     (clock),
    .reset     (reset),
    .io_nextPC (_BranchContr_io_nextPC),	// core/src/wbu.scala:18:29
    .io_PCInc  (io_prev_valid),
    .io_PC     (io_pc)
  );
  assign io_InstFetch = io_prev_valid;	// core/src/wbu.scala:5:7
  assign io_wen = io_prev_bits_wbSel != 2'h2 & io_prev_valid;	// core/src/wbu.scala:5:7, :34:{34,50}
  assign io_waddr =
    io_prev_bits_wbDst == 2'h1
      ? 5'h1
      : io_prev_bits_wbDst == 2'h0 ? io_prev_bits_rd : 5'h0;	// core/src/wbu.scala:5:7, :35:52
  assign io_wdata =
    io_prev_bits_wbSel == 2'h1
      ? io_prev_bits_MemOut
      : io_prev_bits_wbSel == 2'h0 ? io_prev_bits_ALUOut : 32'h0;	// core/src/wbu.scala:5:7, :35:52, :39:52
endmodule

module RRArbiter(	// src/main/scala/chisel3/util/Arbiter.scala:118:7
  input         clock,	// src/main/scala/chisel3/util/Arbiter.scala:118:7
                io_in_0_valid,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
  input  [31:0] io_in_0_bits_addr,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
  input         io_in_0_bits_ce_n,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
                io_in_0_bits_oe_n,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
                io_in_1_valid,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
                io_in_1_bits_data_wen,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
  input  [31:0] io_in_1_bits_data_in,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
                io_in_1_bits_addr,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
  input  [3:0]  io_in_1_bits_be_n,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
  input         io_in_1_bits_ce_n,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
                io_in_1_bits_oe_n,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
                io_in_1_bits_we_n,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
                io_out_ready,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
  output        io_out_valid,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
                io_out_bits_data_wen,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
  output [31:0] io_out_bits_data_in,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
                io_out_bits_addr,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
  output [3:0]  io_out_bits_be_n,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
  output        io_out_bits_ce_n,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
                io_out_bits_oe_n,	// src/main/scala/chisel3/util/Arbiter.scala:52:14
                io_out_bits_we_n	// src/main/scala/chisel3/util/Arbiter.scala:52:14
);

  wire io_chosen_choice;	// src/main/scala/chisel3/util/Arbiter.scala:92:26, :94:{24,33}
  wire io_out_valid_0 = io_chosen_choice ? io_in_1_valid : io_in_0_valid;	// src/main/scala/chisel3/util/Arbiter.scala:55:16, :92:26, :94:{24,33}
  reg  ctrl_validMask_grantMask_lastGrant;	// src/main/scala/chisel3/util/Arbiter.scala:81:33
  assign io_chosen_choice =
    io_in_1_valid & ~ctrl_validMask_grantMask_lastGrant | ~io_in_0_valid;	// src/main/scala/chisel3/util/Arbiter.scala:81:33, :82:49, :83:76, :90:41, :92:{26,35}, :94:{24,33}
  always @(posedge clock) begin	// src/main/scala/chisel3/util/Arbiter.scala:118:7
    if (io_out_ready & io_out_valid_0)	// src/main/scala/chisel3/util/Arbiter.scala:55:16, src/main/scala/chisel3/util/Decoupled.scala:51:35
      ctrl_validMask_grantMask_lastGrant <= io_chosen_choice;	// src/main/scala/chisel3/util/Arbiter.scala:81:33, :92:26, :94:{24,33}
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Arbiter.scala:118:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Arbiter.scala:118:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Arbiter.scala:118:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Arbiter.scala:118:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Arbiter.scala:118:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Arbiter.scala:118:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Arbiter.scala:118:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Arbiter.scala:118:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Arbiter.scala:118:7
        ctrl_validMask_grantMask_lastGrant = _RANDOM[/*Zero width*/ 1'b0][0];	// src/main/scala/chisel3/util/Arbiter.scala:81:33, :118:7
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Arbiter.scala:118:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Arbiter.scala:118:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_out_valid = io_out_valid_0;	// src/main/scala/chisel3/util/Arbiter.scala:55:16, :118:7
  assign io_out_bits_data_wen = io_chosen_choice & io_in_1_bits_data_wen;	// src/main/scala/chisel3/util/Arbiter.scala:55:16, :92:26, :94:{24,33}, :118:7
  assign io_out_bits_data_in = io_chosen_choice ? io_in_1_bits_data_in : 32'h0;	// src/main/scala/chisel3/util/Arbiter.scala:52:14, :55:16, :92:26, :94:{24,33}, :118:7
  assign io_out_bits_addr = io_chosen_choice ? io_in_1_bits_addr : io_in_0_bits_addr;	// src/main/scala/chisel3/util/Arbiter.scala:55:16, :92:26, :94:{24,33}, :118:7
  assign io_out_bits_be_n = io_chosen_choice ? io_in_1_bits_be_n : 4'h0;	// src/main/scala/chisel3/util/Arbiter.scala:52:14, :55:16, :92:26, :94:{24,33}, :118:7
  assign io_out_bits_ce_n = io_chosen_choice ? io_in_1_bits_ce_n : io_in_0_bits_ce_n;	// src/main/scala/chisel3/util/Arbiter.scala:55:16, :92:26, :94:{24,33}, :118:7
  assign io_out_bits_oe_n = io_chosen_choice ? io_in_1_bits_oe_n : io_in_0_bits_oe_n;	// src/main/scala/chisel3/util/Arbiter.scala:55:16, :92:26, :94:{24,33}, :118:7
  assign io_out_bits_we_n = ~io_chosen_choice | io_in_1_bits_we_n;	// src/main/scala/chisel3/util/Arbiter.scala:55:16, :92:26, :94:{24,33}, :118:7
endmodule

module abt(	// core/src/abt.scala:5:7
  input         clock,	// core/src/abt.scala:5:7
                io_in_DataIn_0_valid,	// core/src/abt.scala:6:16
  input  [31:0] io_in_DataIn_0_bits_addr,	// core/src/abt.scala:6:16
  input         io_in_DataIn_0_bits_ce_n,	// core/src/abt.scala:6:16
                io_in_DataIn_0_bits_oe_n,	// core/src/abt.scala:6:16
                io_in_DataIn_1_valid,	// core/src/abt.scala:6:16
                io_in_DataIn_1_bits_data_wen,	// core/src/abt.scala:6:16
  input  [31:0] io_in_DataIn_1_bits_data_in,	// core/src/abt.scala:6:16
                io_in_DataIn_1_bits_addr,	// core/src/abt.scala:6:16
  input  [3:0]  io_in_DataIn_1_bits_be_n,	// core/src/abt.scala:6:16
  input         io_in_DataIn_1_bits_ce_n,	// core/src/abt.scala:6:16
                io_in_DataIn_1_bits_oe_n,	// core/src/abt.scala:6:16
                io_in_DataIn_1_bits_we_n,	// core/src/abt.scala:6:16
  input  [31:0] io_in_BusIn_bits_data_out,	// core/src/abt.scala:6:16
  input         io_out_DataOut_ready,	// core/src/abt.scala:6:16
  output        io_out_DataOut_valid,	// core/src/abt.scala:6:16
                io_out_DataOut_bits_data_wen,	// core/src/abt.scala:6:16
  output [31:0] io_out_DataOut_bits_data_in,	// core/src/abt.scala:6:16
                io_out_DataOut_bits_addr,	// core/src/abt.scala:6:16
  output [3:0]  io_out_DataOut_bits_be_n,	// core/src/abt.scala:6:16
  output        io_out_DataOut_bits_ce_n,	// core/src/abt.scala:6:16
                io_out_DataOut_bits_oe_n,	// core/src/abt.scala:6:16
                io_out_DataOut_bits_we_n,	// core/src/abt.scala:6:16
  output [31:0] io_out_BusOut_0_bits_data_out,	// core/src/abt.scala:6:16
                io_out_BusOut_1_bits_data_out	// core/src/abt.scala:6:16
);

  RRArbiter arbiter (	// core/src/abt.scala:17:25
    .clock                 (clock),
    .io_in_0_valid         (io_in_DataIn_0_valid),
    .io_in_0_bits_addr     (io_in_DataIn_0_bits_addr),
    .io_in_0_bits_ce_n     (io_in_DataIn_0_bits_ce_n),
    .io_in_0_bits_oe_n     (io_in_DataIn_0_bits_oe_n),
    .io_in_1_valid         (io_in_DataIn_1_valid),
    .io_in_1_bits_data_wen (io_in_DataIn_1_bits_data_wen),
    .io_in_1_bits_data_in  (io_in_DataIn_1_bits_data_in),
    .io_in_1_bits_addr     (io_in_DataIn_1_bits_addr),
    .io_in_1_bits_be_n     (io_in_DataIn_1_bits_be_n),
    .io_in_1_bits_ce_n     (io_in_DataIn_1_bits_ce_n),
    .io_in_1_bits_oe_n     (io_in_DataIn_1_bits_oe_n),
    .io_in_1_bits_we_n     (io_in_DataIn_1_bits_we_n),
    .io_out_ready          (io_out_DataOut_ready),
    .io_out_valid          (io_out_DataOut_valid),
    .io_out_bits_data_wen  (io_out_DataOut_bits_data_wen),
    .io_out_bits_data_in   (io_out_DataOut_bits_data_in),
    .io_out_bits_addr      (io_out_DataOut_bits_addr),
    .io_out_bits_be_n      (io_out_DataOut_bits_be_n),
    .io_out_bits_ce_n      (io_out_DataOut_bits_ce_n),
    .io_out_bits_oe_n      (io_out_DataOut_bits_oe_n),
    .io_out_bits_we_n      (io_out_DataOut_bits_we_n)
  );
  assign io_out_BusOut_0_bits_data_out = io_in_BusIn_bits_data_out;	// core/src/abt.scala:5:7
  assign io_out_BusOut_1_bits_data_out = io_in_BusIn_bits_data_out;	// core/src/abt.scala:5:7
endmodule

module core(	// core/src/core.scala:5:7
  input         clock,	// core/src/core.scala:5:7
                reset,	// core/src/core.scala:5:7
  input  [31:0] io_bus_in_bits_data_out,	// core/src/core.scala:6:16
  input         io_bus_out_ready,	// core/src/core.scala:6:16
  output        io_bus_out_valid,	// core/src/core.scala:6:16
                io_bus_out_bits_data_wen,	// core/src/core.scala:6:16
  output [31:0] io_bus_out_bits_data_in,	// core/src/core.scala:6:16
                io_bus_out_bits_addr,	// core/src/core.scala:6:16
  output [3:0]  io_bus_out_bits_be_n,	// core/src/core.scala:6:16
  output        io_bus_out_bits_ce_n,	// core/src/core.scala:6:16
                io_bus_out_bits_oe_n,	// core/src/core.scala:6:16
                io_bus_out_bits_we_n	// core/src/core.scala:6:16
);

  wire [31:0] _abt_io_out_BusOut_0_bits_data_out;	// core/src/core.scala:31:21
  wire [31:0] _abt_io_out_BusOut_1_bits_data_out;	// core/src/core.scala:31:21
  wire        _wbu_io_InstFetch;	// core/src/core.scala:20:21
  wire [31:0] _wbu_io_pc;	// core/src/core.scala:20:21
  wire        _wbu_io_wen;	// core/src/core.scala:20:21
  wire [4:0]  _wbu_io_waddr;	// core/src/core.scala:20:21
  wire [31:0] _wbu_io_wdata;	// core/src/core.scala:20:21
  wire        _lsu_wbu_io_next_valid;	// core/src/core.scala:19:25
  wire [31:0] _lsu_wbu_io_next_bits_MemOut;	// core/src/core.scala:19:25
  wire [31:0] _lsu_wbu_io_next_bits_ALUOut;	// core/src/core.scala:19:25
  wire        _lsu_wbu_io_next_bits_SLess;	// core/src/core.scala:19:25
  wire        _lsu_wbu_io_next_bits_ULess;	// core/src/core.scala:19:25
  wire        _lsu_wbu_io_next_bits_Zero;	// core/src/core.scala:19:25
  wire [3:0]  _lsu_wbu_io_next_bits_branch;	// core/src/core.scala:19:25
  wire [1:0]  _lsu_wbu_io_next_bits_wbSel;	// core/src/core.scala:19:25
  wire [1:0]  _lsu_wbu_io_next_bits_wbDst;	// core/src/core.scala:19:25
  wire [31:0] _lsu_wbu_io_next_bits_Imm;	// core/src/core.scala:19:25
  wire [4:0]  _lsu_wbu_io_next_bits_rd;	// core/src/core.scala:19:25
  wire [31:0] _lsu_wbu_io_next_bits_rj_data;	// core/src/core.scala:19:25
  wire [31:0] _lsu_wbu_io_next_bits_pc;	// core/src/core.scala:19:25
  wire        _lsu_io_ext_out_valid;	// core/src/core.scala:18:21
  wire        _lsu_io_ext_out_bits_data_wen;	// core/src/core.scala:18:21
  wire [31:0] _lsu_io_ext_out_bits_data_in;	// core/src/core.scala:18:21
  wire [31:0] _lsu_io_ext_out_bits_addr;	// core/src/core.scala:18:21
  wire [3:0]  _lsu_io_ext_out_bits_be_n;	// core/src/core.scala:18:21
  wire        _lsu_io_ext_out_bits_ce_n;	// core/src/core.scala:18:21
  wire        _lsu_io_ext_out_bits_oe_n;	// core/src/core.scala:18:21
  wire        _lsu_io_ext_out_bits_we_n;	// core/src/core.scala:18:21
  wire        _lsu_io_next_valid;	// core/src/core.scala:18:21
  wire [31:0] _lsu_io_next_bits_MemOut;	// core/src/core.scala:18:21
  wire [31:0] _lsu_io_next_bits_ALUOut;	// core/src/core.scala:18:21
  wire        _lsu_io_next_bits_SLess;	// core/src/core.scala:18:21
  wire        _lsu_io_next_bits_ULess;	// core/src/core.scala:18:21
  wire        _lsu_io_next_bits_Zero;	// core/src/core.scala:18:21
  wire [3:0]  _lsu_io_next_bits_branch;	// core/src/core.scala:18:21
  wire [1:0]  _lsu_io_next_bits_wbSel;	// core/src/core.scala:18:21
  wire [1:0]  _lsu_io_next_bits_wbDst;	// core/src/core.scala:18:21
  wire [31:0] _lsu_io_next_bits_Imm;	// core/src/core.scala:18:21
  wire [4:0]  _lsu_io_next_bits_rd;	// core/src/core.scala:18:21
  wire [31:0] _lsu_io_next_bits_rj_data;	// core/src/core.scala:18:21
  wire [31:0] _lsu_io_next_bits_pc;	// core/src/core.scala:18:21
  wire        _exu2_lsu_io_next_valid;	// core/src/core.scala:17:26
  wire [31:0] _exu2_lsu_io_next_bits_ALUOut;	// core/src/core.scala:17:26
  wire        _exu2_lsu_io_next_bits_SLess;	// core/src/core.scala:17:26
  wire        _exu2_lsu_io_next_bits_ULess;	// core/src/core.scala:17:26
  wire        _exu2_lsu_io_next_bits_Zero;	// core/src/core.scala:17:26
  wire [3:0]  _exu2_lsu_io_next_bits_memOp;	// core/src/core.scala:17:26
  wire [3:0]  _exu2_lsu_io_next_bits_branch;	// core/src/core.scala:17:26
  wire [1:0]  _exu2_lsu_io_next_bits_wbSel;	// core/src/core.scala:17:26
  wire [1:0]  _exu2_lsu_io_next_bits_wbDst;	// core/src/core.scala:17:26
  wire [31:0] _exu2_lsu_io_next_bits_Imm;	// core/src/core.scala:17:26
  wire [4:0]  _exu2_lsu_io_next_bits_rd;	// core/src/core.scala:17:26
  wire [31:0] _exu2_lsu_io_next_bits_rd_data;	// core/src/core.scala:17:26
  wire [31:0] _exu2_lsu_io_next_bits_rj_data;	// core/src/core.scala:17:26
  wire [31:0] _exu2_lsu_io_next_bits_pc;	// core/src/core.scala:17:26
  wire        _exu2_io_next_valid;	// core/src/core.scala:16:22
  wire [31:0] _exu2_io_next_bits_ALUOut;	// core/src/core.scala:16:22
  wire        _exu2_io_next_bits_SLess;	// core/src/core.scala:16:22
  wire        _exu2_io_next_bits_ULess;	// core/src/core.scala:16:22
  wire        _exu2_io_next_bits_Zero;	// core/src/core.scala:16:22
  wire [3:0]  _exu2_io_next_bits_memOp;	// core/src/core.scala:16:22
  wire [3:0]  _exu2_io_next_bits_branch;	// core/src/core.scala:16:22
  wire [1:0]  _exu2_io_next_bits_wbSel;	// core/src/core.scala:16:22
  wire [1:0]  _exu2_io_next_bits_wbDst;	// core/src/core.scala:16:22
  wire [31:0] _exu2_io_next_bits_Imm;	// core/src/core.scala:16:22
  wire [4:0]  _exu2_io_next_bits_rd;	// core/src/core.scala:16:22
  wire [31:0] _exu2_io_next_bits_rd_data;	// core/src/core.scala:16:22
  wire [31:0] _exu2_io_next_bits_rj_data;	// core/src/core.scala:16:22
  wire [31:0] _exu2_io_next_bits_pc;	// core/src/core.scala:16:22
  wire        _exu1_exu2_io_next_valid;	// core/src/core.scala:15:27
  wire [3:0]  _exu1_exu2_io_next_bits_aluOp;	// core/src/core.scala:15:27
  wire [3:0]  _exu1_exu2_io_next_bits_memOp;	// core/src/core.scala:15:27
  wire [3:0]  _exu1_exu2_io_next_bits_branch;	// core/src/core.scala:15:27
  wire [1:0]  _exu1_exu2_io_next_bits_wbSel;	// core/src/core.scala:15:27
  wire [1:0]  _exu1_exu2_io_next_bits_wbDst;	// core/src/core.scala:15:27
  wire [31:0] _exu1_exu2_io_next_bits_Imm;	// core/src/core.scala:15:27
  wire [4:0]  _exu1_exu2_io_next_bits_rd;	// core/src/core.scala:15:27
  wire [31:0] _exu1_exu2_io_next_bits_rd_data;	// core/src/core.scala:15:27
  wire [31:0] _exu1_exu2_io_next_bits_rj_data;	// core/src/core.scala:15:27
  wire [31:0] _exu1_exu2_io_next_bits_pc;	// core/src/core.scala:15:27
  wire [31:0] _exu1_exu2_io_next_bits_ALUA;	// core/src/core.scala:15:27
  wire [31:0] _exu1_exu2_io_next_bits_ALUB;	// core/src/core.scala:15:27
  wire [63:0] _exu1_exu2_io_next_bits_MulA;	// core/src/core.scala:15:27
  wire [63:0] _exu1_exu2_io_next_bits_MulB;	// core/src/core.scala:15:27
  wire        _exu1_io_next_valid;	// core/src/core.scala:14:22
  wire [3:0]  _exu1_io_next_bits_aluOp;	// core/src/core.scala:14:22
  wire [3:0]  _exu1_io_next_bits_memOp;	// core/src/core.scala:14:22
  wire [3:0]  _exu1_io_next_bits_branch;	// core/src/core.scala:14:22
  wire [1:0]  _exu1_io_next_bits_wbSel;	// core/src/core.scala:14:22
  wire [1:0]  _exu1_io_next_bits_wbDst;	// core/src/core.scala:14:22
  wire [31:0] _exu1_io_next_bits_Imm;	// core/src/core.scala:14:22
  wire [4:0]  _exu1_io_next_bits_rd;	// core/src/core.scala:14:22
  wire [31:0] _exu1_io_next_bits_rd_data;	// core/src/core.scala:14:22
  wire [31:0] _exu1_io_next_bits_rj_data;	// core/src/core.scala:14:22
  wire [31:0] _exu1_io_next_bits_pc;	// core/src/core.scala:14:22
  wire [31:0] _exu1_io_next_bits_ALUA;	// core/src/core.scala:14:22
  wire [31:0] _exu1_io_next_bits_ALUB;	// core/src/core.scala:14:22
  wire [63:0] _exu1_io_next_bits_MulA;	// core/src/core.scala:14:22
  wire [63:0] _exu1_io_next_bits_MulB;	// core/src/core.scala:14:22
  wire        _idu_exu_io_next_valid;	// core/src/core.scala:13:25
  wire [3:0]  _idu_exu_io_next_bits_aluOp;	// core/src/core.scala:13:25
  wire [1:0]  _idu_exu_io_next_bits_aluAsrc;	// core/src/core.scala:13:25
  wire [2:0]  _idu_exu_io_next_bits_aluBsrc;	// core/src/core.scala:13:25
  wire [3:0]  _idu_exu_io_next_bits_memOp;	// core/src/core.scala:13:25
  wire [3:0]  _idu_exu_io_next_bits_branch;	// core/src/core.scala:13:25
  wire [1:0]  _idu_exu_io_next_bits_wbSel;	// core/src/core.scala:13:25
  wire [1:0]  _idu_exu_io_next_bits_wbDst;	// core/src/core.scala:13:25
  wire [31:0] _idu_exu_io_next_bits_Imm;	// core/src/core.scala:13:25
  wire [4:0]  _idu_exu_io_next_bits_rd;	// core/src/core.scala:13:25
  wire [31:0] _idu_exu_io_next_bits_rd_data;	// core/src/core.scala:13:25
  wire [31:0] _idu_exu_io_next_bits_rj_data;	// core/src/core.scala:13:25
  wire [31:0] _idu_exu_io_next_bits_rk_data;	// core/src/core.scala:13:25
  wire [31:0] _idu_exu_io_next_bits_pc;	// core/src/core.scala:13:25
  wire        _idu_io_next_valid;	// core/src/core.scala:12:21
  wire [3:0]  _idu_io_next_bits_aluOp;	// core/src/core.scala:12:21
  wire [1:0]  _idu_io_next_bits_aluAsrc;	// core/src/core.scala:12:21
  wire [2:0]  _idu_io_next_bits_aluBsrc;	// core/src/core.scala:12:21
  wire [3:0]  _idu_io_next_bits_memOp;	// core/src/core.scala:12:21
  wire [3:0]  _idu_io_next_bits_branch;	// core/src/core.scala:12:21
  wire [1:0]  _idu_io_next_bits_wbSel;	// core/src/core.scala:12:21
  wire [1:0]  _idu_io_next_bits_wbDst;	// core/src/core.scala:12:21
  wire [31:0] _idu_io_next_bits_Imm;	// core/src/core.scala:12:21
  wire [4:0]  _idu_io_next_bits_rd;	// core/src/core.scala:12:21
  wire [31:0] _idu_io_next_bits_rd_data;	// core/src/core.scala:12:21
  wire [31:0] _idu_io_next_bits_rj_data;	// core/src/core.scala:12:21
  wire [31:0] _idu_io_next_bits_rk_data;	// core/src/core.scala:12:21
  wire [31:0] _idu_io_next_bits_pc;	// core/src/core.scala:12:21
  wire        _ifu_idu_io_next_valid;	// core/src/core.scala:11:25
  wire [31:0] _ifu_idu_io_next_bits_pc;	// core/src/core.scala:11:25
  wire [31:0] _ifu_idu_io_next_bits_inst;	// core/src/core.scala:11:25
  wire        _ifu_io_base_out_valid;	// core/src/core.scala:10:21
  wire [31:0] _ifu_io_base_out_bits_addr;	// core/src/core.scala:10:21
  wire        _ifu_io_base_out_bits_ce_n;	// core/src/core.scala:10:21
  wire        _ifu_io_base_out_bits_oe_n;	// core/src/core.scala:10:21
  wire        _ifu_io_next_valid;	// core/src/core.scala:10:21
  wire [31:0] _ifu_io_next_bits_pc;	// core/src/core.scala:10:21
  wire [31:0] _ifu_io_next_bits_inst;	// core/src/core.scala:10:21
  reg  [1:0]  state;	// core/src/core.scala:22:24
  reg         IFetch;	// core/src/core.scala:28:25
  always @(posedge clock) begin	// core/src/core.scala:5:7
    if (reset) begin	// core/src/core.scala:5:7
      state <= 2'h0;	// core/src/core.scala:22:24
      IFetch <= 1'h0;	// core/src/core.scala:5:7, :28:25
    end
    else begin	// core/src/core.scala:5:7
      if (state == 2'h2 | state == 2'h1)	// core/src/core.scala:22:24, :23:36
        state <= 2'h2;	// core/src/core.scala:22:24, :23:36
      else	// core/src/core.scala:23:36
        state <= {1'h0, state == 2'h0};	// core/src/core.scala:5:7, :22:24, :23:36
      IFetch <= _wbu_io_InstFetch | state == 2'h1;	// core/src/core.scala:20:21, :22:24, :23:36, :28:25, :29:{36,45}
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// core/src/core.scala:5:7
    `ifdef FIRRTL_BEFORE_INITIAL	// core/src/core.scala:5:7
      `FIRRTL_BEFORE_INITIAL	// core/src/core.scala:5:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// core/src/core.scala:5:7
      automatic logic [31:0] _RANDOM[0:0];	// core/src/core.scala:5:7
      `ifdef INIT_RANDOM_PROLOG_	// core/src/core.scala:5:7
        `INIT_RANDOM_PROLOG_	// core/src/core.scala:5:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// core/src/core.scala:5:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// core/src/core.scala:5:7
        state = _RANDOM[/*Zero width*/ 1'b0][1:0];	// core/src/core.scala:5:7, :22:24
        IFetch = _RANDOM[/*Zero width*/ 1'b0][2];	// core/src/core.scala:5:7, :22:24, :28:25
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// core/src/core.scala:5:7
      `FIRRTL_AFTER_INITIAL	// core/src/core.scala:5:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ifu ifu (	// core/src/core.scala:10:21
    .io_base_in_bits_data_out (_abt_io_out_BusOut_0_bits_data_out),	// core/src/core.scala:31:21
    .io_base_out_valid        (_ifu_io_base_out_valid),
    .io_base_out_bits_addr    (_ifu_io_base_out_bits_addr),
    .io_base_out_bits_ce_n    (_ifu_io_base_out_bits_ce_n),
    .io_base_out_bits_oe_n    (_ifu_io_base_out_bits_oe_n),
    .io_InstFetch             (IFetch),	// core/src/core.scala:28:25
    .io_pc                    (_wbu_io_pc),	// core/src/core.scala:20:21
    .io_next_valid            (_ifu_io_next_valid),
    .io_next_bits_pc          (_ifu_io_next_bits_pc),
    .io_next_bits_inst        (_ifu_io_next_bits_inst)
  );
  buffer ifu_idu (	// core/src/core.scala:11:25
    .clock             (clock),
    .reset             (reset),
    .io_prev_valid     (_ifu_io_next_valid),	// core/src/core.scala:10:21
    .io_prev_bits_pc   (_ifu_io_next_bits_pc),	// core/src/core.scala:10:21
    .io_prev_bits_inst (_ifu_io_next_bits_inst),	// core/src/core.scala:10:21
    .io_next_valid     (_ifu_idu_io_next_valid),
    .io_next_bits_pc   (_ifu_idu_io_next_bits_pc),
    .io_next_bits_inst (_ifu_idu_io_next_bits_inst)
  );
  idu idu (	// core/src/core.scala:12:21
    .clock                (clock),
    .reset                (reset),
    .io_prev_valid        (_ifu_idu_io_next_valid),	// core/src/core.scala:11:25
    .io_prev_bits_pc      (_ifu_idu_io_next_bits_pc),	// core/src/core.scala:11:25
    .io_prev_bits_inst    (_ifu_idu_io_next_bits_inst),	// core/src/core.scala:11:25
    .io_next_valid        (_idu_io_next_valid),
    .io_next_bits_aluOp   (_idu_io_next_bits_aluOp),
    .io_next_bits_aluAsrc (_idu_io_next_bits_aluAsrc),
    .io_next_bits_aluBsrc (_idu_io_next_bits_aluBsrc),
    .io_next_bits_memOp   (_idu_io_next_bits_memOp),
    .io_next_bits_branch  (_idu_io_next_bits_branch),
    .io_next_bits_wbSel   (_idu_io_next_bits_wbSel),
    .io_next_bits_wbDst   (_idu_io_next_bits_wbDst),
    .io_next_bits_Imm     (_idu_io_next_bits_Imm),
    .io_next_bits_rd      (_idu_io_next_bits_rd),
    .io_next_bits_rd_data (_idu_io_next_bits_rd_data),
    .io_next_bits_rj_data (_idu_io_next_bits_rj_data),
    .io_next_bits_rk_data (_idu_io_next_bits_rk_data),
    .io_next_bits_pc      (_idu_io_next_bits_pc),
    .io_wen               (_wbu_io_wen),	// core/src/core.scala:20:21
    .io_waddr             (_wbu_io_waddr),	// core/src/core.scala:20:21
    .io_wdata             (_wbu_io_wdata)	// core/src/core.scala:20:21
  );
  buffer_1 idu_exu (	// core/src/core.scala:13:25
    .clock                (clock),
    .reset                (reset),
    .io_prev_valid        (_idu_io_next_valid),	// core/src/core.scala:12:21
    .io_prev_bits_aluOp   (_idu_io_next_bits_aluOp),	// core/src/core.scala:12:21
    .io_prev_bits_aluAsrc (_idu_io_next_bits_aluAsrc),	// core/src/core.scala:12:21
    .io_prev_bits_aluBsrc (_idu_io_next_bits_aluBsrc),	// core/src/core.scala:12:21
    .io_prev_bits_memOp   (_idu_io_next_bits_memOp),	// core/src/core.scala:12:21
    .io_prev_bits_branch  (_idu_io_next_bits_branch),	// core/src/core.scala:12:21
    .io_prev_bits_wbSel   (_idu_io_next_bits_wbSel),	// core/src/core.scala:12:21
    .io_prev_bits_wbDst   (_idu_io_next_bits_wbDst),	// core/src/core.scala:12:21
    .io_prev_bits_Imm     (_idu_io_next_bits_Imm),	// core/src/core.scala:12:21
    .io_prev_bits_rd      (_idu_io_next_bits_rd),	// core/src/core.scala:12:21
    .io_prev_bits_rd_data (_idu_io_next_bits_rd_data),	// core/src/core.scala:12:21
    .io_prev_bits_rj_data (_idu_io_next_bits_rj_data),	// core/src/core.scala:12:21
    .io_prev_bits_rk_data (_idu_io_next_bits_rk_data),	// core/src/core.scala:12:21
    .io_prev_bits_pc      (_idu_io_next_bits_pc),	// core/src/core.scala:12:21
    .io_next_valid        (_idu_exu_io_next_valid),
    .io_next_bits_aluOp   (_idu_exu_io_next_bits_aluOp),
    .io_next_bits_aluAsrc (_idu_exu_io_next_bits_aluAsrc),
    .io_next_bits_aluBsrc (_idu_exu_io_next_bits_aluBsrc),
    .io_next_bits_memOp   (_idu_exu_io_next_bits_memOp),
    .io_next_bits_branch  (_idu_exu_io_next_bits_branch),
    .io_next_bits_wbSel   (_idu_exu_io_next_bits_wbSel),
    .io_next_bits_wbDst   (_idu_exu_io_next_bits_wbDst),
    .io_next_bits_Imm     (_idu_exu_io_next_bits_Imm),
    .io_next_bits_rd      (_idu_exu_io_next_bits_rd),
    .io_next_bits_rd_data (_idu_exu_io_next_bits_rd_data),
    .io_next_bits_rj_data (_idu_exu_io_next_bits_rj_data),
    .io_next_bits_rk_data (_idu_exu_io_next_bits_rk_data),
    .io_next_bits_pc      (_idu_exu_io_next_bits_pc)
  );
  exu1 exu1 (	// core/src/core.scala:14:22
    .io_prev_valid        (_idu_exu_io_next_valid),	// core/src/core.scala:13:25
    .io_prev_bits_aluOp   (_idu_exu_io_next_bits_aluOp),	// core/src/core.scala:13:25
    .io_prev_bits_aluAsrc (_idu_exu_io_next_bits_aluAsrc),	// core/src/core.scala:13:25
    .io_prev_bits_aluBsrc (_idu_exu_io_next_bits_aluBsrc),	// core/src/core.scala:13:25
    .io_prev_bits_memOp   (_idu_exu_io_next_bits_memOp),	// core/src/core.scala:13:25
    .io_prev_bits_branch  (_idu_exu_io_next_bits_branch),	// core/src/core.scala:13:25
    .io_prev_bits_wbSel   (_idu_exu_io_next_bits_wbSel),	// core/src/core.scala:13:25
    .io_prev_bits_wbDst   (_idu_exu_io_next_bits_wbDst),	// core/src/core.scala:13:25
    .io_prev_bits_Imm     (_idu_exu_io_next_bits_Imm),	// core/src/core.scala:13:25
    .io_prev_bits_rd      (_idu_exu_io_next_bits_rd),	// core/src/core.scala:13:25
    .io_prev_bits_rd_data (_idu_exu_io_next_bits_rd_data),	// core/src/core.scala:13:25
    .io_prev_bits_rj_data (_idu_exu_io_next_bits_rj_data),	// core/src/core.scala:13:25
    .io_prev_bits_rk_data (_idu_exu_io_next_bits_rk_data),	// core/src/core.scala:13:25
    .io_prev_bits_pc      (_idu_exu_io_next_bits_pc),	// core/src/core.scala:13:25
    .io_next_valid        (_exu1_io_next_valid),
    .io_next_bits_aluOp   (_exu1_io_next_bits_aluOp),
    .io_next_bits_memOp   (_exu1_io_next_bits_memOp),
    .io_next_bits_branch  (_exu1_io_next_bits_branch),
    .io_next_bits_wbSel   (_exu1_io_next_bits_wbSel),
    .io_next_bits_wbDst   (_exu1_io_next_bits_wbDst),
    .io_next_bits_Imm     (_exu1_io_next_bits_Imm),
    .io_next_bits_rd      (_exu1_io_next_bits_rd),
    .io_next_bits_rd_data (_exu1_io_next_bits_rd_data),
    .io_next_bits_rj_data (_exu1_io_next_bits_rj_data),
    .io_next_bits_pc      (_exu1_io_next_bits_pc),
    .io_next_bits_ALUA    (_exu1_io_next_bits_ALUA),
    .io_next_bits_ALUB    (_exu1_io_next_bits_ALUB),
    .io_next_bits_MulA    (_exu1_io_next_bits_MulA),
    .io_next_bits_MulB    (_exu1_io_next_bits_MulB)
  );
  buffer_2 exu1_exu2 (	// core/src/core.scala:15:27
    .clock                (clock),
    .reset                (reset),
    .io_prev_valid        (_exu1_io_next_valid),	// core/src/core.scala:14:22
    .io_prev_bits_aluOp   (_exu1_io_next_bits_aluOp),	// core/src/core.scala:14:22
    .io_prev_bits_memOp   (_exu1_io_next_bits_memOp),	// core/src/core.scala:14:22
    .io_prev_bits_branch  (_exu1_io_next_bits_branch),	// core/src/core.scala:14:22
    .io_prev_bits_wbSel   (_exu1_io_next_bits_wbSel),	// core/src/core.scala:14:22
    .io_prev_bits_wbDst   (_exu1_io_next_bits_wbDst),	// core/src/core.scala:14:22
    .io_prev_bits_Imm     (_exu1_io_next_bits_Imm),	// core/src/core.scala:14:22
    .io_prev_bits_rd      (_exu1_io_next_bits_rd),	// core/src/core.scala:14:22
    .io_prev_bits_rd_data (_exu1_io_next_bits_rd_data),	// core/src/core.scala:14:22
    .io_prev_bits_rj_data (_exu1_io_next_bits_rj_data),	// core/src/core.scala:14:22
    .io_prev_bits_pc      (_exu1_io_next_bits_pc),	// core/src/core.scala:14:22
    .io_prev_bits_ALUA    (_exu1_io_next_bits_ALUA),	// core/src/core.scala:14:22
    .io_prev_bits_ALUB    (_exu1_io_next_bits_ALUB),	// core/src/core.scala:14:22
    .io_prev_bits_MulA    (_exu1_io_next_bits_MulA),	// core/src/core.scala:14:22
    .io_prev_bits_MulB    (_exu1_io_next_bits_MulB),	// core/src/core.scala:14:22
    .io_next_valid        (_exu1_exu2_io_next_valid),
    .io_next_bits_aluOp   (_exu1_exu2_io_next_bits_aluOp),
    .io_next_bits_memOp   (_exu1_exu2_io_next_bits_memOp),
    .io_next_bits_branch  (_exu1_exu2_io_next_bits_branch),
    .io_next_bits_wbSel   (_exu1_exu2_io_next_bits_wbSel),
    .io_next_bits_wbDst   (_exu1_exu2_io_next_bits_wbDst),
    .io_next_bits_Imm     (_exu1_exu2_io_next_bits_Imm),
    .io_next_bits_rd      (_exu1_exu2_io_next_bits_rd),
    .io_next_bits_rd_data (_exu1_exu2_io_next_bits_rd_data),
    .io_next_bits_rj_data (_exu1_exu2_io_next_bits_rj_data),
    .io_next_bits_pc      (_exu1_exu2_io_next_bits_pc),
    .io_next_bits_ALUA    (_exu1_exu2_io_next_bits_ALUA),
    .io_next_bits_ALUB    (_exu1_exu2_io_next_bits_ALUB),
    .io_next_bits_MulA    (_exu1_exu2_io_next_bits_MulA),
    .io_next_bits_MulB    (_exu1_exu2_io_next_bits_MulB)
  );
  exu2 exu2 (	// core/src/core.scala:16:22
    .io_prev_valid        (_exu1_exu2_io_next_valid),	// core/src/core.scala:15:27
    .io_prev_bits_aluOp   (_exu1_exu2_io_next_bits_aluOp),	// core/src/core.scala:15:27
    .io_prev_bits_memOp   (_exu1_exu2_io_next_bits_memOp),	// core/src/core.scala:15:27
    .io_prev_bits_branch  (_exu1_exu2_io_next_bits_branch),	// core/src/core.scala:15:27
    .io_prev_bits_wbSel   (_exu1_exu2_io_next_bits_wbSel),	// core/src/core.scala:15:27
    .io_prev_bits_wbDst   (_exu1_exu2_io_next_bits_wbDst),	// core/src/core.scala:15:27
    .io_prev_bits_Imm     (_exu1_exu2_io_next_bits_Imm),	// core/src/core.scala:15:27
    .io_prev_bits_rd      (_exu1_exu2_io_next_bits_rd),	// core/src/core.scala:15:27
    .io_prev_bits_rd_data (_exu1_exu2_io_next_bits_rd_data),	// core/src/core.scala:15:27
    .io_prev_bits_rj_data (_exu1_exu2_io_next_bits_rj_data),	// core/src/core.scala:15:27
    .io_prev_bits_pc      (_exu1_exu2_io_next_bits_pc),	// core/src/core.scala:15:27
    .io_prev_bits_ALUA    (_exu1_exu2_io_next_bits_ALUA),	// core/src/core.scala:15:27
    .io_prev_bits_ALUB    (_exu1_exu2_io_next_bits_ALUB),	// core/src/core.scala:15:27
    .io_prev_bits_MulA    (_exu1_exu2_io_next_bits_MulA),	// core/src/core.scala:15:27
    .io_prev_bits_MulB    (_exu1_exu2_io_next_bits_MulB),	// core/src/core.scala:15:27
    .io_next_valid        (_exu2_io_next_valid),
    .io_next_bits_ALUOut  (_exu2_io_next_bits_ALUOut),
    .io_next_bits_SLess   (_exu2_io_next_bits_SLess),
    .io_next_bits_ULess   (_exu2_io_next_bits_ULess),
    .io_next_bits_Zero    (_exu2_io_next_bits_Zero),
    .io_next_bits_memOp   (_exu2_io_next_bits_memOp),
    .io_next_bits_branch  (_exu2_io_next_bits_branch),
    .io_next_bits_wbSel   (_exu2_io_next_bits_wbSel),
    .io_next_bits_wbDst   (_exu2_io_next_bits_wbDst),
    .io_next_bits_Imm     (_exu2_io_next_bits_Imm),
    .io_next_bits_rd      (_exu2_io_next_bits_rd),
    .io_next_bits_rd_data (_exu2_io_next_bits_rd_data),
    .io_next_bits_rj_data (_exu2_io_next_bits_rj_data),
    .io_next_bits_pc      (_exu2_io_next_bits_pc)
  );
  buffer_3 exu2_lsu (	// core/src/core.scala:17:26
    .clock                (clock),
    .reset                (reset),
    .io_prev_valid        (_exu2_io_next_valid),	// core/src/core.scala:16:22
    .io_prev_bits_ALUOut  (_exu2_io_next_bits_ALUOut),	// core/src/core.scala:16:22
    .io_prev_bits_SLess   (_exu2_io_next_bits_SLess),	// core/src/core.scala:16:22
    .io_prev_bits_ULess   (_exu2_io_next_bits_ULess),	// core/src/core.scala:16:22
    .io_prev_bits_Zero    (_exu2_io_next_bits_Zero),	// core/src/core.scala:16:22
    .io_prev_bits_memOp   (_exu2_io_next_bits_memOp),	// core/src/core.scala:16:22
    .io_prev_bits_branch  (_exu2_io_next_bits_branch),	// core/src/core.scala:16:22
    .io_prev_bits_wbSel   (_exu2_io_next_bits_wbSel),	// core/src/core.scala:16:22
    .io_prev_bits_wbDst   (_exu2_io_next_bits_wbDst),	// core/src/core.scala:16:22
    .io_prev_bits_Imm     (_exu2_io_next_bits_Imm),	// core/src/core.scala:16:22
    .io_prev_bits_rd      (_exu2_io_next_bits_rd),	// core/src/core.scala:16:22
    .io_prev_bits_rd_data (_exu2_io_next_bits_rd_data),	// core/src/core.scala:16:22
    .io_prev_bits_rj_data (_exu2_io_next_bits_rj_data),	// core/src/core.scala:16:22
    .io_prev_bits_pc      (_exu2_io_next_bits_pc),	// core/src/core.scala:16:22
    .io_next_valid        (_exu2_lsu_io_next_valid),
    .io_next_bits_ALUOut  (_exu2_lsu_io_next_bits_ALUOut),
    .io_next_bits_SLess   (_exu2_lsu_io_next_bits_SLess),
    .io_next_bits_ULess   (_exu2_lsu_io_next_bits_ULess),
    .io_next_bits_Zero    (_exu2_lsu_io_next_bits_Zero),
    .io_next_bits_memOp   (_exu2_lsu_io_next_bits_memOp),
    .io_next_bits_branch  (_exu2_lsu_io_next_bits_branch),
    .io_next_bits_wbSel   (_exu2_lsu_io_next_bits_wbSel),
    .io_next_bits_wbDst   (_exu2_lsu_io_next_bits_wbDst),
    .io_next_bits_Imm     (_exu2_lsu_io_next_bits_Imm),
    .io_next_bits_rd      (_exu2_lsu_io_next_bits_rd),
    .io_next_bits_rd_data (_exu2_lsu_io_next_bits_rd_data),
    .io_next_bits_rj_data (_exu2_lsu_io_next_bits_rj_data),
    .io_next_bits_pc      (_exu2_lsu_io_next_bits_pc)
  );
  lsu lsu (	// core/src/core.scala:18:21
    .io_ext_in_bits_data_out  (_abt_io_out_BusOut_1_bits_data_out),	// core/src/core.scala:31:21
    .io_ext_out_valid         (_lsu_io_ext_out_valid),
    .io_ext_out_bits_data_wen (_lsu_io_ext_out_bits_data_wen),
    .io_ext_out_bits_data_in  (_lsu_io_ext_out_bits_data_in),
    .io_ext_out_bits_addr     (_lsu_io_ext_out_bits_addr),
    .io_ext_out_bits_be_n     (_lsu_io_ext_out_bits_be_n),
    .io_ext_out_bits_ce_n     (_lsu_io_ext_out_bits_ce_n),
    .io_ext_out_bits_oe_n     (_lsu_io_ext_out_bits_oe_n),
    .io_ext_out_bits_we_n     (_lsu_io_ext_out_bits_we_n),
    .io_prev_valid            (_exu2_lsu_io_next_valid),	// core/src/core.scala:17:26
    .io_prev_bits_ALUOut      (_exu2_lsu_io_next_bits_ALUOut),	// core/src/core.scala:17:26
    .io_prev_bits_SLess       (_exu2_lsu_io_next_bits_SLess),	// core/src/core.scala:17:26
    .io_prev_bits_ULess       (_exu2_lsu_io_next_bits_ULess),	// core/src/core.scala:17:26
    .io_prev_bits_Zero        (_exu2_lsu_io_next_bits_Zero),	// core/src/core.scala:17:26
    .io_prev_bits_memOp       (_exu2_lsu_io_next_bits_memOp),	// core/src/core.scala:17:26
    .io_prev_bits_branch      (_exu2_lsu_io_next_bits_branch),	// core/src/core.scala:17:26
    .io_prev_bits_wbSel       (_exu2_lsu_io_next_bits_wbSel),	// core/src/core.scala:17:26
    .io_prev_bits_wbDst       (_exu2_lsu_io_next_bits_wbDst),	// core/src/core.scala:17:26
    .io_prev_bits_Imm         (_exu2_lsu_io_next_bits_Imm),	// core/src/core.scala:17:26
    .io_prev_bits_rd          (_exu2_lsu_io_next_bits_rd),	// core/src/core.scala:17:26
    .io_prev_bits_rd_data     (_exu2_lsu_io_next_bits_rd_data),	// core/src/core.scala:17:26
    .io_prev_bits_rj_data     (_exu2_lsu_io_next_bits_rj_data),	// core/src/core.scala:17:26
    .io_prev_bits_pc          (_exu2_lsu_io_next_bits_pc),	// core/src/core.scala:17:26
    .io_next_valid            (_lsu_io_next_valid),
    .io_next_bits_MemOut      (_lsu_io_next_bits_MemOut),
    .io_next_bits_ALUOut      (_lsu_io_next_bits_ALUOut),
    .io_next_bits_SLess       (_lsu_io_next_bits_SLess),
    .io_next_bits_ULess       (_lsu_io_next_bits_ULess),
    .io_next_bits_Zero        (_lsu_io_next_bits_Zero),
    .io_next_bits_branch      (_lsu_io_next_bits_branch),
    .io_next_bits_wbSel       (_lsu_io_next_bits_wbSel),
    .io_next_bits_wbDst       (_lsu_io_next_bits_wbDst),
    .io_next_bits_Imm         (_lsu_io_next_bits_Imm),
    .io_next_bits_rd          (_lsu_io_next_bits_rd),
    .io_next_bits_rj_data     (_lsu_io_next_bits_rj_data),
    .io_next_bits_pc          (_lsu_io_next_bits_pc)
  );
  buffer_4 lsu_wbu (	// core/src/core.scala:19:25
    .clock                (clock),
    .reset                (reset),
    .io_prev_valid        (_lsu_io_next_valid),	// core/src/core.scala:18:21
    .io_prev_bits_MemOut  (_lsu_io_next_bits_MemOut),	// core/src/core.scala:18:21
    .io_prev_bits_ALUOut  (_lsu_io_next_bits_ALUOut),	// core/src/core.scala:18:21
    .io_prev_bits_SLess   (_lsu_io_next_bits_SLess),	// core/src/core.scala:18:21
    .io_prev_bits_ULess   (_lsu_io_next_bits_ULess),	// core/src/core.scala:18:21
    .io_prev_bits_Zero    (_lsu_io_next_bits_Zero),	// core/src/core.scala:18:21
    .io_prev_bits_branch  (_lsu_io_next_bits_branch),	// core/src/core.scala:18:21
    .io_prev_bits_wbSel   (_lsu_io_next_bits_wbSel),	// core/src/core.scala:18:21
    .io_prev_bits_wbDst   (_lsu_io_next_bits_wbDst),	// core/src/core.scala:18:21
    .io_prev_bits_Imm     (_lsu_io_next_bits_Imm),	// core/src/core.scala:18:21
    .io_prev_bits_rd      (_lsu_io_next_bits_rd),	// core/src/core.scala:18:21
    .io_prev_bits_rj_data (_lsu_io_next_bits_rj_data),	// core/src/core.scala:18:21
    .io_prev_bits_pc      (_lsu_io_next_bits_pc),	// core/src/core.scala:18:21
    .io_next_valid        (_lsu_wbu_io_next_valid),
    .io_next_bits_MemOut  (_lsu_wbu_io_next_bits_MemOut),
    .io_next_bits_ALUOut  (_lsu_wbu_io_next_bits_ALUOut),
    .io_next_bits_SLess   (_lsu_wbu_io_next_bits_SLess),
    .io_next_bits_ULess   (_lsu_wbu_io_next_bits_ULess),
    .io_next_bits_Zero    (_lsu_wbu_io_next_bits_Zero),
    .io_next_bits_branch  (_lsu_wbu_io_next_bits_branch),
    .io_next_bits_wbSel   (_lsu_wbu_io_next_bits_wbSel),
    .io_next_bits_wbDst   (_lsu_wbu_io_next_bits_wbDst),
    .io_next_bits_Imm     (_lsu_wbu_io_next_bits_Imm),
    .io_next_bits_rd      (_lsu_wbu_io_next_bits_rd),
    .io_next_bits_rj_data (_lsu_wbu_io_next_bits_rj_data),
    .io_next_bits_pc      (_lsu_wbu_io_next_bits_pc)
  );
  wbu wbu (	// core/src/core.scala:20:21
    .clock                (clock),
    .reset                (reset),
    .io_prev_valid        (_lsu_wbu_io_next_valid),	// core/src/core.scala:19:25
    .io_prev_bits_MemOut  (_lsu_wbu_io_next_bits_MemOut),	// core/src/core.scala:19:25
    .io_prev_bits_ALUOut  (_lsu_wbu_io_next_bits_ALUOut),	// core/src/core.scala:19:25
    .io_prev_bits_SLess   (_lsu_wbu_io_next_bits_SLess),	// core/src/core.scala:19:25
    .io_prev_bits_ULess   (_lsu_wbu_io_next_bits_ULess),	// core/src/core.scala:19:25
    .io_prev_bits_Zero    (_lsu_wbu_io_next_bits_Zero),	// core/src/core.scala:19:25
    .io_prev_bits_branch  (_lsu_wbu_io_next_bits_branch),	// core/src/core.scala:19:25
    .io_prev_bits_wbSel   (_lsu_wbu_io_next_bits_wbSel),	// core/src/core.scala:19:25
    .io_prev_bits_wbDst   (_lsu_wbu_io_next_bits_wbDst),	// core/src/core.scala:19:25
    .io_prev_bits_Imm     (_lsu_wbu_io_next_bits_Imm),	// core/src/core.scala:19:25
    .io_prev_bits_rd      (_lsu_wbu_io_next_bits_rd),	// core/src/core.scala:19:25
    .io_prev_bits_rj_data (_lsu_wbu_io_next_bits_rj_data),	// core/src/core.scala:19:25
    .io_prev_bits_pc      (_lsu_wbu_io_next_bits_pc),	// core/src/core.scala:19:25
    .io_InstFetch         (_wbu_io_InstFetch),
    .io_pc                (_wbu_io_pc),
    .io_wen               (_wbu_io_wen),
    .io_waddr             (_wbu_io_waddr),
    .io_wdata             (_wbu_io_wdata)
  );
  abt abt (	// core/src/core.scala:31:21
    .clock                         (clock),
    .io_in_DataIn_0_valid          (_ifu_io_base_out_valid),	// core/src/core.scala:10:21
    .io_in_DataIn_0_bits_addr      (_ifu_io_base_out_bits_addr),	// core/src/core.scala:10:21
    .io_in_DataIn_0_bits_ce_n      (_ifu_io_base_out_bits_ce_n),	// core/src/core.scala:10:21
    .io_in_DataIn_0_bits_oe_n      (_ifu_io_base_out_bits_oe_n),	// core/src/core.scala:10:21
    .io_in_DataIn_1_valid          (_lsu_io_ext_out_valid),	// core/src/core.scala:18:21
    .io_in_DataIn_1_bits_data_wen  (_lsu_io_ext_out_bits_data_wen),	// core/src/core.scala:18:21
    .io_in_DataIn_1_bits_data_in   (_lsu_io_ext_out_bits_data_in),	// core/src/core.scala:18:21
    .io_in_DataIn_1_bits_addr      (_lsu_io_ext_out_bits_addr),	// core/src/core.scala:18:21
    .io_in_DataIn_1_bits_be_n      (_lsu_io_ext_out_bits_be_n),	// core/src/core.scala:18:21
    .io_in_DataIn_1_bits_ce_n      (_lsu_io_ext_out_bits_ce_n),	// core/src/core.scala:18:21
    .io_in_DataIn_1_bits_oe_n      (_lsu_io_ext_out_bits_oe_n),	// core/src/core.scala:18:21
    .io_in_DataIn_1_bits_we_n      (_lsu_io_ext_out_bits_we_n),	// core/src/core.scala:18:21
    .io_in_BusIn_bits_data_out     (io_bus_in_bits_data_out),
    .io_out_DataOut_ready          (io_bus_out_ready),
    .io_out_DataOut_valid          (io_bus_out_valid),
    .io_out_DataOut_bits_data_wen  (io_bus_out_bits_data_wen),
    .io_out_DataOut_bits_data_in   (io_bus_out_bits_data_in),
    .io_out_DataOut_bits_addr      (io_bus_out_bits_addr),
    .io_out_DataOut_bits_be_n      (io_bus_out_bits_be_n),
    .io_out_DataOut_bits_ce_n      (io_bus_out_bits_ce_n),
    .io_out_DataOut_bits_oe_n      (io_bus_out_bits_oe_n),
    .io_out_DataOut_bits_we_n      (io_bus_out_bits_we_n),
    .io_out_BusOut_0_bits_data_out (_abt_io_out_BusOut_0_bits_data_out),
    .io_out_BusOut_1_bits_data_out (_abt_io_out_BusOut_1_bits_data_out)
  );
endmodule

module xbar(	// core/src/xbar.scala:5:7
  output        io_in_DataIn_ready,	// core/src/xbar.scala:6:16
  input         io_in_DataIn_valid,	// core/src/xbar.scala:6:16
                io_in_DataIn_bits_data_wen,	// core/src/xbar.scala:6:16
  input  [31:0] io_in_DataIn_bits_data_in,	// core/src/xbar.scala:6:16
                io_in_DataIn_bits_addr,	// core/src/xbar.scala:6:16
  input  [3:0]  io_in_DataIn_bits_be_n,	// core/src/xbar.scala:6:16
  input         io_in_DataIn_bits_ce_n,	// core/src/xbar.scala:6:16
                io_in_DataIn_bits_oe_n,	// core/src/xbar.scala:6:16
                io_in_DataIn_bits_we_n,	// core/src/xbar.scala:6:16
  input  [31:0] io_in_BusIn_0_bits_data_out,	// core/src/xbar.scala:6:16
                io_in_BusIn_1_bits_data_out,	// core/src/xbar.scala:6:16
                io_in_BusIn_2_bits_data_out,	// core/src/xbar.scala:6:16
  output        io_out_DataOut_0_valid,	// core/src/xbar.scala:6:16
                io_out_DataOut_0_bits_data_wen,	// core/src/xbar.scala:6:16
  output [31:0] io_out_DataOut_0_bits_data_in,	// core/src/xbar.scala:6:16
                io_out_DataOut_0_bits_addr,	// core/src/xbar.scala:6:16
  output [3:0]  io_out_DataOut_0_bits_be_n,	// core/src/xbar.scala:6:16
  output        io_out_DataOut_0_bits_ce_n,	// core/src/xbar.scala:6:16
                io_out_DataOut_0_bits_oe_n,	// core/src/xbar.scala:6:16
                io_out_DataOut_0_bits_we_n,	// core/src/xbar.scala:6:16
                io_out_DataOut_1_valid,	// core/src/xbar.scala:6:16
                io_out_DataOut_1_bits_data_wen,	// core/src/xbar.scala:6:16
  output [31:0] io_out_DataOut_1_bits_data_in,	// core/src/xbar.scala:6:16
                io_out_DataOut_1_bits_addr,	// core/src/xbar.scala:6:16
  output [3:0]  io_out_DataOut_1_bits_be_n,	// core/src/xbar.scala:6:16
  output        io_out_DataOut_1_bits_ce_n,	// core/src/xbar.scala:6:16
                io_out_DataOut_1_bits_oe_n,	// core/src/xbar.scala:6:16
                io_out_DataOut_1_bits_we_n,	// core/src/xbar.scala:6:16
                io_out_DataOut_2_valid,	// core/src/xbar.scala:6:16
  output [31:0] io_out_DataOut_2_bits_data_in,	// core/src/xbar.scala:6:16
                io_out_DataOut_2_bits_addr,	// core/src/xbar.scala:6:16
  output        io_out_DataOut_2_bits_ce_n,	// core/src/xbar.scala:6:16
                io_out_DataOut_2_bits_oe_n,	// core/src/xbar.scala:6:16
                io_out_DataOut_2_bits_we_n,	// core/src/xbar.scala:6:16
  output [31:0] io_out_BusOut_bits_data_out	// core/src/xbar.scala:6:16
);

  wire _GEN = io_in_DataIn_bits_addr[31] & io_in_DataIn_bits_addr < 32'h80400000;	// core/src/bundles.scala:8:{14,23,31}
  wire _GEN_0 =
    io_in_DataIn_bits_addr > 32'h803FFFFF & io_in_DataIn_bits_addr < 32'h80800000;	// core/src/bundles.scala:8:{14,23,31}
  wire _GEN_1 =
    io_in_DataIn_bits_addr > 32'hBFD003F7 & io_in_DataIn_bits_addr < 32'hBFD003FD;	// core/src/bundles.scala:8:{14,23,31}
  assign io_in_DataIn_ready = _GEN_1 | _GEN_0 | _GEN;	// core/src/bundles.scala:8:23, core/src/xbar.scala:5:7, :26:56, :27:31
  assign io_out_DataOut_0_valid = _GEN & io_in_DataIn_valid;	// core/src/bundles.scala:8:23, core/src/xbar.scala:5:7, :17:33, :26:56, :27:31
  assign io_out_DataOut_0_bits_data_wen = io_in_DataIn_bits_data_wen;	// core/src/xbar.scala:5:7
  assign io_out_DataOut_0_bits_data_in = io_in_DataIn_bits_data_in;	// core/src/xbar.scala:5:7
  assign io_out_DataOut_0_bits_addr = io_in_DataIn_bits_addr - 32'h80000000;	// core/src/xbar.scala:5:7, :28:67
  assign io_out_DataOut_0_bits_be_n = io_in_DataIn_bits_be_n;	// core/src/xbar.scala:5:7
  assign io_out_DataOut_0_bits_ce_n = io_in_DataIn_bits_ce_n;	// core/src/xbar.scala:5:7
  assign io_out_DataOut_0_bits_oe_n = io_in_DataIn_bits_oe_n;	// core/src/xbar.scala:5:7
  assign io_out_DataOut_0_bits_we_n = io_in_DataIn_bits_we_n;	// core/src/xbar.scala:5:7
  assign io_out_DataOut_1_valid = _GEN_0 & io_in_DataIn_valid;	// core/src/bundles.scala:8:23, core/src/xbar.scala:5:7, :17:33, :26:56, :27:31
  assign io_out_DataOut_1_bits_data_wen = io_in_DataIn_bits_data_wen;	// core/src/xbar.scala:5:7
  assign io_out_DataOut_1_bits_data_in = io_in_DataIn_bits_data_in;	// core/src/xbar.scala:5:7
  assign io_out_DataOut_1_bits_addr = io_in_DataIn_bits_addr + 32'h7FC00000;	// core/src/xbar.scala:5:7, :28:67
  assign io_out_DataOut_1_bits_be_n = io_in_DataIn_bits_be_n;	// core/src/xbar.scala:5:7
  assign io_out_DataOut_1_bits_ce_n = io_in_DataIn_bits_ce_n;	// core/src/xbar.scala:5:7
  assign io_out_DataOut_1_bits_oe_n = io_in_DataIn_bits_oe_n;	// core/src/xbar.scala:5:7
  assign io_out_DataOut_1_bits_we_n = io_in_DataIn_bits_we_n;	// core/src/xbar.scala:5:7
  assign io_out_DataOut_2_valid = _GEN_1 & io_in_DataIn_valid;	// core/src/bundles.scala:8:23, core/src/xbar.scala:5:7, :17:33, :26:56, :27:31
  assign io_out_DataOut_2_bits_data_in = io_in_DataIn_bits_data_in;	// core/src/xbar.scala:5:7
  assign io_out_DataOut_2_bits_addr = io_in_DataIn_bits_addr + 32'h402FFC08;	// core/src/xbar.scala:5:7, :28:67
  assign io_out_DataOut_2_bits_ce_n = io_in_DataIn_bits_ce_n;	// core/src/xbar.scala:5:7
  assign io_out_DataOut_2_bits_oe_n = io_in_DataIn_bits_oe_n;	// core/src/xbar.scala:5:7
  assign io_out_DataOut_2_bits_we_n = io_in_DataIn_bits_we_n;	// core/src/xbar.scala:5:7
  assign io_out_BusOut_bits_data_out =
    _GEN_1
      ? io_in_BusIn_2_bits_data_out
      : _GEN_0 ? io_in_BusIn_1_bits_data_out : io_in_BusIn_0_bits_data_out;	// core/src/bundles.scala:8:23, core/src/xbar.scala:5:7, :26:56, :29:27
endmodule

module sram_ctrl(	// core/src/sram_ctrl.scala:5:7
  input         io_in_valid,	// core/src/sram_ctrl.scala:6:16
                io_in_bits_data_wen,	// core/src/sram_ctrl.scala:6:16
  input  [31:0] io_in_bits_data_in,	// core/src/sram_ctrl.scala:6:16
                io_in_bits_addr,	// core/src/sram_ctrl.scala:6:16
  input  [3:0]  io_in_bits_be_n,	// core/src/sram_ctrl.scala:6:16
  input         io_in_bits_ce_n,	// core/src/sram_ctrl.scala:6:16
                io_in_bits_oe_n,	// core/src/sram_ctrl.scala:6:16
                io_in_bits_we_n,	// core/src/sram_ctrl.scala:6:16
  output [31:0] io_out_bits_data_out,	// core/src/sram_ctrl.scala:6:16
  output        io_sram_data_wen,	// core/src/sram_ctrl.scala:6:16
  output [31:0] io_sram_data_in,	// core/src/sram_ctrl.scala:6:16
  input  [31:0] io_sram_data_out,	// core/src/sram_ctrl.scala:6:16
  output [19:0] io_sram_addr,	// core/src/sram_ctrl.scala:6:16
  output [3:0]  io_sram_be_n,	// core/src/sram_ctrl.scala:6:16
  output        io_sram_ce_n,	// core/src/sram_ctrl.scala:6:16
                io_sram_oe_n,	// core/src/sram_ctrl.scala:6:16
                io_sram_we_n	// core/src/sram_ctrl.scala:6:16
);

  assign io_out_bits_data_out = io_in_valid ? io_sram_data_out : 32'h0;	// core/src/sram_ctrl.scala:5:7, :11:23, :19:30, :23:25, :29:30
  assign io_sram_data_wen = io_in_valid & io_in_bits_data_wen;	// core/src/sram_ctrl.scala:5:7, :11:23, :12:26, :22:26
  assign io_sram_data_in = io_in_valid ? io_in_bits_data_in : 32'h0;	// core/src/sram_ctrl.scala:5:7, :11:23, :13:25, :23:25
  assign io_sram_addr = io_in_valid ? io_in_bits_addr[21:2] : 20'h0;	// core/src/sram_ctrl.scala:5:7, :11:23, :14:{22,40}, :24:22
  assign io_sram_be_n = io_in_valid ? io_in_bits_be_n : 4'h0;	// core/src/sram_ctrl.scala:5:7, :11:23, :15:22, :25:22
  assign io_sram_ce_n = ~io_in_valid | io_in_bits_ce_n;	// core/src/sram_ctrl.scala:5:7, :11:23, :16:22, :26:22
  assign io_sram_oe_n = ~io_in_valid | io_in_bits_oe_n;	// core/src/sram_ctrl.scala:5:7, :11:23, :16:22, :17:22, :26:22, :27:22
  assign io_sram_we_n = ~io_in_valid | io_in_bits_we_n;	// core/src/sram_ctrl.scala:5:7, :11:23, :16:22, :18:22, :26:22, :28:22
endmodule

// external module async_transmitter

// external module async_receiver

// VCS coverage exclude_file
module ram_16x8(	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  input  [3:0] R0_addr,
  input        R0_en,
               R0_clk,
  output [7:0] R0_data,
  input  [3:0] W0_addr,
  input        W0_en,
               W0_clk,
  input  [7:0] W0_data
);

  reg [7:0] Memory[0:15];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  always @(posedge W0_clk) begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    if (W0_en & 1'h1)	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      Memory[W0_addr] <= W0_data;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_MEM_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    reg [31:0] _RANDOM_MEM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `ifdef RANDOMIZE_MEM_INIT	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        for (logic [4:0] i = 5'h0; i < 5'h10; i += 5'h1) begin
          _RANDOM_MEM = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
          Memory[i[3:0]] = _RANDOM_MEM[7:0];	// src/main/scala/chisel3/util/Decoupled.scala:256:91
        end	// src/main/scala/chisel3/util/Decoupled.scala:256:91
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // ENABLE_INITIAL_MEM_
  assign R0_data = R0_en ? Memory[R0_addr] : 8'bx;	// src/main/scala/chisel3/util/Decoupled.scala:256:91
endmodule

module Queue16_UInt8(	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  input        clock,	// src/main/scala/chisel3/util/Decoupled.scala:243:7
               reset,	// src/main/scala/chisel3/util/Decoupled.scala:243:7
  output       io_enq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_enq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input  [7:0] io_enq_bits,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  input        io_deq_ready,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output       io_deq_valid,	// src/main/scala/chisel3/util/Decoupled.scala:255:14
  output [7:0] io_deq_bits	// src/main/scala/chisel3/util/Decoupled.scala:255:14
);

  reg  [3:0] enq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg  [3:0] deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40
  reg        maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27
  wire       ptr_match = enq_ptr_value == deq_ptr_value;	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:260:33
  wire       empty = ptr_match & ~maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :261:{25,28}
  wire       full = ptr_match & maybe_full;	// src/main/scala/chisel3/util/Decoupled.scala:259:27, :260:33, :262:24
  wire       do_enq = ~full & io_enq_valid;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :262:24, :286:19
  always @(posedge clock) begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    if (reset) begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      enq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      deq_ptr_value <= 4'h0;	// src/main/scala/chisel3/util/Counter.scala:61:40
      maybe_full <= 1'h0;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
    end
    else begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic do_deq = io_deq_ready & ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :261:25, :285:19
      if (do_enq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        enq_ptr_value <= enq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (do_deq)	// src/main/scala/chisel3/util/Decoupled.scala:51:35
        deq_ptr_value <= deq_ptr_value + 4'h1;	// src/main/scala/chisel3/util/Counter.scala:61:40, :77:24
      if (~(do_enq == do_deq))	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27, :276:{15,27}, :277:16
        maybe_full <= do_enq;	// src/main/scala/chisel3/util/Decoupled.scala:51:35, :259:27
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/chisel3/util/Decoupled.scala:243:7
        enq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][3:0];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        deq_ptr_value = _RANDOM[/*Zero width*/ 1'b0][7:4];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7
        maybe_full = _RANDOM[/*Zero width*/ 1'b0][8];	// src/main/scala/chisel3/util/Counter.scala:61:40, src/main/scala/chisel3/util/Decoupled.scala:243:7, :259:27
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ram_16x8 ram_ext (	// src/main/scala/chisel3/util/Decoupled.scala:256:91
    .R0_addr (deq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .R0_en   (1'h1),	// src/main/scala/chisel3/util/Decoupled.scala:243:7
    .R0_clk  (clock),
    .R0_data (io_deq_bits),
    .W0_addr (enq_ptr_value),	// src/main/scala/chisel3/util/Counter.scala:61:40
    .W0_en   (do_enq),	// src/main/scala/chisel3/util/Decoupled.scala:51:35
    .W0_clk  (clock),
    .W0_data (io_enq_bits)
  );
  assign io_enq_ready = ~full;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :262:24, :286:19
  assign io_deq_valid = ~empty;	// src/main/scala/chisel3/util/Decoupled.scala:243:7, :261:25, :285:19
endmodule

module uart_ctrl(	// core/src/uart_ctrl.scala:31:7
  input         clock,	// core/src/uart_ctrl.scala:31:7
                reset,	// core/src/uart_ctrl.scala:31:7
                io_in_valid,	// core/src/uart_ctrl.scala:32:16
  input  [31:0] io_in_bits_data_in,	// core/src/uart_ctrl.scala:32:16
                io_in_bits_addr,	// core/src/uart_ctrl.scala:32:16
  input         io_in_bits_ce_n,	// core/src/uart_ctrl.scala:32:16
                io_in_bits_oe_n,	// core/src/uart_ctrl.scala:32:16
                io_in_bits_we_n,	// core/src/uart_ctrl.scala:32:16
  output [31:0] io_out_bits_data_out,	// core/src/uart_ctrl.scala:32:16
  input         io_uart_rx,	// core/src/uart_ctrl.scala:32:16
  output        io_uart_tx	// core/src/uart_ctrl.scala:32:16
);

  wire       _recv_fifo_io_enq_ready;	// core/src/uart_ctrl.scala:41:27
  wire       _recv_fifo_io_deq_valid;	// core/src/uart_ctrl.scala:41:27
  wire [7:0] _recv_fifo_io_deq_bits;	// core/src/uart_ctrl.scala:41:27
  wire       _tran_fifo_io_enq_ready;	// core/src/uart_ctrl.scala:40:27
  wire       _tran_fifo_io_deq_valid;	// core/src/uart_ctrl.scala:40:27
  wire [7:0] _tran_fifo_io_deq_bits;	// core/src/uart_ctrl.scala:40:27
  wire       _recv_RxD_data_ready;	// core/src/uart_ctrl.scala:38:22
  wire [7:0] _recv_RxD_data;	// core/src/uart_ctrl.scala:38:22
  wire       _tran_TxD_busy;	// core/src/uart_ctrl.scala:37:22
  wire       _tran_io_TxD_start_T_1 = ~_tran_TxD_busy & _tran_fifo_io_deq_valid;	// core/src/uart_ctrl.scala:37:22, :40:27, :44:{26,44}
  wire       _GEN = io_in_valid & io_in_bits_addr == 32'h0;	// core/src/uart_ctrl.scala:62:{22,40}
  async_transmitter #(
    .Baud(9600),
    .ClkFrequency(50000000)
  ) tran_0 (	// core/src/uart_ctrl.scala:37:22
    .clk       (clock),
    .TxD_start (_tran_io_TxD_start_T_1),	// core/src/uart_ctrl.scala:44:44
    .TxD_data  (_tran_fifo_io_deq_bits),	// core/src/uart_ctrl.scala:40:27
    .TxD       (io_uart_tx),
    .TxD_busy  (_tran_TxD_busy)
  );
  async_receiver #(
    .Baud(9600),
    .ClkFrequency(50000000)
  ) recv (	// core/src/uart_ctrl.scala:38:22
    .clk            (clock),
    .RxD            (io_uart_rx),
    .RxD_data_ready (_recv_RxD_data_ready),
    .RxD_clear      (_recv_RxD_data_ready & _recv_fifo_io_enq_ready),	// core/src/uart_ctrl.scala:38:22, :41:27, :51:49
    .RxD_data       (_recv_RxD_data)
  );
  Queue16_UInt8 tran_fifo (	// core/src/uart_ctrl.scala:40:27
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_tran_fifo_io_enq_ready),
    .io_enq_valid
      (_GEN & ~io_in_bits_ce_n & ~io_in_bits_we_n & io_in_bits_oe_n
       & _tran_fifo_io_enq_ready),	// core/src/uart_ctrl.scala:40:27, :57:{24,43}, :62:{22,49}, :63:32, :67:54
    .io_enq_bits  (io_in_bits_data_in[7:0]),	// core/src/uart_ctrl.scala:60:48
    .io_deq_ready (_tran_io_TxD_start_T_1),	// core/src/uart_ctrl.scala:44:44
    .io_deq_valid (_tran_fifo_io_deq_valid),
    .io_deq_bits  (_tran_fifo_io_deq_bits)
  );
  Queue16_UInt8 recv_fifo (	// core/src/uart_ctrl.scala:41:27
    .clock        (clock),
    .reset        (reset),
    .io_enq_ready (_recv_fifo_io_enq_ready),
    .io_enq_valid (_recv_RxD_data_ready),	// core/src/uart_ctrl.scala:38:22
    .io_enq_bits  (_recv_RxD_data),	// core/src/uart_ctrl.scala:38:22
    .io_deq_ready
      (_GEN & ~io_in_bits_ce_n & io_in_bits_we_n & ~io_in_bits_oe_n
       & _recv_fifo_io_deq_valid),	// core/src/uart_ctrl.scala:41:27, :57:24, :58:60, :62:{22,49}, :64:32, :67:54
    .io_deq_valid (_recv_fifo_io_deq_valid),
    .io_deq_bits  (_recv_fifo_io_deq_bits)
  );
  assign io_out_bits_data_out =
    _GEN
      ? {24'h0, _recv_fifo_io_deq_bits}
      : {30'h0, _recv_fifo_io_deq_valid, _tran_fifo_io_enq_ready};	// core/src/uart_ctrl.scala:31:7, :40:27, :41:27, :62:{22,49}, :65:{30,36,41}, :67:54, :70:{36,41}
endmodule

module subtop(	// core/src/subtop.scala:5:7
  input         clock,	// core/src/subtop.scala:5:7
                reset,	// core/src/subtop.scala:5:7
  output        io_base_data_wen,	// core/src/subtop.scala:6:16
  output [31:0] io_base_data_in,	// core/src/subtop.scala:6:16
  input  [31:0] io_base_data_out,	// core/src/subtop.scala:6:16
  output [19:0] io_base_addr,	// core/src/subtop.scala:6:16
  output [3:0]  io_base_be_n,	// core/src/subtop.scala:6:16
  output        io_base_ce_n,	// core/src/subtop.scala:6:16
                io_base_oe_n,	// core/src/subtop.scala:6:16
                io_base_we_n,	// core/src/subtop.scala:6:16
                io_ext_data_wen,	// core/src/subtop.scala:6:16
  output [31:0] io_ext_data_in,	// core/src/subtop.scala:6:16
  input  [31:0] io_ext_data_out,	// core/src/subtop.scala:6:16
  output [19:0] io_ext_addr,	// core/src/subtop.scala:6:16
  output [3:0]  io_ext_be_n,	// core/src/subtop.scala:6:16
  output        io_ext_ce_n,	// core/src/subtop.scala:6:16
                io_ext_oe_n,	// core/src/subtop.scala:6:16
                io_ext_we_n,	// core/src/subtop.scala:6:16
  input         io_uart_rx,	// core/src/subtop.scala:6:16
  output        io_uart_tx	// core/src/subtop.scala:6:16
);

  wire [31:0] _uart_ctrl_io_out_bits_data_out;	// core/src/subtop.scala:20:27
  wire [31:0] _ext_ram_ctrl_io_out_bits_data_out;	// core/src/subtop.scala:19:30
  wire [31:0] _base_ram_ctrl_io_out_bits_data_out;	// core/src/subtop.scala:18:31
  wire        _xbar_io_in_DataIn_ready;	// core/src/subtop.scala:12:22
  wire        _xbar_io_out_DataOut_0_valid;	// core/src/subtop.scala:12:22
  wire        _xbar_io_out_DataOut_0_bits_data_wen;	// core/src/subtop.scala:12:22
  wire [31:0] _xbar_io_out_DataOut_0_bits_data_in;	// core/src/subtop.scala:12:22
  wire [31:0] _xbar_io_out_DataOut_0_bits_addr;	// core/src/subtop.scala:12:22
  wire [3:0]  _xbar_io_out_DataOut_0_bits_be_n;	// core/src/subtop.scala:12:22
  wire        _xbar_io_out_DataOut_0_bits_ce_n;	// core/src/subtop.scala:12:22
  wire        _xbar_io_out_DataOut_0_bits_oe_n;	// core/src/subtop.scala:12:22
  wire        _xbar_io_out_DataOut_0_bits_we_n;	// core/src/subtop.scala:12:22
  wire        _xbar_io_out_DataOut_1_valid;	// core/src/subtop.scala:12:22
  wire        _xbar_io_out_DataOut_1_bits_data_wen;	// core/src/subtop.scala:12:22
  wire [31:0] _xbar_io_out_DataOut_1_bits_data_in;	// core/src/subtop.scala:12:22
  wire [31:0] _xbar_io_out_DataOut_1_bits_addr;	// core/src/subtop.scala:12:22
  wire [3:0]  _xbar_io_out_DataOut_1_bits_be_n;	// core/src/subtop.scala:12:22
  wire        _xbar_io_out_DataOut_1_bits_ce_n;	// core/src/subtop.scala:12:22
  wire        _xbar_io_out_DataOut_1_bits_oe_n;	// core/src/subtop.scala:12:22
  wire        _xbar_io_out_DataOut_1_bits_we_n;	// core/src/subtop.scala:12:22
  wire        _xbar_io_out_DataOut_2_valid;	// core/src/subtop.scala:12:22
  wire [31:0] _xbar_io_out_DataOut_2_bits_data_in;	// core/src/subtop.scala:12:22
  wire [31:0] _xbar_io_out_DataOut_2_bits_addr;	// core/src/subtop.scala:12:22
  wire        _xbar_io_out_DataOut_2_bits_ce_n;	// core/src/subtop.scala:12:22
  wire        _xbar_io_out_DataOut_2_bits_oe_n;	// core/src/subtop.scala:12:22
  wire        _xbar_io_out_DataOut_2_bits_we_n;	// core/src/subtop.scala:12:22
  wire [31:0] _xbar_io_out_BusOut_bits_data_out;	// core/src/subtop.scala:12:22
  wire        _core_io_bus_out_valid;	// core/src/subtop.scala:11:22
  wire        _core_io_bus_out_bits_data_wen;	// core/src/subtop.scala:11:22
  wire [31:0] _core_io_bus_out_bits_data_in;	// core/src/subtop.scala:11:22
  wire [31:0] _core_io_bus_out_bits_addr;	// core/src/subtop.scala:11:22
  wire [3:0]  _core_io_bus_out_bits_be_n;	// core/src/subtop.scala:11:22
  wire        _core_io_bus_out_bits_ce_n;	// core/src/subtop.scala:11:22
  wire        _core_io_bus_out_bits_oe_n;	// core/src/subtop.scala:11:22
  wire        _core_io_bus_out_bits_we_n;	// core/src/subtop.scala:11:22
  core core (	// core/src/subtop.scala:11:22
    .clock                    (clock),
    .reset                    (reset),
    .io_bus_in_bits_data_out  (_xbar_io_out_BusOut_bits_data_out),	// core/src/subtop.scala:12:22
    .io_bus_out_ready         (_xbar_io_in_DataIn_ready),	// core/src/subtop.scala:12:22
    .io_bus_out_valid         (_core_io_bus_out_valid),
    .io_bus_out_bits_data_wen (_core_io_bus_out_bits_data_wen),
    .io_bus_out_bits_data_in  (_core_io_bus_out_bits_data_in),
    .io_bus_out_bits_addr     (_core_io_bus_out_bits_addr),
    .io_bus_out_bits_be_n     (_core_io_bus_out_bits_be_n),
    .io_bus_out_bits_ce_n     (_core_io_bus_out_bits_ce_n),
    .io_bus_out_bits_oe_n     (_core_io_bus_out_bits_oe_n),
    .io_bus_out_bits_we_n     (_core_io_bus_out_bits_we_n)
  );
  xbar xbar (	// core/src/subtop.scala:12:22
    .io_in_DataIn_ready             (_xbar_io_in_DataIn_ready),
    .io_in_DataIn_valid             (_core_io_bus_out_valid),	// core/src/subtop.scala:11:22
    .io_in_DataIn_bits_data_wen     (_core_io_bus_out_bits_data_wen),	// core/src/subtop.scala:11:22
    .io_in_DataIn_bits_data_in      (_core_io_bus_out_bits_data_in),	// core/src/subtop.scala:11:22
    .io_in_DataIn_bits_addr         (_core_io_bus_out_bits_addr),	// core/src/subtop.scala:11:22
    .io_in_DataIn_bits_be_n         (_core_io_bus_out_bits_be_n),	// core/src/subtop.scala:11:22
    .io_in_DataIn_bits_ce_n         (_core_io_bus_out_bits_ce_n),	// core/src/subtop.scala:11:22
    .io_in_DataIn_bits_oe_n         (_core_io_bus_out_bits_oe_n),	// core/src/subtop.scala:11:22
    .io_in_DataIn_bits_we_n         (_core_io_bus_out_bits_we_n),	// core/src/subtop.scala:11:22
    .io_in_BusIn_0_bits_data_out    (_base_ram_ctrl_io_out_bits_data_out),	// core/src/subtop.scala:18:31
    .io_in_BusIn_1_bits_data_out    (_ext_ram_ctrl_io_out_bits_data_out),	// core/src/subtop.scala:19:30
    .io_in_BusIn_2_bits_data_out    (_uart_ctrl_io_out_bits_data_out),	// core/src/subtop.scala:20:27
    .io_out_DataOut_0_valid         (_xbar_io_out_DataOut_0_valid),
    .io_out_DataOut_0_bits_data_wen (_xbar_io_out_DataOut_0_bits_data_wen),
    .io_out_DataOut_0_bits_data_in  (_xbar_io_out_DataOut_0_bits_data_in),
    .io_out_DataOut_0_bits_addr     (_xbar_io_out_DataOut_0_bits_addr),
    .io_out_DataOut_0_bits_be_n     (_xbar_io_out_DataOut_0_bits_be_n),
    .io_out_DataOut_0_bits_ce_n     (_xbar_io_out_DataOut_0_bits_ce_n),
    .io_out_DataOut_0_bits_oe_n     (_xbar_io_out_DataOut_0_bits_oe_n),
    .io_out_DataOut_0_bits_we_n     (_xbar_io_out_DataOut_0_bits_we_n),
    .io_out_DataOut_1_valid         (_xbar_io_out_DataOut_1_valid),
    .io_out_DataOut_1_bits_data_wen (_xbar_io_out_DataOut_1_bits_data_wen),
    .io_out_DataOut_1_bits_data_in  (_xbar_io_out_DataOut_1_bits_data_in),
    .io_out_DataOut_1_bits_addr     (_xbar_io_out_DataOut_1_bits_addr),
    .io_out_DataOut_1_bits_be_n     (_xbar_io_out_DataOut_1_bits_be_n),
    .io_out_DataOut_1_bits_ce_n     (_xbar_io_out_DataOut_1_bits_ce_n),
    .io_out_DataOut_1_bits_oe_n     (_xbar_io_out_DataOut_1_bits_oe_n),
    .io_out_DataOut_1_bits_we_n     (_xbar_io_out_DataOut_1_bits_we_n),
    .io_out_DataOut_2_valid         (_xbar_io_out_DataOut_2_valid),
    .io_out_DataOut_2_bits_data_in  (_xbar_io_out_DataOut_2_bits_data_in),
    .io_out_DataOut_2_bits_addr     (_xbar_io_out_DataOut_2_bits_addr),
    .io_out_DataOut_2_bits_ce_n     (_xbar_io_out_DataOut_2_bits_ce_n),
    .io_out_DataOut_2_bits_oe_n     (_xbar_io_out_DataOut_2_bits_oe_n),
    .io_out_DataOut_2_bits_we_n     (_xbar_io_out_DataOut_2_bits_we_n),
    .io_out_BusOut_bits_data_out    (_xbar_io_out_BusOut_bits_data_out)
  );
  sram_ctrl base_ram_ctrl (	// core/src/subtop.scala:18:31
    .io_in_valid          (_xbar_io_out_DataOut_0_valid),	// core/src/subtop.scala:12:22
    .io_in_bits_data_wen  (_xbar_io_out_DataOut_0_bits_data_wen),	// core/src/subtop.scala:12:22
    .io_in_bits_data_in   (_xbar_io_out_DataOut_0_bits_data_in),	// core/src/subtop.scala:12:22
    .io_in_bits_addr      (_xbar_io_out_DataOut_0_bits_addr),	// core/src/subtop.scala:12:22
    .io_in_bits_be_n      (_xbar_io_out_DataOut_0_bits_be_n),	// core/src/subtop.scala:12:22
    .io_in_bits_ce_n      (_xbar_io_out_DataOut_0_bits_ce_n),	// core/src/subtop.scala:12:22
    .io_in_bits_oe_n      (_xbar_io_out_DataOut_0_bits_oe_n),	// core/src/subtop.scala:12:22
    .io_in_bits_we_n      (_xbar_io_out_DataOut_0_bits_we_n),	// core/src/subtop.scala:12:22
    .io_out_bits_data_out (_base_ram_ctrl_io_out_bits_data_out),
    .io_sram_data_wen     (io_base_data_wen),
    .io_sram_data_in      (io_base_data_in),
    .io_sram_data_out     (io_base_data_out),
    .io_sram_addr         (io_base_addr),
    .io_sram_be_n         (io_base_be_n),
    .io_sram_ce_n         (io_base_ce_n),
    .io_sram_oe_n         (io_base_oe_n),
    .io_sram_we_n         (io_base_we_n)
  );
  sram_ctrl ext_ram_ctrl (	// core/src/subtop.scala:19:30
    .io_in_valid          (_xbar_io_out_DataOut_1_valid),	// core/src/subtop.scala:12:22
    .io_in_bits_data_wen  (_xbar_io_out_DataOut_1_bits_data_wen),	// core/src/subtop.scala:12:22
    .io_in_bits_data_in   (_xbar_io_out_DataOut_1_bits_data_in),	// core/src/subtop.scala:12:22
    .io_in_bits_addr      (_xbar_io_out_DataOut_1_bits_addr),	// core/src/subtop.scala:12:22
    .io_in_bits_be_n      (_xbar_io_out_DataOut_1_bits_be_n),	// core/src/subtop.scala:12:22
    .io_in_bits_ce_n      (_xbar_io_out_DataOut_1_bits_ce_n),	// core/src/subtop.scala:12:22
    .io_in_bits_oe_n      (_xbar_io_out_DataOut_1_bits_oe_n),	// core/src/subtop.scala:12:22
    .io_in_bits_we_n      (_xbar_io_out_DataOut_1_bits_we_n),	// core/src/subtop.scala:12:22
    .io_out_bits_data_out (_ext_ram_ctrl_io_out_bits_data_out),
    .io_sram_data_wen     (io_ext_data_wen),
    .io_sram_data_in      (io_ext_data_in),
    .io_sram_data_out     (io_ext_data_out),
    .io_sram_addr         (io_ext_addr),
    .io_sram_be_n         (io_ext_be_n),
    .io_sram_ce_n         (io_ext_ce_n),
    .io_sram_oe_n         (io_ext_oe_n),
    .io_sram_we_n         (io_ext_we_n)
  );
  uart_ctrl uart_ctrl (	// core/src/subtop.scala:20:27
    .clock                (clock),
    .reset                (reset),
    .io_in_valid          (_xbar_io_out_DataOut_2_valid),	// core/src/subtop.scala:12:22
    .io_in_bits_data_in   (_xbar_io_out_DataOut_2_bits_data_in),	// core/src/subtop.scala:12:22
    .io_in_bits_addr      (_xbar_io_out_DataOut_2_bits_addr),	// core/src/subtop.scala:12:22
    .io_in_bits_ce_n      (_xbar_io_out_DataOut_2_bits_ce_n),	// core/src/subtop.scala:12:22
    .io_in_bits_oe_n      (_xbar_io_out_DataOut_2_bits_oe_n),	// core/src/subtop.scala:12:22
    .io_in_bits_we_n      (_xbar_io_out_DataOut_2_bits_we_n),	// core/src/subtop.scala:12:22
    .io_out_bits_data_out (_uart_ctrl_io_out_bits_data_out),
    .io_uart_rx           (io_uart_rx),
    .io_uart_tx           (io_uart_tx)
  );
endmodule

